<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.Blazor</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.Blazor.Internal.AnimationSettings">
            <summary>
            Animation properties for performing animation transition.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.AnimationSettings.Duration">
            <summary>
            Gets or sets the animation duration.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.AnimationSettings.Name">
            <summary>
            Gets or sets the animation name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.AnimationSettings.TimingFunction">
            <summary>
            Gets or sets the animation timing function.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.AnimationSettings.Delay">
            <summary>
            Gets or sets the animation delay.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.RippleSettings">
            <summary>
            Ripple settings for performing the ripple effect.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.RippleSettings.Selector">
            <summary>
            Gets or sets the ripple selector.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.RippleSettings.Ignore">
            <summary>
            Gets or sets the ripple ignore.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.RippleSettings.RippleFlag">
            <summary>
            Gets or sets the ripple flag.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.RippleSettings.IsCenterRipple">
            <summary>
            Gets or sets the boolean value whether ripple center enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.RippleSettings.Duration">
            <summary>
            Gets or sets the ripple duration.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.BlazorIdJsonConverter">
            <summary>
            Custom JSON serialization type converter for the Template DataHashTable properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.BlazorIdJsonConverter.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Blazor.Internal.BlazorIdJsonConverter"/> class.
            </summary>
            <param name="values">Dictionary values for json convert.</param>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.BlazorIdJsonConverter.HashData">
            <summary>
            Gets or sets hash data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.BlazorIdJsonConverter.CanRead">
            <summary>
            Gets a value indicating whether this Newtonsoft.Json.JsonConverter can read JSON.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.BlazorIdJsonConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>true if this instance can convert the specified object type; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.BlazorIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The Newtonsoft.Json.JsonWriter to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.BlazorIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The Newtonsoft.Json.JsonReader to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.NonFlagStringEnumConverter">
            <summary>
            Used to convert the enum integer values into a string
            Also, ignores the string conversion of number enum.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.NonFlagStringEnumConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>true if this instance can convert the specified object type; otherwise, false.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.PackageNameAttribute">
            <summary>
            Used to get the package name for specific component script loading.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.PackageNameAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Blazor.Internal.PackageNameAttribute"/> class.
            </summary>
            <param name="packageName">package name.</param>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.PackageNameAttribute.PackageName">
            <summary>
            Gets the package name.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.FontInfo">
            <summary>
            Circular, Linear Gauges and TreeMap common property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.FontInfo.Average">
            <summary>
            Gets or sets average.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.FontInfo.Chars">
            <summary>
            Gets or sets chars.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.ScriptModules">
            <summary>
            Script modules for the blazor components.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.AccumulationChart">
            <summary>
            AccumulationChart.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.Base">
            <summary>
            Base.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.Calendar">
            <summary>
            Calendar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.DatePicker">
            <summary>
            DatePicker.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.DateRangePicker">
            <summary>
            DateRangePicker.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.DateTimePicker">
            <summary>
            DateTimePicker.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.Timepicker">
            <summary>
            Timepicker.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.Chart">
            <summary>
            Chart.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.Compression">
            <summary>
            Compression.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.Drawings">
            <summary>
            Drawings.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.DropDownBase">
            <summary>
            DropDownBase.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.DropDownList">
            <summary>
            DropDownList.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.AutoComplete">
            <summary>
            AutoComplete.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.ComboBox">
            <summary>
            ComboBox.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.MultiSelect">
            <summary>
            MultiSelect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.ExcelExport">
            <summary>
            ExcelExport.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.FileUtils">
            <summary>
            FileUtils.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.Gantt">
            <summary>
            Gantt.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.InplaceEditor">
            <summary>
            InplaceEditor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.InputBase">
            <summary>
            InputBase.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.FormValidator">
            <summary>
            FormValidator.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.TextBox">
            <summary>
            TextBox.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.NumericTextBox">
            <summary>
            NumericTextBox.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.MaskedTextBox">
            <summary>
            MaskedTextBox.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.Uploader">
            <summary>
            Uploader.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.Kanban">
            <summary>
            Kanban.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.OfficeChart">
            <summary>
            OfficeChart.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.PdfExport">
            <summary>
            PdfExport.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.PdfViewer">
            <summary>
            PdfViewer.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.TreeGrid">
            <summary>
            TreeGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.Grid">
            <summary>
            Grid.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.Pager">
            <summary>
            Pager.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.PopupsBase">
            <summary>
            PopupsBase.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.Popup">
            <summary>
            Popup.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.Accordion">
            <summary>
            Accordion.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.ListView">
            <summary>
            ListView.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.ListBase">
            <summary>
            ListBase.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.ButtonBase">
            <summary>
            ButtonBase.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.Button">
            <summary>
            Button.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.ContextMenu">
            <summary>
            ContextMenu.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.NavigationsBase">
            <summary>
            NavigationsBase.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.SplitbuttonsBase">
            <summary>
            SplitbuttonsBase.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.Tooltip">
            <summary>
            Tooltip.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.Diagram">
            <summary>
            Diagram.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.SymbolPalette">
            <summary>
            SymbolPalette.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.Overview">
            <summary>
            Overview.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.Dialog">
            <summary>
            Dialog.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.Spinner">
            <summary>
            Spinner.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.SfSvgExport">
            <summary>
            SfSvgExport.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.Sortable">
            <summary>
            Sortable.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.ScriptModules.SfTextBox">
            <summary>
            SfTextbox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.SfScriptModules">
            <summary>
            Script modules for the native rendering components.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfBase">
            <summary>
            SfBase.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfBaseExtended">
            <summary>
            SfBaseExtended.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfGrid">
            <summary>
            SfGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfChart">
            <summary>
            SfChart.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfAccumulationChart">
            <summary>
            SfAccumulationChart.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfRangeNavigator">
            <summary>
            SfRangeNavigator.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfProgressBar">
            <summary>
            SfProgressBar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfGantt">
            <summary>
            SfGantt.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfTreeGrid">
            <summary>
            SfTreeGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfPivotView">
            <summary>
            SfPivotView.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfTextBox">
            <summary>
            SfTextBox.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfNumericTextBox">
            <summary>
            SfNumericTextBox.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfMaskedTextBox">
            <summary>
            SfMaskedTextBox.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfUploader">
            <summary>
            SfUploader.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfSlider">
            <summary>
            SfSlider.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfDropDownList">
            <summary>
            SfDropDownList.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfMultiSelect">
            <summary>
            SfMultiSelect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfCalendarBase">
            <summary>
            SfCalendarBase.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfDatePicker">
            <summary>
            SfDatePicker.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfTimePicker">
            <summary>
            SfTimePicker.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfToolbar">
            <summary>
            SfToolbar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfSplitter">
            <summary>
            SfSplitter.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfDashboardLayout">
            <summary>
            SfDashboardLayout.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfDialog">
            <summary>
            SfDialog.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfTab">
            <summary>
            SfTab.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfDropDownButton">
            <summary>
            SfDropDownButton.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfTooltip">
            <summary>
            SfTooltip.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfBarcode">
            <summary>
            SfBarcode.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfAccordion">
            <summary>
            SfAccordion.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfContextMenu">
            <summary>
            SfContextMenu.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfMenu">
            <summary>
            SfMenu.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfMaps">
            <summary>
            SfMaps.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfListView">
            <summary>
            SfListView.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfFileManager">
            <summary>
            SfFileManager.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfTreeView">
            <summary>
            SfTreeView.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfSidebar">
            <summary>
            SfSidebar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfToast">
            <summary>
            SfToast.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfDateRangePicker">
            <summary>
            SfDateRangePicker.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfRichTextEditor">
            <summary>
            SfRichTextEditor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfSpinner">
            <summary>
            SfSpinner.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfCircularGauge">
            <summary>
            SfCircularGauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfKanban">
            <summary>
            SfKanban.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfSchedule">
            <summary>
            SfSchedule.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfTreeMap">
            <summary>
            SfTreeMap.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfLinearGauge">
            <summary>
            SfLinearGauge.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfListBox">
            <summary>
            SfListBox.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfInPlaceEditor">
            <summary>
            SfInPlaceEditor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfColorPicker">
            <summary>
            SfColorPicker.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfSmithChart">
            <summary>
            SfSmithChart.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfBulletChart">
            <summary>
            SfBulletChart.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfSparkline">
            <summary>
            SfSparkline.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfStockChart">
            <summary>
            SfStockChart.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfDocumentEditorContainer">
            <summary>
            SfDocumentEditorContainer.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfDocumentEditor">
            <summary>
            SfDocumentEditor.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfHeatMap">
            <summary>
            HeatMap.
            </summary> 
        </member>
        <member name="F:Syncfusion.Blazor.Internal.SfScriptModules.SfDiagramComponent">
            <summary>
            SfDiagramComponent
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.GlobalizeJsonGenerator">
            <summary>
            Generates globalization details for the specific culture in JSON format.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.GlobalizeJsonGenerator.GetGlobalizeJsonString(System.Globalization.CultureInfo)">
            <summary>
            Returns the globalized JSON string.
            </summary>
            <param name="cultureData">Specific culture information.</param>
            <returns>Json serialized globalize string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.GlobalizeJsonGenerator.GetGlobalizeContent(System.Globalization.CultureInfo)">
            <summary>
            Returns current culture information in the Dictionary format.
            </summary>
            <param name="cultureData">Specific culture information.</param>
            <returns>Localized contents.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.Intl">
            <summary>
            A static class for the Internationalization common features and functionalities.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.Intl.CurrentCulture">
            <summary>
            Gets or sets current culture.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.Intl.CurrencyData">
            <summary>
            Gets or sets currency date.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.Intl.DefaultCulture">
            <summary>
            Gets or sets default culture.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.Intl.GetDateFormat``1(``0,System.String,System.String)">
            <summary>
            Returns formatted date string based on the current culture.
            </summary>
            <typeparam name="T">The date format type.</typeparam>
            <param name="date">Date value to be formatted.</param>
            <param name="format">Format string for processing date format.</param>
            <param name="culture">Optional parameter to override the current culture.</param>
            <returns>Returns formatted string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.Intl.GetNumericFormat``1(``0,System.String,System.String,System.String)">
            <summary>
            Returns formatted number string based on the current culture.
            </summary>
            <typeparam name="T">The number format type.</typeparam>
            <param name="numberValue">Number value to be formatted.</param>
            <param name="format">Format string for processing number format.</param>
            <param name="culture">Optional parameter to override the current culture.</param>
            <param name="currencyCode">Optional parameter to process the currency code.</param>
            <returns>Returns formatted string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.Intl.GetWeekOfYear(System.DateTime,System.String,System.Boolean,System.Globalization.CalendarWeekRule)">
            <summary>
            Returns the week of year based on the current culture.
            </summary>
            <param name="dateValue">Date value to be calculated.</param>
            <param name="culture">Optional parameter to override the current culture.</param>
            <param name="isLastDayOfWeek">Optional paramaeter to pass last day of week.</param>
            <param name="weekRule">Optional parameter to pass week rules.</param>
            <returns>Returns the week of year.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.Intl.GetNarrowDayNames(System.String)">
            <summary>
            Returns the narrow day names based on the current culture.
            </summary>
            <param name="culture">Optional parameter to override the current culture.</param>
            <returns>Returns the narrow day names.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.Intl.GetCulture(System.String)">
            <summary>
            Returns the current culture information.
            </summary>
            <param name="culture">Optional parameter to override the current culture.</param>
            <returns>Returns the current culture.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.Intl.SetCulture(System.Globalization.CultureInfo)">
            <summary>
            Set culture info to Intl class.
            </summary>
            <param name="culture">Culture info needs to be set to the Intl.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.Intl.SetCulture(System.String)">
            <summary>
            Set culture string to Intl class.
            </summary>
            <param name="culture">Culture string needs to be set to the Intl.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.Intl.GetNativeDigits(System.String,System.String[])">
            <summary>
            Converts native digits based on the current culture.
            </summary>
            <param name="formatValue">Format to be converted to native digits.</param>
            <param name="nativeDigits">Native digits of the current culture.</param>
            <returns>Returns the current culture.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.Intl.GetCultureFormats(System.String)">
            <summary>
            Returns the required patterns from the current culture.
            </summary>
            <param name="cultureCode">Culture code to be processed for the required patterns.</param>
            <returns>Returns culture patterns.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.ISfCircularComponent">
            <summary>
            An interface for circular component reference.
            GridColumns -> GridColumn -> GridColumns -> GridColumn.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.ISfCircularComponent.UpdateChildProperties(System.String,System.Object)">
            <summary>
            Update child property values from parent component.
            </summary>
            <param name="key">Child property name.</param>
            <param name="propertyValue">Child property value.</param>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.IBaseInit">
            <summary>
            Common interface for blazor components.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.IBaseInit.OnInitRenderAsync">
            <summary>
            Invoked after script loaded at first rendering.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.SyncfusionStringLocalizer">
            <summary>
            Implements the Syncfusion Localizer for injecting its service.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.SyncfusionStringLocalizer.ResourceManager">
            <summary>
            Gets the <see cref="T:System.Resources.ResourceManager" /> for localization.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SyncfusionStringLocalizer.GetText(System.String)">
            <summary>
            Get localized text from resource file.
            </summary>
            <param name="key">Property key to return localized value.</param>
            <returns>Locale text.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.LocalizerDetails">
            <summary>
            Maintains the Localizer details for performing Localization.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.LocalizerDetails.#ctor(System.Resources.ResourceManager,System.Globalization.CultureInfo,Syncfusion.Blazor.SyncfusionBlazorService,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Blazor.Internal.LocalizerDetails"/> class.
            </summary>
            <param name="resourceManager">Resource manager instance.</param>
            <param name="culture">culture information.</param>
            <param name="service">Syncfusion Blazor service.</param>
            <param name="keys">Locale key values.</param>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.LocalizerDetails.Culture">
            <summary>
            Gets or sets culture.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.LocalizerDetails.LocaleKeys">
            <summary>
            Gets or sets locale keys.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.LocalizerDetails.SyncfusionService">
            <summary>
            Gets or sets Syncfusion service.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.LocalizerDetails.Manager">
            <summary>
            Gets or sets resource manager.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.LocalizerDetails.GetLocaleText">
            <summary>
            Returns the locale text for blazor components from the resource file.
            </summary>
            <returns>Locale text.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.LocalizerDetails.GetString(System.String)">
            <summary>
            Returns the locale text from the ResourceManager.
            </summary>
            <param name="localeKey">locale key to retrieve the locale value.</param>
            <returns>Locale content.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.LocalizerDetails.GetMappingLocale(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.String}})">
            <summary>
            Updates the components locale dictionary.
            </summary>
            <param name="key">Component name.</param>
            <param name="componentLocale">List of components locale collections in dictionary.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.LocalizerDetails.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.ResourceManager">
            <summary>
            Resource manager component for loading init interop script in .NET Core 3.0 applications.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ResourceManager.LocaleKeys">
            <summary>
            Add the component and its dependent component locale keys from the LocaleService/GetMappingLocale method.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ResourceManager.Parent">
            <summary>
            Gets or sets parent component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ResourceManager.SyncfusionService">
            <summary>
            Gets or sets Syncfusion Blazor service.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ResourceManager.JsRuntime">
            <summary>
            Gets or sets IJSRuntime.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ResourceManager.Localizer">
            <summary>
            Gets or sets Syncfusion localizer.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.ResourceManager.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.ResourceManager.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.ResourceManager.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            Renders the component to the supplied Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder.
            </summary>
            <param name="builder">A Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder that will receive the render output.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.ResourceManager.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.ResourceManager.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.SfBaseUtils">
            <summary>
            Common utility methods which can be used in all the Syncfusion Blazor components.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.UpdateDictionary(System.String,System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Update the given dictionary value based on the key value check.
            </summary>
            <param name="key">Key needs to be updated in the dictionary.</param>
            <param name="data">Value needs to be updated for the specific key.</param>
            <param name="dictionary">Dictionary needs to be add or updated.</param>
            <returns>Returns updated Dictionary.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.GetAttribtues(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Update the dictionary based on the @attributes key value check.
            <param name="classList">class list to be added in the string format.</param>
            <param name="dictionary">@attribute property value for updating class list.</param>
            <returns>Returns Dictionary.</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.Equals``1(``0,``0)">
            <summary>
            Returns the bool value based on comparing given values with the EqualityComparer.
            </summary>
            <param name="oldValue">Old value of the property.</param>
            <param name="newValue">New value of the property.</param>
            <returns>Returns bool value.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.UpdateProperty``1(``0,``0,Microsoft.AspNetCore.Components.EventCallback{``0},Microsoft.AspNetCore.Components.Forms.EditContext,System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Invoking events for two-way bindings property changes.
            </summary>
            <param name="publicValue">Public value needs to be updated in the two-way binding event.</param>
            <param name="privateValue">Private value to compare with public value for invoking two-way bindings.</param>
            <param name="eventCallback">EventCallback for invoking two-way binding event handler function.</param>
            <param name="editContext">EditContext instance for invoking NotifyFieldChanged method.</param>
            <param name="expression">Expression needs to be passed in the NotifyFieldChanged method.</param>
            <returns>Returns public property value.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.ToDoubleArray(System.Object)">
            <summary>
            Convert given arguments into double array.
            </summary>
            <param name="args">arguments for convert into double array.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.ValidateExpression``1(Microsoft.AspNetCore.Components.Forms.EditContext,System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Notify the field changes of the EditContext with specified expression.
            </summary>
            <param name="editContext">EditContext instance for invoking the NotifyFieldChanged method.</param>
            <param name="expression">Expression need to be passed in the NotifyFieldChanged method.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.ImportModule(Microsoft.JSInterop.IJSRuntime,Syncfusion.Blazor.Internal.SfScriptModules,System.String)">
            <summary>
            Import component specific interop script modules in the application.
            </summary>
            <param name="jsRuntime">JSRuntime service to invoke import method.</param>
            <param name="scriptModule">Component specific interop script module.</param>
            <param name="hashKey">Component specific interop script module Key.</param>
            <returns>JSObjectReference.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.ImportModules(Microsoft.JSInterop.IJSRuntime,System.Collections.Generic.List{Syncfusion.Blazor.Internal.ScriptModules},System.String)">
            <summary>
            Import component dependent interop script modules in the application.
            </summary>
            <param name="jsRuntime">JSRuntime service to invoke import method.</param>
            <param name="scriptModules">Component specific interop script module.</param>
            <param name="hashKey">Component specific interop script module Key.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.ImportScripts(Microsoft.JSInterop.IJSRuntime,System.String)">
            <summary>
            Async method to execute script module import.
            </summary>
            <param name="jsRuntime">JSRuntime service to invoke import method.</param>
            <param name="modulePath">Module path to be load the script modules.</param>
            <returns>Async Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.InvokeEvent``1(System.Object,``0)">
            <summary>
            Invokes event handler function of the corresponding event name with parameters.
            </summary>
            <param name="eventFn">EventCallback to invoke the event handler method.</param>
            <param name="eventArgs">Arguments of the event handler method.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.ChangeType(System.Object,System.Type,System.Boolean,System.Boolean)">
            <summary>
            Convert an object to the specified type.
            </summary>
            <param name="dataValue">Value needs to be converted with specific type.</param>
            <param name="conversionType">Type that needs to be converted to the given value.</param>
            <param name="isClientChange">Validate the client changes for the components.</param>
            <param name="isParseValue">Validate the Parse Value for the components.</param>
            <returns>Returns converted object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.GenerateID(System.String)">
            <summary>
            Generate the unique Guid.
            </summary>
            <param name="name">add addtional name into ID.</param>
            <returns>Returns ID string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.InvokeMethod(Microsoft.JSInterop.IJSRuntime,System.String,System.Object[])">
            <summary>
            Invoke void return type methods.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.InvokeMethod``1(Microsoft.JSInterop.IJSRuntime,System.String,System.Object[])">
            <summary>
            Invoke object return type methods.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.CompareValues``1(``0,``0)">
            <summary>
            compare the two values and returns a value indicating whether one value is less than, equal to, or greater than the second value.
            </summary>
            <returns>Less than Zero - value1 is less than value 2.</returns>
            <returns>Zero - Both are equals.</returns>
            <returns>Greater than Zero - value1 is greater than value 2.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.AddClass(System.String,System.String)">
            <summary>
            Add a class to the existing string content.
            </summary>
            <param name="prevClass">Previous class list in string format.</param>
            <param name="className">Class name needs to be added in the string content.</param>
            <returns>Returns class string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.RemoveClass(System.String,System.String)">
            <summary>
            Remove a class from the existing string content.
            </summary>
            <param name="prevClass">Previous class list in string format.</param>
            <param name="className">Class name needs to be removed in the string content.</param>
            <returns>Returns class string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.AddArrayValue``1(``0[],``0)">
            <summary>
            Adds a value to a array.
            <param name="arrayValue">array to which value should be added.</param>
            <param name="addValue">value to be added to the array</param>
            <returns>Returns Dictionary.</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.RemoveArrayValue``1(``0[],``0)">
            <summary>
            Removes a value from a array.
            <param name="arrayValue">array to which value should be removed.</param>
            <param name="removeValue">value to be removed from the array</param>
            <returns>Returns Dictionary.</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.IsNotNullOrEmpty(System.Collections.IList)">
            <summary>
            Returns true if the list value is not null or empty.
            <param name="list">list value to be checked for having null or empty values.</param>
            <returns>Returns boolean value.</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.FormatUnit(System.String)">
            <summary>
            Function to normalize the units applied to the element.
            </summary>
            <param name="propertyValue">Value.</param>
            <returns>Retuns normalized unit value.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.GetEnumValue``1(``0)">
            <summary>
            Returns enumeration member value.
            </summary>
            <param name="enumValue">Actual enumeration value to be processed for its member value.</param>
            <returns>Returns actual enumeration member value.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.Animate(Microsoft.JSInterop.IJSRuntime,Microsoft.AspNetCore.Components.ElementReference,Syncfusion.Blazor.Internal.AnimationSettings)">
            <summary>
            Function to perform the animation.
            </summary>
            <param name="jsRuntime">JSRuntime service to invoke import method.</param>
            <param name="reference">Represents a reference to a rendered element.</param>
            <param name="animationObject">Animation object for performing animation transition.</param>
            <returns>Async Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Internal.SfBaseUtils.RippleEffect(Microsoft.JSInterop.IJSRuntime,Microsoft.AspNetCore.Components.ElementReference,Syncfusion.Blazor.Internal.RippleSettings)">
            <summary>
            Function to perform the ripple effect.
            </summary>
            <param name="jsRuntime">JSRuntime service to invoke import method.</param>
            <param name="reference">Represents a reference to a rendered element.</param>
            <param name="rippleObject">Ripple object for performing the ripple effect.</param>
            <returns>Async Task.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.DataSourceTypeConverter">
            <summary>
            Custom JSON serialization type converter for the DataSource properties.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.IBaseComponent">
            <summary>
            An interface for BaseComponent.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.IJSInteropAdaptor">
            <summary>
            An interface for implementing JSInteropAdaptor.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.JSInteropAdaptor">
            <summary>
            Custom handler of JSInterop to invoke the JavaScript methods with DotNetObjectReference.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.IValidator">
            <summary>
            Interface for validator.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.ValidationContext">
            <summary>
            Validation context that shares the current validated field details.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.ValidationResult">
            <summary>
            Validation result of the currently done validation.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.Validator">
            <summary>
            Validator that handles column validation.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.RequiredValidator">
            <summary>
            Class that performs required field validation.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.EmailAddressValidator">
            <summary>
            Class that performs email validation.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.MaxLengthValidator">
            <summary>
            Class that performs max length validation.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.MinLengthValidator">
            <summary>
            Class that performs min length validation.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.StringLengthValidator">
            <summary>
            Class that performs range length or string length validation.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.RangeValidator">
            <summary>
            Class that performs range validation.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.RegexValidator">
            <summary>
            Class that performs regex validation.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.NumberValidator">
            <summary>
            Class that performs number validation.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.MaxValidator">
            <summary>
            Class that performs max value validation.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.MinValidator">
            <summary>
            Class that performs min value validation.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Internal.ValidationRuleBase">
            <summary>
            Provides validation rules and message customization.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ValidationRuleBase.Required">
            <summary>
            Validates the given value is present or not null.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ValidationRuleBase.RangeLength">
            <summary>
            Validates that given string is in range length given.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ValidationRuleBase.Range">
            <summary>
            Validates that given value is within range.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ValidationRuleBase.MinLength">
            <summary>
            Validates that given value length is greater than minlength value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ValidationRuleBase.MaxLength">
            <summary>
            Validates that given value length is lesser than maxlength value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ValidationRuleBase.RegexPattern">
            <summary>
            Validates that given value matches the given regex.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ValidationRuleBase.Email">
            <summary>
            Validates that given value is an e-mail.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ValidationRuleBase.Number">
            <summary>
            Validates that given value is a number.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ValidationRuleBase.Min">
            <summary>
            Validates that given value is greater than min value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ValidationRuleBase.Max">
            <summary>
            Validates that given value is lesser than max value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Internal.ValidationRuleBase.Messages">
            <summary>
            Gets or sets the error messages for the validation rules.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DOM">
            <summary>
            The HTML DOM equivalent C# class object to define basic properties and perform the basic DOM operations.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DOM.ID">
            <summary>
            A unique ID of the HTML DOM element object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DOM.XPath">
            <summary>
            Gets or sets xPath.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DOM.DomUUID">
            <summary>
            Gets or sets DOM UID.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DOM.ElementID">
            <summary>
            Gets or sets element ID.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DOM.JsRuntime">
            <summary>
            Gets or sets JsRuntime.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DOM.AddClass(System.String[])">
            <summary>
            Add a list of CSS classes to the HTML DOM element.
            </summary>
            <param name="classList">An array of string CSS class to be added in the HTML DOM.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DOM.RemoveClass(System.String[])">
            <summary>
            Remove a list of CSS classes in the HTML DOM element.
            </summary>
            <param name="classList">An array of string CSS class to be removed in the HTML DOM.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DOM.GetClassList">
            <summary>
            Get the CSS class names from the HTML DOM element.
            </summary>
            <returns>CSS class names in string of Array.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DOM.SetAttribute``1(System.String,``0)">
            <summary>
            Set the attribute to the HTML DOM element.
            </summary>
            <typeparam name="T">The attribute value type.</typeparam>
            <param name="attributeName">The attribute name needs to be updated in the HTML element.</param>
            <param name="attributeValue">The attribute value needs to be updated to the corresponding attribute in the HTML element.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DOM.GetAttribute``1(System.String)">
            <summary>
            Get the attribute value from the HTML DOM element.
            </summary>
            <typeparam name="T">The result.</typeparam>
            <param name="attributeName">The attribute name to get the attribute value from the HTML element.</param>
            <returns>Returns the HTML attribute value with specific type.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.AnimationEffect">
            <summary>
            Specifies the Animation effects.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.SlideLeftIn">
            <summary>
            Defines the Animation effect as SlideLeftIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.SlideRightIn">
            <summary>
            Defines the Animation effect as SlideRightIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FadeIn">
            <summary>
            Defines the Animation effect as FadeIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FadeOut">
            <summary>
            Defines the Animation effect as FadeOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FadeZoomIn">
            <summary>
            Defines the Animation effect as FadeZoomIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FadeZoomOut">
            <summary>
            Defines the Animation effect as FadeZoomOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.ZoomIn">
            <summary>
            Defines the Animation effect as ZoomIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.ZoomOut">
            <summary>
            Defines the Animation effect as ZoomOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.SlideLeft">
            <summary>
            Defines the Animation effect as SlideLeft.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.SlideRight">
            <summary>
            Defines the Animation effect as SlideRight.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipLeftDownIn">
            <summary>
            Defines the Animation effect as FlipLeftDownIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipLeftDownOut">
            <summary>
            Defines the Animation effect as FlipLeftDownOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipLeftUpIn">
            <summary>
            Defines the Animation effect as FlipLeftUpIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipLeftUpOut">
            <summary>
            Defines the Animation effect as FlipLeftUpOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipRightDownIn">
            <summary>
            Defines the Animation effect as FlipRightDownIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipRightDownOut">
            <summary>
            Defines the Animation effect as FlipRightDownOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipRightUpIn">
            <summary>
            Defines the Animation effect as FlipRightUpIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipRightUpOut">
            <summary>
            Defines the Animation effect as FlipRightUpOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipXDownIn">
            <summary>
            Defines the Animation effect as FlipXDownIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipXDownOut">
            <summary>
            Defines the Animation effect as FlipXDownOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipXUpIn">
            <summary>
            Defines the Animation effect as FlipXUpIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipXUpOut">
            <summary>
            Defines the Animation effect as FlipXUpOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipYLeftIn">
            <summary>
            Defines the Animation effect as FlipYLeftIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipYLeftOut">
            <summary>
            Defines the Animation effect as FlipYLeftOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipYRightIn">
            <summary>
            Defines the Animation effect as FlipYRightIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.FlipYRightOut">
            <summary>
            Defines the Animation effect as FlipYRightOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.SlideBottomIn">
            <summary>
            Defines the Animation effect as SlideBottomIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.SlideBottomOut">
            <summary>
            Defines the Animation effect as SlideBottomOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.SlideDown">
            <summary>
            Defines the Animation effect as SlideDown.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.SlideUp">
            <summary>
            Defines the Animation effect as SlideUp.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.SlideLeftOut">
            <summary>
            Defines the Animation effect as SlideLeftOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.SlideRightOut">
            <summary>
            Defines the Animation effect as SlideRightOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.SlideTopIn">
            <summary>
            Defines the Animation effect as SlideTopIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.SlideTopOut">
            <summary>
            Defines the Animation effect as SlideTopOut.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.AnimationEffect.None">
            <summary>
            Defines the Animation effect as None.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Theme">
            <summary>
            Defines the theme style of the Syncfusion component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Theme.Material">
            <summary>
            Renders the Syncfusion component with material theme.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Theme.Bootstrap">
            <summary>
            Renders the Syncfusion component with bootstrap theme.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Theme.HighContrastLight">
            <summary>
            Renders the Syncfusion component with high contrast light theme.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Theme.Fabric">
            <summary>
            Renders the Syncfusion component with fabric theme.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Theme.MaterialDark">
            <summary>
            Renders the Syncfusion component with material dark theme.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Theme.FabricDark">
            <summary>
            Renders the Syncfusion component with fabric dark theme.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Theme.HighContrast">
            <summary>
            Renders the Syncfusion component with high contrast theme.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Theme.BootstrapDark">
            <summary>
            Renders the Syncfusion component with bootstrap dark theme.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Theme.Bootstrap4">
            <summary>
            Renders the Syncfusion component with bootstrap4 theme.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Theme.Bootstrap5">
            <summary>
            Renders the Syncfusion component with bootstrap5 theme.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Theme.Bootstrap5Dark">
            <summary>
            Renders the Syncfusion component with bootstrap5Dark theme.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Theme.Tailwind">
            <summary>
            Renders the Syncfusion component with tailwind theme.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Theme.TailwindDark">
            <summary>
            Renders the Syncfusion component with tailwind dark theme.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.ISyncfusionStringLocalizer">
            <summary>
            An interface for processing the Syncfusion UI component's Localization.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ISyncfusionStringLocalizer.ResourceManager">
            <summary>
            ResourceManager for processing the resource file parsing.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.ISyncfusionStringLocalizer.GetText(System.String)">
            <summary>
            Return the Localized value from the resource file.
            </summary>
            <param name="key">Key string to get the localized value.</param>
            <returns>Returns the localized string.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.SfBaseComponent">
            <summary>
            A Base Component for all the Syncfusion Blazor UI components to implement the common functionalities.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.Dispose">
            <summary>
            Dispose unmanaged resources in the Syncfusion Blazor component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.Dispose(System.Boolean)">
            <summary>
            Dispose unmanaged resources in the Syncfusion Blazor component.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.ComponentDispose">
            <summary>
            The virtual method to override the Dispose method at component side.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.OnAfterScriptRendered">
            <summary>
            Notify the component about the required scripts are rendered in the web page.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.InvokeMethod(System.String,System.Object[])">
            <summary>
            Invokes JSInterop for void return type methods.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.InvokeMethod``1(System.String,System.Boolean,System.Object[])">
            <summary>
            Invokes JSInterop for object return type methods.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.NotifyPropertyChanges``1(System.String,``0,``0,System.Boolean)">
            <summary>
            Notify the property value changes and it will be tracked in the PropertyChanges.
            </summary>
            <param name="propertyName">Name of the property needs to be compared.</param>
            <param name="publicValue">Public value of the property.</param>
            <param name="privateValue">Private value of the property.</param>
            <param name="updatePrevProps">Private value of the Previous property</param>
            <returns>Returns T.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.UpdateObservableEventsForObject(System.String,System.Object,System.Boolean)">
            <summary>
            Wire or unwire observable events to a specific collection object.
            </summary>
            <param name="propertyName">ObservableCollection property name to track it in PropertyChanges.</param>
            <param name="dataValue">A ObservableCollection data object to bind or unbind the events.</param>
            <param name="unwire">Set true to unwire observable events to the ObservableCollection object.</param>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.UpdateObservableEvents(System.String,System.Collections.IEnumerable,System.Boolean)">
            <summary>
            Wire or unwire observable events to a specific ObservableCollection object.
            </summary>
            <param name="propertyName">ObservableCollection property name to track it in PropertyChanges.</param>
            <param name="dataValue">A ObservableCollection data object to bind or unbind the events.</param>
            <param name="unwire">Set true to unwire observable events to the ObservableCollection object.</param>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.ObservableCollectionChanged(System.String,System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            INotifyCollectionChanged event handler method to track the changes.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.ObservablePropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            INotifyPropertyChanged event handler method to track the changes.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseComponent.OnObservableChange(System.String,System.Object,System.Boolean,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Overridable Method for INotifyCollectionChanged event handler to track the changes.
            </summary>
            <param name="propertyName">Observable property name.</param>
            <param name="sender">Observable model object.</param>
            <param name="isCollectionChanged">Sets true if the observable collection changed.</param>
            <param name="e">Changed Event Args</param>
        </member>
        <member name="T:Syncfusion.Blazor.SfComponentActivator">
            <summary>
            A implementation of <see cref="T:Microsoft.AspNetCore.Components.IComponentActivator"/> for Syncfusion Blazor components used to initialize custom components
            that can be registered through dependency injection.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SfComponentActivator.#ctor(System.IServiceProvider)">
            <summary>
            Default constructor for SfComponentActivator class.
            </summary>
            <param name="provider">Service provider for registered components.</param>
        </member>
        <member name="M:Syncfusion.Blazor.SfComponentActivator.CreateInstance(System.Type)">
            <summary>
            Create component for the specified component type.
            </summary>
            <param name="componentType">Type of component need to be created.</param>
            <returns>Returns newly created component.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.SyncfusionBlazor">
            <summary>
            An extension class controls methods to add the Syncfusion Blazor service to the <see href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.dependencyinjection.iservicecollection">service collection</see>.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SyncfusionBlazor.AddSyncfusionBlazor(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean)">
            <summary>
            Adds Syncfusion Blazor service to the <see href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.dependencyinjection.iservicecollection">service collection</see>.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.SyncfusionBlazor.AddSyncfusionBlazor(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Syncfusion.Blazor.GlobalOptions})">
            <summary>
            Adds Syncfusion Blazor service to the <see href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.dependencyinjection.iservicecollection">service collection</see> and configure components global options.
            </summary>
            <param name="services">The collection of services.</param>
            <param name="configure">A delegate that is used to configure <see cref="T:Syncfusion.Blazor.GlobalOptions"/>.</param>
            <returns>The collection of services.</returns>
            <example>
            <code lang="C#"><![CDATA[
            services.AddSyncfusionBlazor(options =>
            {
                options.IgnoreScriptIsolation = true;
            });
            ]]></code>
            </example>
        </member>
        <member name="T:Syncfusion.Blazor.SyncfusionBlazorService">
            <summary>
            Represents an instance of Syncfusion Blazor service.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SyncfusionBlazorService.#ctor(Microsoft.Extensions.Options.IOptions{Syncfusion.Blazor.GlobalOptions})">
            <exclude />
            /// <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Blazor.SyncfusionBlazorService"/> class.
            </summary>
            <param name="configure">Configured global options for Syncfusion Blazor.</param>
        </member>
        <member name="P:Syncfusion.Blazor.SyncfusionBlazorService.IsEnabledScriptIsolation">
            <summary>
            Specifies global script rendering in the application, when IgnoreScriptIsolation is false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SyncfusionBlazorService.IsCultureLoaded">
            <summary>
            Specifies the current culture is set to the library for all type of components.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SyncfusionBlazorService.IsScriptRendered">
            <summary>
            Specifies the init JSInterop script is loaded, when DisableScriptManager is false.
            Specifies the IsDevice JSInterop call invoked, when DisableScriptManager is true.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SyncfusionBlazorService.IsLicenseValidated">
            <summary>
            Specifies whether the license validated.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SyncfusionBlazorService.IsDeviceMode">
            <summary>
            Specifies the application is rendering in device mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SyncfusionBlazorService.ScriptHashKey">
            <summary>
            Specifies the application is rendering in device mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SyncfusionBlazorService.IsFirstResource">
            <summary>
            Specifies the first component rendering in the application.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SyncfusionBlazorService.IsFirstBaseResource">
            <summary>
            Specifies the first BaseComponent inherited rendering in the application.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SyncfusionBlazorService.EnableScriptIsolation(System.Boolean)">
            <summary>
            Enable Global Script to the Syncfusion Blazor components.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SyncfusionBlazorService.EnableRipple(System.Boolean)">
            <summary>
            Enable ripple effect to the Syncfusion Blazor components for material design theme.
            </summary>
            <param name="enable">Set false to disable ripple effect.</param>
        </member>
        <member name="M:Syncfusion.Blazor.SyncfusionBlazorService.EnableRtl(System.Boolean)">
            <summary>
            Enable right-to-left text direction to the Syncfusion Blazor components.
            </summary>
            <param name="enable">Set false to disable right-to-left text direction.</param>
        </member>
        <member name="M:Syncfusion.Blazor.SyncfusionBlazorService.IsDevice">
            <summary>
            Returns true when the application is running on a mobile or IPad device.
            This method should be called only in the OnAfterRenderAsync life cycle method.
            </summary>
            <returns>Returns true, if the application rendering in mobile or IPad devices.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.SyncfusionBlazorService.SetIsDevice(System.Boolean)">
            <exclude />
            <summary>Update script rendered property after the init script loaded in the web page.</summary>
            <param name="isDevice">Boolean value to identify whether the application is rendering in mobile or IPad devices.</param>
            <returns>Task.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.GlobalOptions">
            <summary>
            A class that provides options to configure global settings for our Syncfusion Blazor components.
            </summary>
            <example>
            <code lang="C#"><![CDATA[
            services.AddSyncfusionBlazor(options =>
            {
                options.IgnoreScriptIsolation = true;
            });
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.GlobalOptions.IgnoreScriptIsolation">
            <summary>
            Gets or sets whether the Syncfusion Blazor scripts are loaded internally using JavaScript Isolation or refer to the required scripts from the application-end for better performance. 
            </summary>
            <value>
            false, if the Blazor scripts are loaded from built-in source using JavaScript Isolation internally. The default value is false.
            </value>
            <remarks>
            When the property value is true, the scripts should be referenced externally in the application-end from NuGet or CDN or by generating from CRG.
            </remarks>
            <example>
            <para> You can add script reference in one of the following ways externally for better performance when <c>IgnoreScriptIsolation</c> is <c>true</c>.</para>
            <para><b>Reference scripts from NuGet</b></para>
            To add script reference for all component except PdfViewer and DocumentEditor.
            <code lang="html"><![CDATA[
            <script  src="_content/Syncfusion.Blazor/scripts/syncfusion-blazor.min.js"  type="text/javascript"></script>
            ]]></code>
            To add script reference for PdfViewer.
            <code lang="html"><![CDATA[
            <script  src="_content/Syncfusion.Blazor.PdfViewer/scripts/syncfusion-blazor-pdfviewer.min.js"  type="text/javascript"></script>
            ]]></code>
            To add script reference for DocumentEditor.
            <code lang="html"><![CDATA[
            <script  src="_content/Syncfusion.Blazor.WordProcessor/scripts/syncfusion-blazor-documenteditor.min.js"  type="text/javascript"></script>
            ]]></code>
            <para><b>Reference scripts from CDN</b></para>
            To add script reference for all component except PdfViewer and DocumentEditor.
            <code lang="html"><![CDATA[
            <script  src="https://cdn.syncfusion.com/blazor/19.3.43/syncfusion-blazor.min.js"  type="text/javascript"></script>
            ]]></code>
            To add script reference for PdfViewer.
            <code lang="html"><![CDATA[
            <script  src="https://cdn.syncfusion.com/blazor/19.3.43/syncfusion-blazor-pdfviewer.min.js"  type="text/javascript"></script>
            ]]></code>
            To add script reference for DocumentEditor.
            <code lang="html"><![CDATA[
            <script  src="https://cdn.syncfusion.com/blazor/19.3.43/syncfusion-blazor-documenteditor.min.js"  type="text/javascript"></script>
            ]]></code>
            <em>Note: Ensure to change the version in CDN link based on the syncfusion version you are using.</em>
            <para><b>Reference scripts by generating from <see href="https://blazor.syncfusion.com/crg/">Blazor CRG</see> for only used components</b></para>
            Generate a required component script and styles from Blazor custom resource generator(Blazor CRG) and refer to them in your application.
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.GlobalOptions.EnableRippleEffect">
            <summary>
            Specifies whether the ripple effect is enabled in the application.
            </summary>
            <value>
            true, if the ripple effect is enabled in the application. The default value is false.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.GlobalOptions.EnableRtl">
            <summary>
            Specifies whether the Rtl mode enabled in the application.
            </summary>
            <value>
            true, if the Rtl mode enabled in the application. The default value is false.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.SfButton">
            <summary>
            The Button is a graphical user interface element that triggers an event on its click action.
            It can contain a text, an image, or both.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.ChildContent">
            <summary>
            Sets content for button element including HTML and its customizations.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.Content">
            <summary>
            Defines the text content of the button element and it will support only string type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the button element. The Button types, styles, and
            size can be defined by using this property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.Disabled">
            <summary>
            Specifies a value that indicates whether the Button is enabled or disabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.EnableRtl">
            <summary>
            Enable or disable rendering Button component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the Button that is used to include an icon.
            Buttons can also include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.IconPosition">
            <summary>
            Positions the icon based on the text content in the button and its default value is Left.
            The possible values are:
            - Left: The icon will be positioned to the left of the text content.
            - Right: The icon will be positioned to the right of the text content.
            - Top: The icon will be positioned to the top of the text content.
            - Bottom: The icon will be positioned to the bottom of the text content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.IsPrimary">
            <summary>
            Allows the appearance of the button to be enhanced and visually appealing when set to true.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.IsToggle">
            <summary>
            Makes the Button toggle, when set to true. When you click it, the state changes from normal to active or viceversa.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.HtmlAttributes">
            <exclude/>
            <summary>
            You can add the additional html attributes such as id, title etc., to the button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.OnClick">
            <summary>
            Triggers when button element is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfButton.Created">
            <summary>
            Triggers once the component rendering is completed.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfButton.FocusIn">
            <summary>
            Sets the focus to button element.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfButton.FocusAsync">
            <summary>
            Sets the focus to button element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.IconPosition">
            <summary>
            Defines the icon position of Button.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconPosition.Left">
            <summary>
            To position icon left to content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconPosition.Right">
            <summary>
            To position icon right to content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconPosition.Top">
            <summary>
            To position icon above the content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconPosition.Bottom">
            <summary>
            To position icon below the content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.SfCheckBox`1">
            <summary>
            The CheckBox is a graphical user interface element that allows you to select one or more options from the choices.
            It contains checked, unchecked, and indeterminate states.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfCheckBox`1.Label">
            <summary>
            Defines the caption for the CheckBox, that describes the purpose of the CheckBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfCheckBox`1.LabelPosition">
            <summary>
            Positions label before/after the CheckBox.
            The possible values are:
            - Before - The label is positioned to left of the CheckBox.
            - After - The label is positioned to right of the CheckBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfCheckBox`1.Indeterminate">
            <summary>
            Specifies a value that indicates whether the CheckBox is in indeterminate state or not.
            When set to true, the CheckBox will be in indeterminate state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfCheckBox`1.IndeterminateChanged">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfCheckBox`1.EnableTriState">
            <summary>
            Specifies a value to enable/disable tri state functionality in CheckBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfCheckBox`1.ValueChange">
            <summary>
            Triggers when the CheckBox state has been changed by user interaction.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.ChipEvents">
            <summary>
            Configure handlers to handle the events with the Chip component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipEvents.BaseParent">
            <summary>
            Indicates the SfChip component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipEvents.OnBeforeClick">
            <summary>
            This click event will get triggered once the chip is before click.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipEvents.OnClick">
            <summary>
            This click event will get triggered once the chip is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipEvents.Created">
            <summary>
            This created event will get triggered once the component rendering is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipEvents.Destroyed">
            <summary>
            This created event will get triggered once the component successfuly disposed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipEvents.OnDelete">
            <summary>
            This delete event will get triggered before removing the chip.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.ChipEvents.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>="Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.ChipItems">
            <summary>
            Configures the collection of chipitem.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItems.BaseParent">
            <summary>
            Indicates the SfChip component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItems.ChildContent">
            <summary>
            Indicates the ChildContent.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItems.Chips">
            <summary>
            Indicates the Chips List.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.ChipItems.UpdateChildProperty(Syncfusion.Blazor.Buttons.ChipItem)">
            <summary>
            Updates the Chips property and returns the count.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.ChipItems.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>="Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.ChipItem">
            <summary>
            A Chip is a small block of essential information that contains the text, image, or both and mostly used in contacts, mails, or filter tags.
            </summary>
            <summary>
            Partial Class ChipItem.
            </summary>
            <summary>
            Partial Class ChipItem.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.Parent">
            <summary>
            Indicates the ChipItems component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.BaseParent">
            <summary>
            Indicates the SfChip component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.ChipItem.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.ChipItem.OnParametersSetAsync">
            <summary>
            Method invoked when any changes in component state occurs.
            </summary>
            <returns>="Task".</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.ChildContent">
            <summary>
            Specifies the ChildContent.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.CssClass">
            <summary>
            Specifies the custom classes to be added to the chip element used to customize the Chip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.Enabled">
            <summary>
            Specifies a value that indicates whether the chip component is enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.LeadingIconCss">
            <summary>
            Specifies the leading icon CSS class for the chip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.LeadingIconUrl">
            <summary>
            Specifies the leading icon url for the chip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.LeadingText">
            <summary>
            Specifies the customized text value for the avatar in the chip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.Text">
            <summary>
            Specifies the text content for the chip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.TrailingIconCss">
            <summary>
            Specifies the trailing icon CSS class for the chip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.TrailingIconUrl">
            <summary>
            Specifies the leading icon url for the chip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.Value">
            <summary>
            This value property helps to store the chip component values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipItem.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as title to the each chip element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.SelectionType">
            <summary>
            Different selection types that are applicable for the Chip component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.SelectionType.Single">
            <summary>
            Single selection allows to select a single chip from a set of ChipItem/ChipItems.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.SelectionType.Multiple">
            <summary>
            Multiple selection allows to select multipe chips from a set of ChipItem/ChipItems.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.SelectionType.None">
            <summary>
            Selection of chip will be restricted in none type.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.ChipEventArgs">
            <summary>
            Interface for Chip Events.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipEventArgs.Cancel">
            <summary>
            It denotes whether the item can be deleted or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipEventArgs.Element">
            <summary>
            It denotes the deleted Item element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipEventArgs.Index">
            <summary>
            It denotes the deleted item index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipEventArgs.Selected">
            <summary>
            It denotes whether the clicked item is selected or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipEventArgs.Text">
            <summary>
            It denotes the deleted item text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChipEventArgs.Value">
            <summary>
            It denotes the deleted item value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.SfChip">
            <summary>
            Partial Class SfChip.
            </summary>
            <summary>
            Specifies the Partial class SfChip.
            </summary>
            <summary>
            Partial Class SfChip.
            </summary>
            <summary>
            The SfChip component displays a list of chip each of which contains a block of essential information that triggers an event on click action.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.OnInitializedAsync">
            <summary>
            Method gets invoked when the component is ready to start.
            </summary>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>="Task".</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfChip.ChildContent">
            <summary>
            Specifies the ChildContent.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfChip.CssClass">
            <summary>
            Specifies the custom classes to be added to the chip element used to customize the chip component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfChip.Chips">
            <summary>
            This chips property helps to render chipitem component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfChip.EnableDelete">
            <summary>
            This enableDelete property helps to enable delete functionality.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfChip.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfChip.Enabled">
            <summary>
            This enabled property helps to enable/disable chipitem component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfChip.SelectedChips">
            <summary>
            This selectedChips property helps to select chip items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfChip.SelectedChipsChanged">
            <summary>
            Specifies the callback to trigger when the selected chips changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfChip.Selection">
            <summary>
            This selection property enables chip selection type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfChip.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as title, native events etc., to the wrapper element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.FindChip(System.String)">
            <summary>
            A function that finds chip based on given chip value.
            </summary>
            <param name="chipValue">Value of the chip need to be passed to get the corresponding chip model.</param>
            <returns>GetItem.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.GetSelectedChips">
            <summary>
            A function that returns selected chips data.
            </summary>
            <returns>selectedChipModels.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.RemoveChips(System.String[])">
            <summary>
            A function that removes chip items based on given chip values.
            </summary>
            <param name="removableChipValues">Values of the chips which are to be removed should be passed.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.SelectChips(System.String[])">
            <summary>
            A function that selects chip items based on given index.
            </summary>
            <param name="selectableChips">Values of the chips which are to be selected should be passed.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.AddChip(Syncfusion.Blazor.Buttons.ChipItem)">
            <summary>
            A function that adds chip items based on given input.
            </summary>
            <param name="item">Chip Item to be added should be passed.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.UpdateChips(System.Collections.Generic.List{Syncfusion.Blazor.Buttons.ChipItem})">
            <summary>
            Updates the child properties of the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.RefeshComponent">
            <summary>
            Re-renders the complete chip component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.UpdateAttributes">
            <summary>
            Updates the class and multiselection attributes of the chip root element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.GetItem(System.String)">
            <summary>
            Returns a ChipItem based on a value of a chip.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.UpdateRefsCount(System.Int32)">
            <summary>
            Updates the chip elements count.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.GetAttributes(System.Int32)">
            <summary>
            Updates the text, icons url/class and attributes of each chip if multiple chip rendered.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.UpdateAttributes(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Updates the attributes value.
            </summary>
            <param name="htmlAttributes">The htmlAttributes.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.OnDeleteClick(System.Int32,System.Boolean)">
            <summary>
            Delete click event handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.OnChipMouseDown(System.Int32,System.Boolean)">
            <summary>
            Chip element mouse down event handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.OnChipClick(System.Int32,System.Boolean)">
            <summary>
            Chip element click event handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.GetEventArgs(System.Int32)">
            <summary>
            Returns the click event arguments.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.OnChipFocusOut">
            <summary>
            Chip element focus out handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.OnChipFocus(System.Int32)">
            <summary>
            Chip element focus handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.OnKeyDown(System.Int32,Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Chip element key down handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfChip.ComponentDispose">
            <summary>
            Component dispose handled.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.LabelPosition">
            <summary>
            Defines the label position of component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.LabelPosition.After">
            <summary>
            To position label after the component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.LabelPosition.Before">
            <summary>
            To position label before the component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.ChangeEventArgs`1">
            <summary>
            Arguments for `ValueChange` event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChangeEventArgs`1.Checked">
            <summary>
            Returns the checked value of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChangeEventArgs`1.Event">
            <summary>
            Returns the event parameters of the component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.ChangeArgs`1">
            <summary>
            Interface for Radio Button change event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChangeArgs`1.Value">
            <summary>
            Returns the value of the RadioButton.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.ChangeArgs`1.Event">
            <summary>
            Returns the event parameters of the RadioButton.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.CheckBoxModel`1">
            <summary>
            Interface for a class CheckBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.CheckBoxModel`1.Checked">
            <summary>
            Specifies a value that indicates whether the CheckBox is `checked` or not.
            When set to `true`, the CheckBox will be in `checked` state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.CheckBoxModel`1.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the CheckBox element.
            You can add custom styles to the CheckBox by using this property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.CheckBoxModel`1.Disabled">
            <summary>
            Specifies a value that indicates whether the CheckBox is `disabled` or not.
            When set to `true`, the CheckBox will be in `disabled` state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.CheckBoxModel`1.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.CheckBoxModel`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.CheckBoxModel`1.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as disabled, value etc., to the element.
            If you configured both property and equivalent html attribute then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.CheckBoxModel`1.Indeterminate">
            <summary>
            Specifies a value that indicates whether the CheckBox is in `indeterminate` state or not.
            When set to `true`, the CheckBox will be in `indeterminate` state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.CheckBoxModel`1.Label">
            <summary>
            Defines the caption for the CheckBox, that describes the purpose of the CheckBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.CheckBoxModel`1.LabelPosition">
            <summary>
            Positions label `before`/`after` the CheckBox.
            The possible values are:
             Before - The label is positioned to left of the CheckBox.
             After - The label is positioned to right of the CheckBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.CheckBoxModel`1.Name">
            <summary>
            Defines `name` attribute for the CheckBox.
            It is used to reference form data (CheckBox value) after a form is submitted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.CheckBoxModel`1.Value">
            <summary>
            Defines `value` attribute for the CheckBox.
            It is a form data passed to the server when submitting the form.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.SfInputBase`1">
            <summary>
            A base class for form input components.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.ChildContent">
            <exclude/>
            <summary>
            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the component wrapper element.
            You can add custom styles to the component by using this property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.Name">
            <summary>
            Defines name attribute for the input element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.Value">
            <summary>
            Defines value attribute for the input element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.Checked">
            <summary>
            Specifies a value that indicates whether the component is checked or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.CheckedChanged">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.CheckedExpression">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.Disabled">
            <summary>
            Specifies a value that indicates whether the component is disabled or not.
            When set to true, the component will be in disabled state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.HtmlAttributes">
            <exclude/>
            <summary>
            You can add the additional html attributes such as title , native events etc., to the element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfInputBase`1.Created">
            <summary>
            Triggers once the component rendering is completed.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfInputBase`1.FocusIn">
            <summary>
            Sets the focus to component.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfInputBase`1.FocusAsync">
            <summary>
            Sets the focus to component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.IconName">
            <summary>
            Defines the icon names that can be rendered in <see cref="T:Syncfusion.Blazor.Buttons.SfIcon"/> using <see cref="P:Syncfusion.Blazor.Buttons.SfIcon.Name"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.AboveAverage">
            <summary>
            Defines above average icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.AddChartElement">
            <summary>
            Defines add chart element icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.AgendaDateRange">
            <summary>
            Defines agenda date range icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.AlignBottom">
            <summary>
            Defines align bottom icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.AlignCenter">
            <summary>
            Defines align center icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.AlignLeft">
            <summary>
            Defines align left icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.AlignMiddle">
            <summary>
            Defines align middle icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.AlignRight">
            <summary>
            Defines align right icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.AlignTop">
            <summary>
            Defines align top icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.All">
            <summary>
            Defines all icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.AnnotationEdit">
            <summary>
            Defines annotation-edit icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Area">
            <summary>
            Defines area icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ArrowDown">
            <summary>
            Defines arrow down icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ArrowLeft">
            <summary>
            Defines arrow left icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ArrowRight">
            <summary>
            Defines arrow right icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ArrowRightUp">
            <summary>
            Defines arrow right up icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ArrowUp">
            <summary>
            Defines arrow up icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.AutoFitContent">
            <summary>
            Defines auto fit content icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.AutoFitWindow">
            <summary>
            Defines auto fit window icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.BelowAverage">
            <summary>
            Defines below average icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Between">
            <summary>
            Defines between icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Bold">
            <summary>
            Defines bold icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Bookmark">
            <summary>
            Defines bookmark icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.BorderBottom">
            <summary>
            Defines border bottom icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.BorderCenter">
            <summary>
            Defines border center icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.BorderDiagonal1">
            <summary>
            Defines border diagonal icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.BorderDiagonal2">
            <summary>
            Defines border diagonal icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.BorderInner">
            <summary>
            Defines border inner icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.BorderLeft">
            <summary>
            Defines border left icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.BorderMiddle">
            <summary>
            Defines border middle icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.BorderNone">
            <summary>
            Defines border none icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.BorderOuter">
            <summary>
            Defines border outer icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.BorderRight">
            <summary>
            Defines border right icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.BorderTop">
            <summary>
            Defines border top icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.BottomTen">
            <summary>
            Defines bottom 10 icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.BottomTenItems">
            <summary>
            Defines bottom 10 items icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Box">
            <summary>
            Defines box icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Break">
            <summary>
            Defines break icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.BreakPage">
            <summary>
            Defines break page icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.BreakSection">
            <summary>
            Defines break section icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.BringForward">
            <summary>
            Defines bring forward icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.BringToFront">
            <summary>
            Defines bring to front icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Bullet1">
            <summary>
            Defines bullet icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Bullet2">
            <summary>
            Defines bullet icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Bullet3">
            <summary>
            Defines bullet icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Bullet4">
            <summary>
            Defines bullet icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Bullet5">
            <summary>
            Defines bullet icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Bullet6">
            <summary>
            Defines bullet icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.CalculatedMember">
            <summary>
            Defines calculated member icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Caption">
            <summary>
            Defines caption icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Cell">
            <summary>
            Defines cell icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChangeCase">
            <summary>
            Defines change case icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChangesAccept">
            <summary>
            Defines changes accept icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChangeScaleRatio">
            <summary>
            Defines change scale ratio icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChangesReject">
            <summary>
            Defines changes reject icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChangesTrack">
            <summary>
            Defines changes track icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Chart">
            <summary>
            Defines chart icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Chart2D100PercentStackedArea">
            <summary>
            Defines chart 2d 100 percent stacked area icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Chart2D100PercentStackedBar">
            <summary>
            Defines chart 2d 100 percent stacked bar icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Chart2D100PercentStackedColumn">
            <summary>
            Defines chart 2d 100 percent stacked column icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Chart2D100PercentStackedLine">
            <summary>
            Defines chart 2d 100 percent stacked line icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Chart2DArea">
            <summary>
            Defines chart 2d area icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Chart2DClusteredBar">
            <summary>
            Defines chart 2d clustered bar icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Chart2DClusteredColumn">
            <summary>
            Defines chart 2d clustered column icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Chart2DLine">
            <summary>
            Defines chart 2d line icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Chart2DPie">
            <summary>
            Defines chart 2d pie 2 icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Chart2DStackedArea">
            <summary>
            Defines chart 2d stacked area icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Chart2DStackedBar">
            <summary>
            Defines chart 2d stacked bar icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Chart2DStackedColumn">
            <summary>
            Defines chart 2d stacked column icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Chart2DStackedLine">
            <summary>
            Defines chart 2d stacked line icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartAxes">
            <summary>
            Defines chart axes icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartAxesPrimaryHorizontal">
            <summary>
            Defines chart axes primary horizontal icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartAxesPrimaryVertical">
            <summary>
            Defines chart axes primary vertical icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartAxisTitles">
            <summary>
            Defines chart axis titles icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartAxisTitlesPrimaryHorizontal">
            <summary>
            Defines chart axis titles primary horizontal icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartAxisTitlesPrimaryVertical">
            <summary>
            Defines chart axis titles primary vertical icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartDataLabels">
            <summary>
            Defines chart data labels icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartDataLabelsCenter">
            <summary>
            Defines chart data labels center icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartDataLabelsInsideBase">
            <summary>
            Defines chart data labels inside base icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartDataLabelsInsideEnd">
            <summary>
            Defines chart data labels inside end icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartDataLabelsNone">
            <summary>
            Defines chart data labels none icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartDataLabelsOutsideEnd">
            <summary>
            Defines chart data labels outside end icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartDonut">
            <summary>
            Defines chart donut icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartGridlines">
            <summary>
            Defines chart gridlines icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartInsertBar">
            <summary>
            Defines chart insert bar icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartInsertColumn">
            <summary>
            Defines chart insert column icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartInsertLine">
            <summary>
            Defines chart insert line icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartInsertPie">
            <summary>
            Defines chart insert pie icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartInsertXYScatter">
            <summary>
            Defines chart insert x y scatter icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartLegend">
            <summary>
            Defines chart legend icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartLegendBottom">
            <summary>
            Defines chart legend bottom icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartLegendLeft">
            <summary>
            Defines chart legend left icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartLegendNone">
            <summary>
            Defines chart legend none icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartLegendRight">
            <summary>
            Defines chart legend right icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartLegendTop">
            <summary>
            Defines chart legend top icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartLines">
            <summary>
            Defines chart lines icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartPrimaryMajorHorizontal">
            <summary>
            Defines chart primary major horizontal icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartPrimaryMajorVertical">
            <summary>
            Defines chart primary major vertical icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartPrimaryMinorHorizontal">
            <summary>
            Defines chart primary minor horizontal icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartPrimaryMinorVertical">
            <summary>
            Defines chart primary minor vertical icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartSwitchRowColumn">
            <summary>
            Defines chart switch row column icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartTitle">
            <summary>
            Defines chart title icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartTitleCenteredOverlay">
            <summary>
            Defines chart title centered overlay icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChartTitleNone">
            <summary>
            Defines chart title none icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Check">
            <summary>
            Defines check icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.CheckBox">
            <summary>
            Defines check box icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChevronDown">
            <summary>
            Defines chevron down icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChevronDownDouble">
            <summary>
            Defines chevron down double icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChevronDownFill">
            <summary>
            Defines chevron down fill icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChevronLeft">
            <summary>
            Defines chevron left icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChevronLeftDouble">
            <summary>
            Defines chevron left double icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChevronLeftSmall">
            <summary>
            Defines chevron left small icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChevronRight">
            <summary>
            Defines chevron right icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChevronRightDouble">
            <summary>
            Defines chevron right double icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChevronRightSmall">
            <summary>
            Defines chevron right small icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChevronUp">
            <summary>
            Defines chevron up icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ChevronUpDouble">
            <summary>
            Defines chevron up double icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Circle">
            <summary>
            Defines circle icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.CircleAdd">
            <summary>
            Defines circle add icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.CircleCheck">
            <summary>
            Defines circle check icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.CircleInfo">
            <summary>
            Defines circle info icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.CircleRemove">
            <summary>
            Defines circle remove icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ClearForm">
            <summary>
            Defines clear form icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ClearFormat">
            <summary>
            Defines clear format icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ClearRules">
            <summary>
            Defines clear rules icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Clock">
            <summary>
            Defines clock icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Close">
            <summary>
            Defines close icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.CodeView">
            <summary>
            Defines code view icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Collapse">
            <summary>
            Defines collapse icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ColorScales">
            <summary>
            Defines color scales icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.CommentAdd">
            <summary>
            Defines comment add icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.CommentReopen">
            <summary>
            Defines comment reopen icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.CommentShow">
            <summary>
            Defines comment show icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ConditionalFormatting">
            <summary>
            Defines conditional formatting icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ConditionalFormattingLarge">
            <summary>
            Defines conditional formatting large icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ContinueNumbering">
            <summary>
            Defines continue numbering icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Copy">
            <summary>
            Defines copy icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Cut">
            <summary>
            Defines cut icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.DataBars">
            <summary>
            Defines data bars icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.DataValidation">
            <summary>
            Defines data validation icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.DateOccurring">
            <summary>
            Defines date occurring icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Day">
            <summary>
            Defines day icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.DecreaseIndent">
            <summary>
            Defines decrease indent icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.DeleteColumn">
            <summary>
            Defines delete column icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.DeleteRow">
            <summary>
            Defines delete row icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Description">
            <summary>
            Defines description icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Dimension">
            <summary>
            Defines dimension icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Display">
            <summary>
            Defines display icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Download">
            <summary>
            Defines download icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.DragAndDrop">
            <summary>
            Defines drag and drop icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.DragAndDropIndicator">
            <summary>
            Defines drag and drop indicator icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.DragFill">
            <summary>
            Defines drag fill icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.DropDown">
            <summary>
            Defines drop down icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.DuplicateCell">
            <summary>
            Defines duplicate cell icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Edit">
            <summary>
            Defines edit icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.EndFootnote">
            <summary>
            Defines end footnote icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.EqualTo">
            <summary>
            Defines equalto icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Erase">
            <summary>
            Defines erase icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ErrorTreeview">
            <summary>
            Defines error treeview icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ExitFullScreen">
            <summary>
            Defines exit full screen icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Expand">
            <summary>
            Defines expand icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Export">
            <summary>
            Defines export icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ExportCsv">
            <summary>
            Defines export csv icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ExportExcel">
            <summary>
            Defines export excel icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ExportPdf">
            <summary>
            Defines export pdf icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ExportPng">
            <summary>
            Defines export png icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ExportSvg">
            <summary>
            Defines export svg icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ExportXls">
            <summary>
            Defines export xls icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Eye">
            <summary>
            Defines eye icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.FieldSettings">
            <summary>
            Defines field settings icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.FileNew">
            <summary>
            Defines file new icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Filter">
            <summary>
            Defines filter icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.FilterActive">
            <summary>
            Defines filter active icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.FilterClear">
            <summary>
            Defines filter clear icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Filtered">
            <summary>
            Defines filtered icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.FilteredSortAscending">
            <summary>
            Defines filtered sort ascending icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.FilteredSortDescending">
            <summary>
            Defines filtered sort descending icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.FilterMain">
            <summary>
            Defines filter main icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.FirstPage">
            <summary>
            Defines first page icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.FixedColumnWidth">
            <summary>
            Defines fixed column width icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Folder">
            <summary>
            Defines folder icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.FolderOpen">
            <summary>
            Defines folder open icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.FontColor">
            <summary>
            Defines font color icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.FontName">
            <summary>
            Defines font name icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Footer">
            <summary>
            Defines footer icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.FormField">
            <summary>
            Defines form field icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.FreezeColumn">
            <summary>
            Defines freeze column icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.FreezePane">
            <summary>
            Defines freeze pane icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.FreezeRow">
            <summary>
            Defines freeze row icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.FullScreen">
            <summary>
            Defines full screen icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.GrandTotal">
            <summary>
            Defines  icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.GreaterThan">
            <summary>
            Defines greater than icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.GridView">
            <summary>
            Defines grid view icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.GripVertical">
            <summary>
            Defines grip vertical icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Group1">
            <summary>
            Defines group icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Group2">
            <summary>
            Defines group icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.GroupIcon">
            <summary>
            Defines group icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Header">
            <summary>
            Defines header icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.HideFormulaBar">
            <summary>
            Defines hide formula bar icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.HideGridlines">
            <summary>
            Defines hide gridlines icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.HideHeadings">
            <summary>
            Defines hide headings icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Highlight">
            <summary>
            Defines highlight icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.HighlightColor">
            <summary>
            Defines highlight color icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Home">
            <summary>
            Defines home icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.HyperlinkCopy">
            <summary>
            Defines hyperlink copy icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.HyperlinkEdit">
            <summary>
            Defines hyperlink edit icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.HyperlinkOpen">
            <summary>
            Defines hyperlink open icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.HyperlinkRemove">
            <summary>
            Defines hyperlink remove icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.IconSets">
            <summary>
            Defines iconsets icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Image">
            <summary>
            Defines image icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.IncreaseIndent">
            <summary>
            Defines increase indent icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.InsertAbove">
            <summary>
            Defines insert above icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.InsertBelow">
            <summary>
            Defines insert below icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.InsertCode">
            <summary>
            Defines insert code icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.InsertLeft">
            <summary>
            Defines insert left icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.InsertRight">
            <summary>
            Defines insert right icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.IntermediateState">
            <summary>
            Defines intermediate state icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Italic">
            <summary>
            Defines italic icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Justify">
            <summary>
            Defines justify icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Kpi">
            <summary>
            Defines kpi icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.LastPage">
            <summary>
            Defines last page icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Length">
            <summary>
            Defines length icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.LessThan">
            <summary>
            Defines less than icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Level1">
            <summary>
            Defines level icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Level2">
            <summary>
            Defines level icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Level3">
            <summary>
            Defines level icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Level4">
            <summary>
            Defines level icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Level5">
            <summary>
            Defines level icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Line">
            <summary>
            Defines line icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.LineNormal">
            <summary>
            Defines line normal icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.LineSmall">
            <summary>
            Defines line small icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.LineSpacing">
            <summary>
            Defines line spacing icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.LineVerySmall">
            <summary>
            Defines line very small icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Link">
            <summary>
            Defines link icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.LinkRemove">
            <summary>
            Defines link remove icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ListOrdered">
            <summary>
            Defines list ordered icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ListUnordered">
            <summary>
            Defines list unordered icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Location">
            <summary>
            Defines location icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Lock">
            <summary>
            Defines lock icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.LowerCase">
            <summary>
            Defines lower case icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Mdx">
            <summary>
            Defines mdx icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Menu">
            <summary>
            Defines menu icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.MergeCells">
            <summary>
            Defines merge cells icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Month">
            <summary>
            Defines month icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.MoreHorizontal">
            <summary>
            Defines more horizontal icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.MoreScatterCharts">
            <summary>
            Defines more scatter chart icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.MoreVertical">
            <summary>
            Defines more vertical icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.MousePointer">
            <summary>
            Defines mouse pointer icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.NamedSet">
            <summary>
            Defines named set icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.NumberFormatting">
            <summary>
            Defines number formatting icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Opacity">
            <summary>
            Defines opacity icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.OpenLink">
            <summary>
            Defines open link icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Order">
            <summary>
            Defines order icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.PageNumbering">
            <summary>
            Defines page numbering icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.PageSetup">
            <summary>
            Defines page setup icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.PaintBucket">
            <summary>
            Defines paint bucket icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Pan">
            <summary>
            Defines pan icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Paragraph">
            <summary>
            Defines paragraph icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Password">
            <summary>
            Defines password icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Paste">
            <summary>
            Defines paste icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.PasteMatchDestination">
            <summary>
            Defines paste match destination icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.PasteStyle">
            <summary>
            Defines paste style icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.PasteTextOnly">
            <summary>
            Defines paste text only icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Pause">
            <summary>
            Defines pause icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.People">
            <summary>
            Defines people icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Perimeter">
            <summary>
            Defines perimeter icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Play">
            <summary>
            Defines play icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Plus">
            <summary>
            Defines plus icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Print">
            <summary>
            Defines print icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.PrintLayout">
            <summary>
            Defines print layout icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ProtectSheet">
            <summary>
            Defines protect sheet icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ProtectWorkbook">
            <summary>
            Defines protect workbook icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.RadioButton">
            <summary>
            Defines radio button icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Radius">
            <summary>
            Defines radius icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Reapply">
            <summary>
            Defines reapply icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Rectangle">
            <summary>
            Defines rectangle icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.RecurrenceEdit">
            <summary>
            Defines recurrence edit icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Redo">
            <summary>
            Defines redo icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Refresh">
            <summary>
            Defines refresh icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Rename">
            <summary>
            Defines rename icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Repeat">
            <summary>
            Defines repeat icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Replace">
            <summary>
            Defines replace icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Resize">
            <summary>
            Defines resize icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.RestartAtOne">
            <summary>
            Defines restart at 1 icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Save">
            <summary>
            Defines save icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.SaveAs">
            <summary>
            Defines save as icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Search">
            <summary>
            Defines search icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.SelectAll">
            <summary>
            Defines select all icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Selection">
            <summary>
            Defines selection icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.SendBackward">
            <summary>
            Defines send backward icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.SendToBack">
            <summary>
            Defines send to back icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Settings">
            <summary>
            Defines settings icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Shapes">
            <summary>
            Defines shapes icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ShowHidePanel">
            <summary>
            Defines show/hide panel icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Signature">
            <summary>
            Defines signature icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.SortAscending">
            <summary>
            Defines sort ascending icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.SortAscending2">
            <summary>
            Defines sort ascending icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.SortDescending">
            <summary>
            Defines sort descending icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.SortDescending2">
            <summary>
            Defines sort descending icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Sorting1">
            <summary>
            Defines sorting icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Sorting2">
            <summary>
            Defines sorting icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.SpellCheck">
            <summary>
            Defines spell check icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.SplitHorizontal">
            <summary>
            Defines split horizontal icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.SplitVertical">
            <summary>
            Defines split vertical icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Stamp">
            <summary>
            Defines stamp icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Strikethrough">
            <summary>
            Defines strikethrough icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.StrokeWidth">
            <summary>
            Defines stroke width icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Style">
            <summary>
            Defines style icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Subscript">
            <summary>
            Defines subscript icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.SubTotal">
            <summary>
            Defines sub total icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Sum">
            <summary>
            Defines sum icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Superscript">
            <summary>
            Defines superscript icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Table">
            <summary>
            Defines table icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TableAlignCenter">
            <summary>
            Defines table align center icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TableAlignLeft">
            <summary>
            Defines table align left icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TableAlignRight">
            <summary>
            Defines table align right icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TableBorderCustom">
            <summary>
            Defines table border custom icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TableCell">
            <summary>
            Defines table cell icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TableCellNone">
            <summary>
            Defines table cell none icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TableDelete">
            <summary>
            Defines table delete icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TableInsertColumn">
            <summary>
            Defines table insert column icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TableInsertRow">
            <summary>
            Defines table insert row icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TableMerge">
            <summary>
            Defines table merge icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TableNested">
            <summary>
            Defines table nested icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TableOfContent">
            <summary>
            Defines table of content icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TableOverwriteCells">
            <summary>
            Defines table overwrite cells icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TableUpdate">
            <summary>
            Defines table update icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TextAlternative">
            <summary>
            Defines text alternative icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TextAnnotation">
            <summary>
            Defines text annotation icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TextForm">
            <summary>
            Defines text form icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TextHeader">
            <summary>
            Defines text header icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TextThatContains">
            <summary>
            Defines text that contains icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TextWrap">
            <summary>
            Defines text wrap icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Thumbnail">
            <summary>
            Defines thumbnail icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TimelineDay">
            <summary>
            Defines timeline day icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TimelineMonth">
            <summary>
            Defines timeline month icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TimelineToday">
            <summary>
            Defines timeline today icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TimelineWeek">
            <summary>
            Defines timeline week icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TimelineWorkWeek">
            <summary>
            Defines timeline work week icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TimeZone">
            <summary>
            Defines time zone icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TopTen">
            <summary>
            Defines top 10 icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TopBottomRules">
            <summary>
            Defines top bottom rules icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Trash">
            <summary>
            Defines trash icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TwoColumn">
            <summary>
            Defines two column icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.TwoRow">
            <summary>
            Defines two row icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Underline">
            <summary>
            Defines underline icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Undo">
            <summary>
            Defines undo icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Unfiltered">
            <summary>
            Defines unfiltered icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Ungroup1">
            <summary>
            Defines ungroup icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Ungroup2">
            <summary>
            Defines ungroup icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Upload">
            <summary>
            Defines upload icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.UpperCase">
            <summary>
            Defines upper case icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.UserDefined">
            <summary>
            Defines user defined icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.VerticalAlignBottom">
            <summary>
            Defines vertical align bottom icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.VerticalAlignCenter">
            <summary>
            Defines vertical align center icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.VerticalAlignTop">
            <summary>
            Defines vertical align top icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ViewSide">
            <summary>
            Defines view side icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Volume">
            <summary>
            Defines volume icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.WebLayout">
            <summary>
            Defines web layout icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.Week">
            <summary>
            Defines week icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ZoomIn">
            <summary>
            Defines zoom in icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ZoomOut">
            <summary>
            Defines zoom out icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconName.ZoomToFit">
            <summary>
            Defines zoom to fit icon.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.IconSize">
            <summary>
            Defines the icons to render with predefined size.
            IconSize will be included only when the icons will render using <see cref="P:Syncfusion.Blazor.Buttons.SfIcon.Name"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconSize.Small">
            <summary>
            Denotes the smaller size of icon.
            The icon size will be `8px`.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconSize.Medium">
            <summary>
            Denotes the default size of icon.
            The icon size will be `16px`.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Buttons.IconSize.Large">
            <summary>
            Denotes the larger size of icon.
            The icon size will be `24px`.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.SfIcon">
            <summary>
            SfIcon component used to render the predefined syncfusion icons using <see cref="P:Syncfusion.Blazor.Buttons.SfIcon.Name"/> property or custom font icons using <see cref="P:Syncfusion.Blazor.Buttons.SfIcon.IconCss"/> property.
            </summary>
            <example>
            The below example shows loading syncfusion icon using <see cref="P:Syncfusion.Blazor.Buttons.SfIcon.Name"/> property.
            <code><![CDATA[
            <SfIcon Name="IconName.Italic" Title="Italic"></SfIcon>
            ]]></code>
            The below example shows loading syncfusion icon using <see cref="P:Syncfusion.Blazor.Buttons.SfIcon.IconCss"/> property.
            <code><![CDATA[
            <SfIcon IconCss="e-icons e-bold" Title="Bold"></SfIcon>
            ]]></code>
            The below example shows loading third party icon using <see cref="T:Syncfusion.Blazor.Buttons.SfIcon"/> component.
            Plus icon were loaded from open iconic, by defining the open iconic font CSS.
            <code><![CDATA[
            <SfIcon IconCss="oi oi-plus" Title="Plus"></SfIcon>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfIcon.ChildContent">
            <exclude/>
            <summary>
            Gets or sets the child content for Icon component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfIcon.HtmlAttributes">
            <summary>
            Gets or sets a collection of additional attributes that will be applied to icon element.
            </summary>
            <remarks>
            Additional attributes can be added by specifying as inline attributes or by specifying <c>@attributes</c> directive.
            </remarks>
            <example>
            In the below code example, font size of the icon customized using <c>@attributes</c> directive.
            <code><![CDATA[
            <SfIcon Name="IconName.Copy" @attributes="customAttribute"></SfIcon>
            @code{
               Dictionary<string, object> customAttribute = new Dictionary<string, object>()
               {
                   { "style", "font-size: 20px" }
               };
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfIcon.IconCss">
            <summary>
            Gets or sets a CSS class string which can be used to provide custom icon or custom style for icons.
            </summary>
            <value>
            Accepts a CSS class string separated by space to provide custom icon or custom style for icons. The default value is <c>String.Empty</c>.
            </value>
            <remarks>
            IconCss property used to append custom class to the predefined icons. This property will also render the customized icons like font-awesome icons.
            </remarks>
            <example>
            In the below example custom icon is loaded using <c>IconCss</c> property.
            <code><![CDATA[
            <SfIcon IconCss="oi oi-home"></SfIcon>
            ]]></code>
            In the below example icon color is customized using <c>IconCss</c> property.
            <code><![CDATA[
            <SfIcon IconCss="oi oi-plus color-red"></SfIcon>
            <style>
                .color-red {
                   color: red; 
                }
            </style>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfIcon.Name">
            <summary>
            Gets or sets the name of the built-in syncfusion icons to render. 
            </summary>
            <value>
            One of the <see cref="T:Syncfusion.Blazor.Buttons.IconName"/> enumeration.
            </value>
            <remarks>
            This property is used to render icons from predefined <see cref="T:Syncfusion.Blazor.Buttons.IconName"/> options. You can use <see cref="P:Syncfusion.Blazor.Buttons.SfIcon.IconCss"/> to load custom icons.
            </remarks>
            <example>
            <code><![CDATA[
            <SfIcon Name="IconName.Bold"></SfIcon>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfIcon.Size">
            <summary>
            Gets or sets the size of the icon.
            </summary>
            <value>
            One of the <see cref="T:Syncfusion.Blazor.Buttons.IconSize"/> enumeration that specifies the size of the icon. 
            The default value is <see cref="F:Syncfusion.Blazor.Buttons.IconSize.Medium"/>
            </value>
            <remarks>
            The Size property used to set font size for icons. This property will considered only when icons are rendered using <see cref="P:Syncfusion.Blazor.Buttons.SfIcon.Name"/> property.
            </remarks>
            <example>
            <code><![CDATA[
            <SfIcon Name="IconName.Paste" Size="IconSize.Large"></SfIcon>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfIcon.Title">
            <summary>
            Gets or sets title attribute for icon.
            </summary>
            <value>
            Accepts a string. The default value is <c>String.Empty</c>.
            </value>
            <remarks>
            Title attribute used to improve accessibility with screen readers and show a tooltip on mouse over the icon.
            </remarks>
            <example>
            <code><![CDATA[
            <SfIcon Name="IconName.Cut" Title="Cut"></SfIcon>
            ]]></code>
            </example>
        </member>
        <member name="M:Syncfusion.Blazor.Buttons.SfIcon.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <summary>
            Triggers while properties get dynamically changed in the component.
            </summary>
            <returns>System.Threading.Tasks.</returns>
            <param name="parameters"><see cref="T:Microsoft.AspNetCore.Components.ParameterView"/> parameters.</param>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.SfRadioButton`1">
            <summary>
            The RadioButton is a graphical user interface element that allows you to select one option from the choices.
            It contains checked and unchecked states.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfRadioButton`1.Label">
            <summary>
            Defines the caption for the RadioButton, that describes the purpose of the RadioButton.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfRadioButton`1.LabelPosition">
            <summary>
            Positions label `before`/`after` the RadioButton.
            The possible values are:
            - Before: The label is positioned to left of the RadioButton.
            - After: The label is positioned to right of the RadioButton.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfRadioButton`1.ValueChange">
            <summary>
            Event trigger when the RadioButton state has been changed by user interaction.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Buttons.SfSwitch`1">
            <summary>
            The Switch is a graphical user interface element that allows you to toggle between checked and unchecked states.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfSwitch`1.OnLabel">
            <summary>
            Specifies a text that indicates the Switch is in checked state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfSwitch`1.OffLabel">
            <summary>
            Specifies a text that indicates the Switch is in unchecked state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Buttons.SfSwitch`1.ValueChange">
            <summary>
            Triggers when Switch state has been changed by user interaction.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.CalendarBase`1">
            <summary>
            The Calendar is a graphical user interface component that displays a Gregorian Calendar, and allows a user to select a date.
            </summary>
            <typeparam name="T">Specifies the type of CalendarBase.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.CalendarEditContext">
            <summary>
            Specifies the editcontext of the Calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.Max">
            <summary>
            Specifies a maximum date that is allowed a user can select in the calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.Min">
            <summary>
            Specifies a minimum date that is allowed a user can select in the calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.FirstDayOfWeek">
            <summary>
            Sets the calendar's first day of the week. By default, the first day of the week will be based on the current culture.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.CalendarMode">
            <summary>
            Sets the calendar's type like Gregorian.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.DayHeaderFormat">
            <summary>
            Specifies the format of the day that to be displayed in the header. By default, the format is short.
            <para>Possible formats are:</para>
            <list type="bullet">
            <item>
            <term>Short</term>
            <description>Sets the short format of day name (like Su ) in day header.</description>
            </item>
            <item>
            <term>Narrow</term>
            <description>Sets the single character of day name (like S ) in day header.</description>
            </item>
            <item>
            <term>Abbreviated</term>
            <description>Sets the min format of day name (like Sun ) in day header.</description>
            </item>
            <item>
            <term>Wide</term>
            <description>Sets the long format of day name (like Sunday ) in day header.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.Depth">
            <summary>
            Sets the maximum level of views such as a month, year, and decade in the calendar.
            <para>The depth view should be smaller than the start view to restrict its view navigation.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.KeyConfigs">
            <summary>
            Customizes the key actions in the calendar.
            <para>For example, when using a German keyboard, the key actions can be customized using these shortcuts.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.Start">
            <summary>
            Specifies the initial view of the calendar when it is opened. With the help of this property, the initial view can be changed to the year or decade view.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.ServerTimezoneOffset">
            <summary>
            By default, the date value will be processed based on the system time zone.
            <para>If you want to process the initial date value using the server time zone then specify the time zone value to the ServerTimezoneOffset property.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.ShowTodayButton">
            <summary>
            Specifies whether the today button will be displayed in the calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.WeekNumber">
            <summary>
            Specifies whether the week number of the year will be displayed in the calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarBase`1.WeekRule">
            <summary>
            Specifies the rule for defining the first week of the year.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.CalendarBase`1.ChangeEvent(System.EventArgs)">
            <summary>
            Triggers when the value get changed.
            </summary>
            <param name="args">Specifies the <see cref="T:System.EventArgs"> arguments</see>.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.CalendarBase`1.KeyBoardEventHandler(Syncfusion.Blazor.Calendars.Internal.KeyActions)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.CalendarBase`1.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <summary>
            Triggers while properties get dynamically changed in the component.
            </summary>
            <returns>System.Threading.Tasks.</returns>
            <param name="parameters"><see cref="T:Microsoft.AspNetCore.Components.ParameterView"/> parameters.</param>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.CellDetails">
            <summary>
            Specifies the cell details and its respective properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CellDetails.CellID">
            <summary>
            Gets or sets the cell Id.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CellDetails.ClassList">
            <summary>
            Gets or sets the cell Id.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CellDetails.Element">
            <summary>
            Gets or sets the element reference.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CellDetails.EventArgs">
            <summary>
            Gets or sets the event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CellDetails.CurrentDate">
            <summary>
            Gets or sets the current date.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.Internal.KeyActions">
            <summary>
            Specifies the key actions.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.KeyActions.Action">
            <summary>
            Gets or sets the action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.KeyActions.Key">
            <summary>
            Gets or sets the key.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.KeyActions.SelectDate">
            <summary>
            Gets or sets the selected date.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.KeyActions.FocusedDate">
            <summary>
            Gets or sets the focused date.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.KeyActions.ClassList">
            <summary>
            Gets or sets the class list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.KeyActions.ID">
            <summary>
            Gets or sets the id.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.KeyActions.Events">
            <summary>
            Gets or sets the mouse event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.KeyActions.TargetClassList">
            <summary>
            Gets or sets the class list of target.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.KeyActions.KeyCode">
            <summary>
            Gets or sets the key code.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.KeyActions.IsLeftCalendar">
            <summary>
            Gets or sets a value indicating whether it is a left calendar.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.Internal.ListOptions`1">
            <summary>
            Specifies the list options.
            </summary>
            <typeparam name="T">.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.ListOptions`1.DateTimeValue">
            <summary>
            Gets or sets the date and time value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.ListOptions`1.ItemData">
            <summary>
            Gets or sets the item date.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.ListOptions`1.ListClass">
            <summary>
            Gets or sets the list class.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.Internal.PresetsOptions">
            <summary>
            Specifies the preset options.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.PresetsOptions.Id">
            <summary>
            Gets or sets the id.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.PresetsOptions.Text">
            <summary>
            Gets or sets the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.PresetsOptions.Start">
            <summary>
            Gets or sets the start.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.PresetsOptions.End">
            <summary>
            Gets or sets the end.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.PresetsOptions.ListClass">
            <summary>
            Gets or sets the list class.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.PresetsOptions.IsCustomRange">
            <summary>
            Gets or sets a value indicating whether it is a custom range.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1">
            <summary>
            The Calendar base is a graphical user interface component that displays a Gregorian Calendar, and allows a user to select a date.
            </summary>
            <summary>
            The Calendar base is a graphical user interface component that displays a Gregorian Calendar, and allows a user to select a date.
            </summary>
            <summary>
            The Calendar base is a graphical user interface component that displays a Gregorian Calendar, and allows a user to select a date.
            </summary>
            <typeparam name="TValue">Soecifies the type of CalendarBaseRender.</typeparam>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.OnParametersSetAsync">
            <summary>
            Triggers when any of components property get changed dynamically.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.OnCalendarKeyboardEvent(Syncfusion.Blazor.Calendars.Internal.KeyActions)">
            <summary>
            Invoke the keyboard action handler.
            </summary>
            <param name="args"><see cref="T:Syncfusion.Blazor.Calendars.Internal.KeyActions"/> arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.MinMaxUpdate(`0)">
            <summary>
            Method used to update the minimum and maximum value.
            </summary>
            <param name="minMaxValue">.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.CurrentView">
            <summary>
            Gets the current view of the Calendar.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.IsDateTimeType">
            <summary>
            Checks whether the value type is DateTime.
            </summary>
            <returns>True or false based on the Type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.IsDateTimeOffsetType">
            <summary>
            Checks whether the value type is DateTimeOffset.
            </summary>
            <returns>True or false based on the Type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.NavigateTo(Syncfusion.Blazor.Calendars.CalendarView,`0,Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            This method is used to navigate to the month/year/decade view of the Calendar.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.KeyActionHandler(Syncfusion.Blazor.Calendars.Internal.KeyActions)">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.MultiSelection">
            <summary>
            Specifies the option to enable the multiple dates selection of the calendar.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.CellClickHandler">
            <summary>
            Specifies the cell click event.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.IsFocusTodayCell">
            <summary>
            Specifies whether the current day is focused or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.CurrentDateValue">
            <summary>
            Specifies current date value.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.MultiValues">
            <summary>
            Gets or sets multiple selected dates of the calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.MultiValuesChanged">
            <summary>
            Gets or sets a callback of value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.PrevIconClass">
            <summary>
            Gets or sets a previous icon state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarBaseRender`1.NextIconClass">
            <summary>
            Gets or sets a next icon state.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1">
            <summary>
            The Calendar base is a graphical user interface component that displays a Gregorian Calendar, and allows a user to select a date.
            </summary>
            <typeparam name="TCalendarCell">Specifies the type of CalendarDayCell.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.OnCellClick">
            <summary>
            Bind the cell click for calendar.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.CurrentCellDate">
            <summary>
            Get or Set the current date.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.LocalDates">
            <summary>
            Get or Set the local date.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.CellClass">
            <summary>
            Specifies the class of cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.IsFocusTodayDate">
            <summary>
            Specifies whether the current date is focused or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.Cells">
            <summary>
            Get or Set Cell value.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.TodayCellDate">
            <summary>
            Get or Set the today date value.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.IsNavigation">
            <summary>
            Get or Set calendar navigation.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.CalendarRenderView">
            <summary>
            Get or Set current calendar view.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.IsSelect">
            <summary>
            Get or Set the calendar cell selection.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.IsMultiSelect">
            <summary>
            Specifies the option to enable the multiple dates selection of the calendar.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.MultiselectValues">
            <summary>
            Get or Set calendar values.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.RowEleClass">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.OnInitializedAsync">
            <summary>
            Triggers when the component is rendered for the first time.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.OnParametersSetAsync">
            <summary>
            Triggers when any of the property is changed dynamically.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.OnAfterRender(System.Boolean)">
            <summary>
            Triggers after the component is rendered.
            </summary>
            <param name="firstRender">true if the component is rendered for the first time,otherwise false.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.Internal.CalendarDayCell`1.RenderCell(System.DateTime,`0,System.Boolean,System.DateTime[],Syncfusion.Blazor.Calendars.CalendarView)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.Internal.CalendarTableHeader`1">
            <summary>
            The Calendar day is show in header.
            </summary>
            <typeparam name="TCalendarHeader">Specifies the type of CalendarTableHeader.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.CalendarTableHeader`1.CalendarRenderView">
            <summary>
            Specifies the calendar view .
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.Internal.CalendarTableHeader`1.OnInitialized">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.Internal.CalendarTableHeader`1.OnParametersSet">
            <summary>
            Triggers while dynamically changing the component properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.Internal.CalendarTableHeader`1.CreateContentHeader">
            <summary>
            Method used to create the content of the header.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.Internal.DatePickerPopupArgs">
            <summary>
            Specifies the DatePicker popup arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.DatePickerPopupArgs.AppendTo">
            <summary>
            Specifies the node to which the popup element to be appended.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.DatePickerPopupArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.DatePickerPopupArgs.Event">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Internal.DatePickerPopupArgs.PreventDefault">
            <summary>
            Prevents the default action.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.CalendarEvents`1">
            <summary>
            Specifies the Calendar Events of the component.
            </summary>
            <typeparam name="TValue">Specifies the type of CalendarEvents.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarEvents`1.ValueChange">
            <summary>
            Triggers when the Calendar value is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarEvents`1.Selected">
            <summary>
            Triggers after selecting the value from Calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarEvents`1.DeSelected">
            <summary>
            Triggers after deselecting the value from Calendar. This event will trigger when enable the multiple date selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarEvents`1.Created">
            <summary>
            Triggers when Calendar is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarEvents`1.Destroyed">
            <summary>
            Triggers when Calendar is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarEvents`1.Navigated">
            <summary>
            Triggers when the Calendar is navigated to another level or within the same level of view.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.CalendarEvents`1.OnRenderDayCell">
            <summary>
            Triggers when each day cell of the Calendar is rendered.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.CalendarEvents`1.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the calendar component.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.SfCalendar`1">
            <summary>
            The Calendar is a graphical user interface component that displays a Gregorian Calendar, and allows a user to select a date.
            </summary>
            <summary>
            The Calendar is a graphical user interface component that displays a Gregorian Calendar, and allows a user to select a date.
            </summary>
            <summary>
            The Calendar is a graphical user interface component that displays a Gregorian Calendar, and allows a user to select a date.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfCalendar`1.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfCalendar`1.ValuesExpression">
            <summary>
            Specifies the expression for defining the values of the bound.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfCalendar`1.IsMultiSelection">
            <summary>
            Specifies the boolean value whether the calendar allows the user to select the multiple dates.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfCalendar`1.TabIndex">
            <summary>
            Specifies the tab order of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfCalendar`1.Values">
            <summary>
            Sets multiple selected dates of the calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfCalendar`1.ValuesChanged">
            <summary>
            Specifies the callback to trigger when the values changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfCalendar`1.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class etc., to the root element.
            <para>If you configured both property and equivalent html attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfCalendar`1.GetPersistData">
            <summary>
            Gets the properties to be maintained upon browser refresh.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfCalendar`1.GetPersistDataAsync">
            <summary>
            Gets the properties to be maintained upon browser refresh.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfCalendar`1.CurrentView">
            <summary>
            Gets the current view of the Calendar.
            </summary>
            <returns>Current view of the calendar.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfCalendar`1.NavigateTo(Syncfusion.Blazor.Calendars.CalendarView,`0)">
            <summary>
            To navigate to the month or year or decade view of the calendar.
            </summary>
            <param name="view">Specifies the view of the calendar.</param>
            <param name="date">Specifies the focused date in a view.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfCalendar`1.NavigateAsync(Syncfusion.Blazor.Calendars.CalendarView,`0)">
            <summary>
            To navigate to the month or year or decade view of the calendar.
            </summary>
            <param name="view">Specifies the view of the calendar.</param>
            <param name="date">Specifies the focused date in a view.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfCalendar`1.AddDatesAsync(System.DateTime[])">
            <summary>
            To adds the single or multiple dates to the Values property of the calendar.
            </summary>
            <param name="dates">Specifies the dates to be added to the Values property of the Calendar.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfCalendar`1.AddDate(System.DateTime[])">
            <summary>
            To adds the single or multiple dates to the Values property of the calendar.
            </summary>
            <param name="dates">Specifies the dates to be added to the Values property of the Calendar.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfCalendar`1.RemoveDatesAsync(System.DateTime[])">
            <summary>
            To removes the single or multiple dates from the Values property of the calendar.
            <param name="dates">Specifies the dates which need to be removed from the values property of the Calendar.</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfCalendar`1.RemoveDate(System.DateTime[])">
            <summary>
            To removes the single or multiple dates from the Values property of the calendar.
            <param name="dates">Specifies the dates which need to be removed from the values property of the Calendar.</param>
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfCalendar`1.ComponentDispose">
            <summary>
            Invoke the component dispose.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfCalendar`1.CurrentDate">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfCalendar`1.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfCalendar`1.OnParametersSetAsync">
            <summary>
            Triggers while dynamically changing the properties of the component.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfCalendar`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Triggers after the component is rendered.
            </summary>
            <param name="firstRender">True if the component is rendered for the first time.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfCalendar`1.PropertyParametersSet">
            <summary>
            Triggers while dynamically changing the properties of the component.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfCalendar`1.UpdateCalendarProperty(System.String,System.Object)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfCalendar`1.ChangeEvent(System.EventArgs)">
            <summary>
            Triggers when calendar value is changed.
            </summary>
            <param name="args">Specifies the event arguments.</param>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.SfDatePicker`1">
            <summary>
            The DatePicker is a graphical user interface component that allows the user to select or enter a date value.
            </summary>
            <summary>
            The DatePicker is a graphical user interface component that allows the user to select or enter a date value.
            </summary>
            <summary>
            Defines the <see cref="T:Syncfusion.Blazor.Calendars.SfDatePicker`1" />.
            </summary>
            <typeparam name="TValue">Specifies the type of SfDatePicker.</typeparam>
            <summary>
            The DatePicker is a graphical user interface component that allows the user to select or enter a date value.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.SfDatePicker`1.POPUP">
            <summary>
            Specifies the popup class.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.ROOT">
            <summary>
            Specifies the component element class.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.CONTAINER_CLASS">
            <summary>
            Specifies the container class.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.SfDatePicker`1.DATE_PICKER">
            <summary>
            Specifies the component class.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.SfDatePicker`1.ARIA_EXPANDED">
            <summary>
            Specifies the aria expanded.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.SfDatePicker`1.TRUE">
            <summary>
            Specifies the true.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.SfDatePicker`1.ACTIVE">
            <summary>
            Specifies the active class to the list.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.SfDatePicker`1.READ_ONLY">
            <summary>
            Specifies the input readonly.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.SfDatePicker`1.INPUT_FOCUS">
            <summary>
            Specifies the input focus.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.SfDatePicker`1.MODEL">
            <summary>
            Specifies the model class.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.SfDatePicker`1.BODY">
            <summary>
            Specifies the target.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.SfDatePicker`1.MODEL_HEADER">
            <summary>
            Specifies the model header.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.SfDatePicker`1.MODEL_YEAR">
            <summary>
            Specifies the model year.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.SfDatePicker`1.MODEL_DAY">
            <summary>
            Specifies the model day.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.SfDatePicker`1.MODEL_MONTH">
            <summary>
            Specifies the model month.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.SfDatePicker`1.POPUP_HOLDER">
            <summary>
            Specifies the popup holder.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.AllowEdit">
            <summary>
            Specifies a boolean value whether the DatePicker allows user to change the value via typing. When set as false, the DatePicker allows user to change the value via picker only.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the DatePicker that the placeholder text floats above the DatePicker based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the DatePicker when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the DatePicker.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the DatePicker after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.Format">
            <summary>
            Specifies the format of the value that to be displayed in component.
            <para>By default, the format is based on the culture.</para>
            <para>You can set the format to "format:'dd/MM/yyyy hh:mm'".</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the root element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            If you configured both property and equivalent input attribute, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in DatePicker. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.Readonly">
            <summary>
            Specifies the boolean value whether the DatePicker allows the user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.ShowClearButton">
            <summary>
            Specifies a boolean value that indicates whether the clear button is displayed in DatePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.StrictMode">
            <summary>
            Specifies the component to act as strict. So that, it allows to enter only a valid date  value within a specified range or else it will resets to previous value.
            <para> By default, StrictMode is in false. It allows invalid or out-of-range date value with highlighted error class.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.Width">
            <summary>
            Specifies the width of the DatePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.ZIndex">
            <summary>
            Specifies the z-index value of the DatePicker popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.TabIndex">
            <summary>
            Specifies the tab order of the DatePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.DatePickerParent">
            <summary>
            Parent component of DatePicker.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.FocusIn">
            <summary>
            Sets focus to the DatePicker component for interaction.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.FocusAsync">
            <summary>
            Sets focus to the DatePicker component for interaction.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.FocusOutAsync">
            <summary>
            Remove focus from the DatePicker component, if the component is in focus state.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.FocusOut">
            <summary>
            Remove focus from the DatePicker component, if the component is in focus state.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.GetPersistData">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.GetPersistDataAsync">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.ShowPopupAsync">
            <summary>
            Opens the popup to show the calendar.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.Show(System.EventArgs)">
            <summary>
            Opens the popup to show the calendar.
            </summary>
            <param name="args">Specifies the event arguments.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.HidePopupAsync">
            <summary>
            Hide the calendar popup.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.Hide(System.EventArgs)">
            <summary>
            Hide the calendar popup.
            </summary>
            <param name="args">Specifies the event arguments.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.CurrentView">
            <summary>
            Gets the current view of the calendar.
            </summary>
            <returns>The <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.NavigateAsync(Syncfusion.Blazor.Calendars.CalendarView,`0)">
            <summary>
            To navigate to the month or year or decade view of the calendar.
            </summary>
            <param name="view">Specifies the view of the calendar.</param>
            <param name="date">Specifies the focused date in a view.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.NavigateTo(Syncfusion.Blazor.Calendars.CalendarView,`0)">
            <summary>
            To navigate to the month or year or decade view of the calendar.
            </summary>
            <param name="view">Specifies the view of the calendar.</param>
            <param name="date">Specifies the focused date in a view.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.HidePopup(System.EventArgs)">
            <summary>
            Hides the calenar popup.
            </summary>
            <param name="args">The args<see cref="T:System.EventArgs"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.ClosePopup">
            <summary>
            Invoke the before the popup close.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.InputKeyActionHandle(Syncfusion.Blazor.Calendars.Internal.KeyActions)">
            <summary>
            Invoke the keyboard action handler.
            </summary>
            <param name="args">The args<see cref="T:Syncfusion.Blazor.Calendars.Internal.KeyActions"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.IsDevice">
            <summary>
            Gets or sets a value indicating whether isDevice.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.DateIcon">
            <summary>
            Gets or sets the dateIcon.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.CalendarClass">
            <summary>
            Gets or sets the calendarClass.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.PopupElement">
            <summary>
            Gets or sets the popupElement.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.PopupHolderEle">
            <summary>
            Gets or sets the popupHolderEle.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.ModelYear">
            <summary>
            Gets or sets the modelYear.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.ModelDay">
            <summary>
            Gets or sets the modelDay.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.ModelMonth">
            <summary>
            Gets or sets the modelMonth.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.IsCalendarRendered">
            <summary>
            Gets or sets a value indicating whether calendar is rendered.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.PopupEventArgs">
            <summary>
            Gets or sets the popupEventArgs.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.ChangedEventArgs">
            <summary>
            Gets or sets the changedEventArgs.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.ShowPopupCalendar">
            <summary>
            Gets or sets a value indicating whether ShowPopupCalendar.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.PreviousElementValue">
            <summary>
            Gets or sets the previousElementValue.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.IsCalendarRender">
            <summary>
            Gets or sets a value indicating whether isCalendarRender.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.IsListRender">
            <summary>
            Gets or sets a value indicating whether isListRender.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.PopupContainer">
            <summary>
            Gets or sets the popupContainer.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.CurrentCulture">
            <summary>
            Gets or sets the currentCulture.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.CalendarBaseInstance">
            <summary>
            Gets or sets the CalendarBaseInstance.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDatePicker`1.IsDatePickerPopup">
            <summary>
            Gets or sets a value indicating whether isDatePickerPopup.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.OnParametersSetAsync">
            <summary>
            Triggers if any of the component property get changed dynamically.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Triggered after the component is rendered.
            </summary>
            <param name="firstRender">The firstRender<see cref="T:System.Boolean"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.GetClientProperties">
            <summary>
            Method which updates the client properties.
            </summary>
            <returns>The <see cref="T:Syncfusion.Blazor.Calendars.DatePickerClientProps`1"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.UpdateValue(System.Object)">
            <summary>
            Task used to update the value of the component.
            </summary>
            <param name="dateValue">Specifies the date value.<see cref="T:System.Object"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.GetDefaultCulture">
            <summary>
            Method to get the default cultureinfo.
            </summary>
            <returns>Cultureinfo.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.StrictModeUpdate(System.Boolean)">
            <summary>
            Task which updates the strict mode.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.UpdateDateTimePopupState(System.Boolean)">
            <summary>
            Task used to update the popup state.
            </summary>
            <param name="isOpen">true if the popup is in opened state, otherwise false.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.ClientPopupRender">
            <summary>
            Method to trigger the client-side actions once the popup is displayed when date icon is clicked.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.IsDateTimeType">
            <summary>
            Checks whether the value type is DateTime.
            </summary>
            <returns>True or false based on the Type.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.IsDateTimeOffsetType">
            <summary>
            Checks whether the value type is DateTimeOffset.
            </summary>
            <returns>True or false based on the Type.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.MaintainTimePart(System.Object)">
            <summary>
            Persists the value's time part to avoid unwanted change events.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.ChangeHandler(Microsoft.AspNetCore.Components.ChangeEventArgs)">
            <summary>
            Triggers when the value of the component get changed.
            </summary>
            <param name="args">The <see cref="T:Microsoft.AspNetCore.Components.ChangeEventArgs"/> arguments.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.InvokeFocusEvent(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
            <summary>
            Triggers when the component get focused.
            </summary>
            <param name="args">The <see cref="T:Microsoft.AspNetCore.Components.Web.FocusEventArgs"/> arguments.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.InvokeBlurEvent(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
            <summary>
            Triggers when the component get focused out.
            </summary>
            <param name="args">The <see cref="T:Microsoft.AspNetCore.Components.Web.FocusEventArgs"/> arguments.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.FocusHandler(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
            <summary>
            Triggers when the component get focused.
            </summary>
            <param name="args">The <see cref="T:Microsoft.AspNetCore.Components.Web.FocusEventArgs"/> arguments.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.FocusOutHandler(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
            <summary>
            Triggers when the component get focused out.
            </summary>
            <param name="args">The <see cref="T:Microsoft.AspNetCore.Components.Web.FocusEventArgs"/> arguments.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.UpdateValidateClass">
            <summary>
            Method which updates the valid class based on the value .
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.MouseIconHandler(System.EventArgs,System.String)">
            <summary>
            Triggers while mouse icon performs an action.
            </summary>
            <param name="args"></param>
            <param name="iconName"></param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.TimeIconHandler(System.EventArgs)">
            <summary>
            Handles the time icon process.
            </summary>
            <param name="eventArgs"></param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.InvokeOpenEvent(System.Boolean,System.EventArgs)">
            <summary>
            Triggers while popup get opened.
            </summary>
            <param name="isOpen">The isOpen<see cref="T:System.Boolean"/>.</param>
            <param name="args">The args<see cref="T:System.EventArgs"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.DateIconHandler">
            <summary>
            Handles the date icon process.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.HideTimePopup">
            <summary>
            Method used to hide the time popup.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.UpdateInputValue(System.String)">
            <summary>
            Method used to update the value in the input element.
            </summary>
            <param name="dateValue">The dateValue<see cref="T:System.String"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.InvokeChangeEvent(System.EventArgs)">
            <summary>
            Triggers when the value of the component get changed.
            </summary>
            <param name="args">The args<see cref="T:System.EventArgs"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.ChangeEvent(System.EventArgs)">
            <summary>
            Triggers when the value of the component get changed.
            </summary>
            <param name="args">The args<see cref="T:System.EventArgs"/>.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.SelectCalendar">
            <summary>
            Triggers when change event is triggered to update the selected value in input element .
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.UpdateInput">
            <summary>
            Method used to update the value in input element.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.UpdateErrorClass">
            <summary>
            Method used to update the error class to the component.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.MinMaxUpdates">
            <summary>
            Method update the properties Min and Max .
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.ConvertGeneric(System.DateTime)">
            <summary>
            Method allows to convert the value to generic type.
            </summary>
            <param name="dateValue">The dateValue<see cref="T:System.DateTime"/>.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDatePicker`1.ComponentDispose">
            <summary>
            Triggers while disposing the component.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.DatePickerEvents`1">
            <summary>
            Specifies the DatePicker Events of the component.
            </summary>
            <typeparam name="TValue">Specifies the type of DatePickerEvents.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerEvents`1.BaseParent">
            <summary>
            Gets or sets the BaseParent.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerEvents`1.Blur">
            <summary>
            Triggers when the input loses the focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerEvents`1.ValueChange">
            <summary>
            Triggers when the Calendar value is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerEvents`1.Selected">
            <summary>
            Triggers after selecting the value from DatePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerEvents`1.Cleared">
            <summary>
            Triggers when datepicker value is cleared using clear button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerEvents`1.OnClose">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerEvents`1.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerEvents`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerEvents`1.Focus">
            <summary>
            Triggers when the input gets focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerEvents`1.Navigated">
            <summary>
            Triggers when the Calendar is navigated to another level or within the same level of view.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerEvents`1.OnOpen">
            <summary>
            Triggers when the popup is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerEvents`1.OnRenderDayCell">
            <summary>
            Triggers when each day cell of the Calendar is rendered.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.DatePickerEvents`1.OnInitializedAsync">
            <summary>
            Triggers while initial rendring of the component.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.DatePickerClientProps`1">
            <summary>
            Specifies the client properties of datepicker.
            </summary>
            <typeparam name="TValue">Specifies the type of DatePickerClientProps.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerClientProps`1.Readonly">
            <summary>
            Specifies the component in readonly state. When the Component is readonly it does not allow user input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerClientProps`1.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the DatePicker allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerClientProps`1.Locale">
            <summary>
            Specifies the global culture and localization of the DatePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerClientProps`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerClientProps`1.ZIndex">
            <summary>
            Specifies the z-index value of the datePicker popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerClientProps`1.KeyConfigs">
            <summary>
            Customizes the key actions in Calendar.
            For example, when using German keyboard, the key actions can be customized using these shortcuts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerClientProps`1.ShowClearButton">
            <summary>
            Specifies whether to show or hide the clear icon in DatePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerClientProps`1.Value">
            <summary>
            Gets or sets the selected date of the Calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerClientProps`1.AllowEdit">
            <summary>
            Specifies a boolean value whether the DatePicker allows user to change the value via typing. When set as false, the DatePicker allows user to change the value via picker only.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerClientProps`1.Depth">
            <summary>
            Sets the maximum level of view such as month, year, and decade in the Calendar.
            <para>Depth view should be smaller than the start view to restrict its view navigation.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerClientProps`1.Width">
            <summary>
            Sets the width of the input element in the datepicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerClientProps`1.IsDatePopup">
            <summary>
            True if the date popup is opened.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.SfDateRangePicker`1">
            <summary>
            The DateRangePicker is a graphical user interface component that allows user to select the date range from the calendar.
            </summary>
            <typeparam name="TValue">Specifies the type of SfDateRangePicker.</typeparam>
            <summary>
            The DateRangePicker is a graphical user interface component that allows the user to select or enter a date value.
            </summary>
            <summary>
            The DateRangePicker is a graphical user interface component that allows the user to select or enter a date value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.EndDateExpression">
            <summary>
            Specifies the expression for defining the end date of the bound.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.StartDateExpression">
            <summary>
            Specifies the expression for defining the start date of the bound.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.ValueExpression">
            <summary>
            Specifies the expression for defining the value of the bound.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.Value">
            <summary>
            Gets or sets the selected date of the Calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.ValueChanged">
            <summary>
            Specifies the callback to trigger when the value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.AllowEdit">
            <summary>
            Specifies a boolean value whether the DateRangePicker allows user to change the value via typing. When set as false, the DateRangePicker allows user to change the value via picker only.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.EndDate">
            <summary>
            Gets or sets the end date of the date range selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.EndDateChanged">
            <summary>
            Triggers when end date of the DateRangePicker is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.FloatLabelType">
            <summary>
            Gets or sets the floating label behavior of the DateRangePicker that the placeholder text floats above the DateRangePicker based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the DateRangePicker when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the DateRangePicker.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the DateRangePicker after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.Format">
            <summary>
            Gets or sets the required date format to the start and end date string.
            <para>By default, the format is based on the culture.</para>
            <para>You can set the format to "format:'dd/MM/yyyy hh:mm'".</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the root element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            If you configured both property and equivalent input attribute, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.MaxDays">
            <summary>
             Gets or sets the maximum span of days that can be allowed in a date range selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.MinDays">
            <summary>
             Gets or sets the minimum span of days that can be allowed in date range selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.Placeholder">
            <summary>
            Gets or sets the text that is shown as a hint or placeholder until the user focuses or enter a value in DateRangePicker. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.Readonly">
            <summary>
            Specifies a boolean value whether the DateRangePicker allows the user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.Separator">
            <summary>
            Sets or gets the string that used between the start and end date string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.ShowClearButton">
            <summary>
            Specifies whether to show or hide the clear icon in DateRangePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.StartDate">
            <summary>
            Gets or sets the start date of the date range selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.DateRangePickerParent">
            <summary>
            Parent component of DataManager.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.StartDateChanged">
            <summary>
            Triggers when start date of the DateRangePicker is changed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.StrictMode">
            <summary>
            Specifies the DateRangePicker to act as strict. So that, it allows to enter only a valid date value within a specified range or else it will resets to previous value.
            <para> By default, StrictMode is in false. It allows invalid or out-of-range date value with highlighted error class.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.Width">
            <summary>
            Specifies the width of the DateRangePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.ZIndex">
            <summary>
            specifies the z-index value of the DateRangePicker popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.Presets">
            <summary>
            Specifies the Presets of the dateRangePicker popup element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.FocusIn">
            <summary>
            Sets focus to the DateRangePicker component for interaction.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.FocusAsync">
            <summary>
            Sets focus to the DateRangePicker component for interaction.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.FocusOut">
            <summary>
            Remove focus from the DateRangePicker component, if the component is in focus state.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.FocusOutAsync">
            <summary>
            Remove focus from the DateRangePicker component, if the component is in focus state.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.ShowPopupAsync">
            <summary>
            Opens the popup to show the calendar.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.HidePopupAsync">
            <summary>
            Hide the calendar popup.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.Show">
            <summary>
            Opens the popup to show the calendar.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.CurrentView">
            <summary>
            Gets the current view of the calendar.
            </summary>
            <returns>returns current view of the calendar.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.Hide">
            <summary>
            Hide the calendar popup.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.HidePopup(System.EventArgs)">
            <summary>
            Hides the range popup.
            </summary>
            <param name="args">Specifies the event arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.ClosePopup">
            <summary>
            Invoke the before the popup close.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.GetPersistData">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.InputKeyActionHandle(Syncfusion.Blazor.Calendars.Internal.KeyActions)">
            <summary>
            Invoke the keyboard action handler.
            </summary>
            <param name="args">Specifies key action arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.CallStateHasChangedAsync">
            <summary>
            Invoke state change of the component.
            </summary>
            <exclude/>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.UpdateChildProperties(System.Object)">
            <summary>
            Update the children properties.
            </summary>
            <param name="presetValue">Specifies the preset values.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.UpdateHeaders">
            <summary>
            Update the header properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.OnParametersSetAsync">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.OnPresetItemClick(Syncfusion.Blazor.Calendars.Internal.PresetsOptions)">
            <summary>
            Triggers when the preset items get clicked.
            </summary>
            <param name="args"><see cref="T:Syncfusion.Blazor.Calendars.Internal.PresetsOptions"/> arguments.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Triggers after the component was rendered.
            </summary>
            <param name="firstRender">true if the component rendered for the first time.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.OnPresetItemMouseOver(Syncfusion.Blazor.Calendars.Internal.PresetsOptions)">
            <summary>
            Triggeres while hovering the mouse pointer on preset items.
            </summary>
            <param name="args">Specifies the PresetsOptions arguments.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.OnPresetItemMouseOut">
            <summary>
            Triggers when the mouse pointer moved out of the preset items.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.SetPopupVisibility(System.Boolean)">
            <summary>
            Sets popup visibility based on the provided arguments.
            </summary>
            <param name="args">Boolean.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.PropertyInitialized">
            <summary>
            Initialize the properties during render.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.PropertyParametersSet">
            <summary>
            Update the properties during parametersSet.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.GetDefaultFormat">
            <summary>
            Method to get the default format based on culture, if none specified.
            </summary>
            <returns>Returns string format.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.GetDefaultCulture">
            <summary>
            Method to get the default cultureinfo.
            </summary>
            <returns>Cultureinfo.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateRangePicker`1.ClientPopupRender">
            <summary>
            Method to trigger the client-side actions once the popup is displayed when date icon is clicked.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1">
            <summary>
            Specifies the DateRangePicker Events of the component.
            </summary>
            <typeparam name="TValue">Specifies the type of DateRangePickerEvents.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1.Blur">
            <summary>
            Triggers when the input loses the focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1.ValueChange">
            <summary>
            Triggers when the Calendar value is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1.Cleared">
            <summary>
            Triggers when daterangepicker value is cleared using clear button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1.OnClose">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1.Created">
            <summary>
            Triggers when DateRangePicker is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1.Destroyed">
            <summary>
            Triggers when DateRangePicker is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1.Focus">
            <summary>
             Triggers when the input gets focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1.Navigated">
            <summary>
            Triggers when the Calendar is navigated to another view or within the same level of view.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1.OnOpen">
            <summary>
            Triggers when the popup is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1.OnRenderDayCell">
            <summary>
            Triggers when each day cell of the Calendar is rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1.RangeSelected">
            <summary>
            Triggers on selecting the start and end date.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.DateRangePickerEvents`1.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.Presets">
            <summary>
            Defines the label string of the preset range.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Presets.Label">
            <summary>
            Defines the label string of the preset range.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Presets.Start">
            <summary>
            Defines the start date of the preset range.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.Presets.End">
            <summary>
            Defines the end date of the preset range.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerClientProps`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerClientProps`1.ZIndex">
            <summary>
            Specifies the z-index value of the dateRangePicker popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerClientProps`1.Presets">
            <summary>
            Specifies the Presets of the dateRangePicker popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerClientProps`1.IsCustomWindow">
            <summary>
            Specifies the Presets of the dateRangePicker popup element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1">
            <summary>
            Specifies the DateTimePicker Events of the component.
            </summary>
            <typeparam name="TValue">Specifies the type of DateTimePickerEvents.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.Blur">
            <summary>
            Triggers when the input loses the focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.ValueChange">
            <summary>
            Triggers when the Calendar value is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.Selected">
            <summary>
            Triggers after selecting the value from DatePicker and TimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.Cleared">
            <summary>
            Triggers when dateptimeicker value is cleared using clear button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.OnClose">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.Focus">
            <summary>
            Triggers when the input gets focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.OnItemRender">
            <summary>
            Triggers while rendering the each popup list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.Navigated">
            <summary>
            Triggers when the Calendar is navigated to another level or within the same level of view.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.OnOpen">
            <summary>
            Triggers when the popup is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.OnRenderDayCell">
            <summary>
            Triggers when each day cell of the Calendar is rendered.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.DateTimePickerEvents`1.OnInitializedAsync">
            <summary>
            Triggers when the component is initially rendered.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.SfDateTimePicker`1">
            <summary>
            The DateTimePicker is a graphical user interface component that allows the user to select or enter a date value.
            </summary>
            <typeparam name="TValue">Specifies the type of SfDateTimePicker.</typeparam>
            <summary>
            The DateTimePicker is a graphical user interface component that allows to select a date and time value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.ScrollTo">
            <summary>
            Specifies the scroll bar position, if there is no value is selected in the DateTimePicker popup list or
            the given value is not present in the DateTimePicker popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.Max">
            <summary>
            Gets or sets the maximum time value that can be allowed to select in DateTimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.Min">
            <summary>
            Gets or sets the minimum time value that can be allowed to select in DateTimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.Step">
            <summary>
            Specifies the time interval between the two adjacent time values in the time popup list .
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.TimeFormat">
            <summary>
            Specifies the format of the time value that to be displayed in time popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.DateTimePickerParent">
            <summary>
            Parent component of DateTimePicker.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.ROOT">
            <summary>
            Gets or sets the root class of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.CONTAINER_CLASS">
            <summary>
            Gets or sets the container class of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.OnKeyDown">
            <summary>
            Triggers when the input gets keydown.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.ClientPopupRender">
            <summary>
            Task used to render the popup.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.InvokeOpenEvent(System.Boolean,System.EventArgs)">
            <summary>
            Triggers when popup get opened.
            </summary>
            <param name="isOpen">True when popup is in opened state.</param>
            <param name="args">The args<see cref="T:System.EventArgs"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.TimeIconHandler(System.EventArgs)">
            <summary>
            Handles the time icon process.
            </summary> 
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.HideTimePopup">
            <summary>
            Task used to hide the time popup.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.UpdateCalendarProperty(System.String,System.Object)">
            <summary>
            Task used to update the properties of calendar.
            </summary>
            <param name="key">Specifies the key value.</param>
            <param name="dateTimeValue">Specifies the date value.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.ChangeEvent(System.EventArgs)">
            <summary>
            Triggered when the value of the component get changed.
            </summary>
            <param name="args">The args<see cref="T:System.EventArgs"/>.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.InvokeSelectEvent(Syncfusion.Blazor.Calendars.SelectedEventArgs{`0})">
            <summary>
            Triggers when the value is selected in popups.
            </summary>
            <param name="args">The args<see cref="T:Syncfusion.Blazor.Calendars.SelectedEventArgs`1"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.UpdateDateTimePopupState(System.Boolean)">
            <summary>
            Task used to update the date and time popup states.
            </summary>
            <param name="isOpen">The isOpen<see cref="T:System.Boolean"/>.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.InvokeFocusEvent(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
            <summary>
            Triggers when the component get focused.
            </summary>
            <param name="args">The args<see cref="T:Microsoft.AspNetCore.Components.Web.FocusEventArgs"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.InvokeBlurEvent(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
            <summary>
            triggers when the component get focused out.
            </summary>
            <param name="args">The args <see cref="T:Microsoft.AspNetCore.Components.Web.FocusEventArgs"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.OnMouseClick(Syncfusion.Blazor.Calendars.Internal.ListOptions{`0},Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Triggers when the mouse is clicked on the component.
            </summary>
            <param name="listItem">The listItem<see cref="T:Syncfusion.Blazor.Calendars.Internal.ListOptions`1"/>.</param>
            <param name="eventArgs">The eventArgs<see cref="T:Microsoft.AspNetCore.Components.Web.MouseEventArgs"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.InvokeChangeEvent(System.EventArgs)">
            <summary>
            Triggers when the value get changed in the component.
            </summary>
            <param name="args">The args<see cref="T:System.EventArgs"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.ShowDatePopupAsync">
            <summary>
            Opens the popup to show the list items.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.ShowDatePopup">
            <summary>
            Opens the popup to show the calendar.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.ShowTimePopupAsync">
            <summary>
            Opens the popup to show the list items.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.ShowTimePopup">
            <summary>
            Opens the popup to show the list items.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfDateTimePicker`1.ConvertGeneric(System.DateTime)">
            <summary>
            Method used to convert the date value to generic type.
            </summary>
            <param name="dateValue">The dateValue<see cref="T:System.DateTime"/>.</param>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.CalendarView">
            <summary>
            Specifies the view of the calendar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.CalendarView.Month">
            <summary>
            Specifies the Month view of the calendar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.CalendarView.Year">
            <summary>
            Specifies the Year view of the calendar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.CalendarView.Decade">
            <summary>
            Specifies the Decade view of the calendar.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.CalendarType">
            <summary>
            Specifies the type of the calendar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.CalendarType.Gregorian">
            <summary>
            Specifies the Gregorian calendar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.CalendarType.Islamic">
            <summary>
            Specifies the Islamic calendar.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.DayHeaderFormats">
            <summary>
            Specifies the day header formats.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.DayHeaderFormats.Short">
            <summary>
            Sets the short format of day name (like Su ) in day header.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.DayHeaderFormats.Narrow">
            <summary>
            Sets the single character of day name (like S ) in day header.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.DayHeaderFormats.Abbreviated">
            <summary>
            Sets the min format of day name (like Sun ) in day header.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Calendars.DayHeaderFormats.Wide">
            <summary>
            Sets the long format of day name (like Sunday ) in day header.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.BlurEventArgs">
            <summary>
            Defines the argument for the blur event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.BlurEventArgs.Model">
            <summary>
            Gets or sets the Model.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.SelectedEventArgs`1">
            <summary>
            Defines the event argument for Selected event.
            </summary>
            <typeparam name="T">.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SelectedEventArgs`1.Value">
            <summary>
            Returns the selected date.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.DeSelectedEventArgs`1">
            <summary>
            Defines the event argument for DeSelected event.
            </summary>
            <typeparam name="T">.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DeSelectedEventArgs`1.Value">
            <summary>
            Returns the selected date.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.ChangedEventArgs`1">
            <summary>
            Defines the argument for the Change event.
            </summary>
            <typeparam name="T">.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ChangedEventArgs`1.Element">
            <summary>
            Defines the element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ChangedEventArgs`1.Event">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ChangedEventArgs`1.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ChangedEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ChangedEventArgs`1.Value">
            <summary>
            Defines the selected date of the Calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ChangedEventArgs`1.Values">
            <summary>
            Defines the multiple selected date of the Calendar.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.ClearedEventArgs">
            <summary>
            Defines the argument for the Clear event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ClearedEventArgs.Event">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.FocusEventArgs">
            <summary>
            Defines the argument for the Focus event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.FocusEventArgs.Model">
            <summary>
            Gets or sets the Model.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.NavigatedEventArgs">
            <summary>
            Defines the argument for the Navigation event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.NavigatedEventArgs.Date">
            <summary>
            Defines the focused date in a view.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.NavigatedEventArgs.Event">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.NavigatedEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.NavigatedEventArgs.View">
            <summary>
            Defines the current view of the Calendar.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.RenderDayCellEventArgs">
            <summary>
            Defines the argument for the RenderDayCell event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RenderDayCellEventArgs.Date">
            <summary>
            Defines the current date of the Calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RenderDayCellEventArgs.Element">
            <summary>
            Specifies the day cell element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RenderDayCellEventArgs.IsDisabled">
            <summary>
            Specifies whether to disable the current date or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RenderDayCellEventArgs.IsOutOfRange">
            <summary>
            Defines whether the current date is out of range (less than min or greater than max) or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RenderDayCellEventArgs.CellData">
            <summary>
            Gets or sets the cell data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RenderDayCellEventArgs.Name">
            <summary>
            Gets or sets the Name
            Specifies name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.PopupObjectArgs">
            <summary>
            Defines the argument for the Open and Close event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.PopupObjectArgs.AppendTo">
            <summary>
            Specifies the node to which the popup element to be appended.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.PopupObjectArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.PopupObjectArgs.Event">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.PopupObjectArgs.PreventDefault">
            <summary>
            Prevents the default action.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.RangeEventArgs">
            <summary>
            Defines the argument for the Range event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangeEventArgs.DaySpan">
            <summary>
            Defines the day span between the range.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangeEventArgs.Element">
            <summary>
            Specifies the element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangeEventArgs.EndDate">
            <summary>
            Defines the end date.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangeEventArgs.Event">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangeEventArgs.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangeEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangeEventArgs.StartDate">
            <summary>
            Defines the start date.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangeEventArgs.Text">
            <summary>
            Defines the value string in the input element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangeEventArgs.Value">
            <summary>
            Defines the value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.RangePickerEventArgs`1">
            <summary>
            Defines the argument for the Range event.
            </summary>
            <typeparam name="TValue">.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePickerEventArgs`1.DaySpan">
            <summary>
            Defines the day span between the range.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePickerEventArgs`1.Element">
            <summary>
            Specifies the element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePickerEventArgs`1.EndDate">
            <summary>
            Defines the end date.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePickerEventArgs`1.Event">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePickerEventArgs`1.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePickerEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePickerEventArgs`1.StartDate">
            <summary>
            Defines the start date.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePickerEventArgs`1.Text">
            <summary>
            Defines the value string in the input element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePickerEventArgs`1.Value">
            <summary>
            Defines the value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.RangePopupEventArgs">
            <summary>
            Defines the argument for the DateRangePicker Popup event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePopupEventArgs.AppendTo">
            <summary>
            Specifies the node to which the popup element to be appended.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePopupEventArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePopupEventArgs.Date">
            <summary>
            Defines the range string in the input element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.RangePopupEventArgs.Event">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.ChangeEventArgs`1">
            <summary>
            Defines the argument for the Change event.
            </summary>
            <typeparam name="T">.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ChangeEventArgs`1.Element">
            <summary>
            Defines the element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ChangeEventArgs`1.Event">
            <summary>
            Defines the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ChangeEventArgs`1.IsInteracted">
            <summary>
            Defines the boolean that returns true when the value is changed by user interaction, otherwise returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ChangeEventArgs`1.Text">
            <summary>
            Defines the selected time value as string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ChangeEventArgs`1.Value">
            <summary>
            Defines the selected time value of the TimePicker.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.ItemEventArgs`1">
            <summary>
            Interface for before list item render .
            </summary>
            <typeparam name="T">.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ItemEventArgs`1.Element">
            <summary>
            Defines the created LI element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ItemEventArgs`1.IsDisabled">
            <summary>
            Specifies whether to disable the current time value or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ItemEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ItemEventArgs`1.Text">
            <summary>
            Defines the displayed text value in a popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ItemEventArgs`1.Value">
            <summary>
            Defines the Date object of displayed text in a popup list.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.PopupEventArgs">
            <summary>
            Defines the argument for the Open and Close event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.PopupEventArgs.AppendTo">
            <summary>
            Specifies the node to which the popup element to be appended.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.PopupEventArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.PopupEventArgs.Event">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.PopupEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.DateRangePickerModel`1">
            <summary>
            Interface for a class DateRangePicker.
            </summary>
            <typeparam name="TValue">.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Blur">
            <summary>
            Triggers when the input loses the focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Change">
            <summary>
            Triggers when the DateRangePicker value is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Cleared">
            <summary>
            Triggers when daterangepicker value is cleared using clear button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Close">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Created">
            <summary>
            Triggers when the DateRangePicker is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Destroyed">
            <summary>
            Triggers when the DateRangePicker is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Focus">
            <summary>
            Triggers when the input gets focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Navigated">
            <summary>
            Triggers when the Calendar is navigated to another view or within the same level of view.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Open">
            <summary>
            Triggers when the popup is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.RenderDayCell">
            <summary>
            Gets or sets the RenderDayCell
            Triggers when each day cell of the Calendar is rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Select">
            <summary>
            Triggers on selecting the start and end date.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.AllowEdit">
            <summary>
            Specifies a boolean value whether the DateRangePicker allows user to change the value via typing. When set as false, the DateRangePicker allows user to change the value via picker only.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the DateRangePicker. One or more custom CSS classes can be added to a DateRangePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Depth">
            <summary>
            Sets the maximum level of view (Month, Year, Decade) in the Calendar.
            <para>Depth view should be smaller than the Start view to restrict its view navigation.</para>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.EnablePersistence">
            <summary>
            Enable or disable the persisting DateRangePicker's state between the page reloads. If enabled, following list of states will be persisted.
            <list type="bullet">
            <item>
            <term>StartDate</term>
            </item>
            <item>
            <term>EndDate</term>
            </item>
            <item>
            <term>Value</term>
            </item>
            </list>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.EnableRtl">
            <summary>
            Enable or disable rendering DateRangePicker in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the DateRangePicker allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.EndDate">
            <summary>
            Gets or sets the end date of the date range selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.FirstDayOfWeek">
            <summary>
            Sets the calendar's first day of the week. By default, the first day of the week will be based on the current culture.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the DateRangePicker that the placeholder text floats above the DateRangePicker based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the DateRangePicker when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the DateRangePicker.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the DateRangePicker after focusing it or when enters the value in it.</description>
            </item>
            </list>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Format">
            <summary>
            Specifies the format of the value that to be displayed in DateRangePicker.
            <para>By default, the format is based on the culture.</para>
            <para>You can set the format to "format:'dd/MM/yyyy hh:mm'".</para>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.HtmlAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the DateRangePicker considers the property value.</para>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.KeyConfigs">
            <summary>
            Customizes the key actions in DateRangePicker.
            For example, when using German keyboard, the key actions can be customized using these shortcuts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Locale">
            <summary>
            Specifies the global culture and localization of the DateRangePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Max">
            <summary>
            Gets or sets the maximum date that can be selected in the calendar-popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.MaxDays">
            <summary>
            Specifies the maximum span of days that can be allowed in a date range selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Min">
            <summary>
            Gets or sets the minimum date that can be selected in the calendar-popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.MinDays">
            <summary>
            Specifies the minimum span of days that can be allowed in date range selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in DateRangePicker. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Presets">
            <summary>
            Set the predefined ranges which let the user pick required range easily in a DateRangePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Readonly">
            <summary>
            Specifies a boolean value whether the DateRangePicker allows the user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Separator">
            <summary>
            Sets or gets the string that used between the start and end date string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.ShowClearButton">
            <summary>
            Specifies whether to show or hide the clear icon in DateRangePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Start">
            <summary>
            Specifies the initial view of the Calendar when it is opened.
            With the help of this property, initial view can be changed to year or decade view.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.StartDate">
            <summary>
            Gets or sets the start date of the date range selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.StrictMode">
            <summary>
            Gets or sets a value indicating whether StrictMode
            Specifies the DateRangePicker to act as strict. So that, it allows to enter only a valid date value within a specified range or else it will resets to previous value.
            <para> By default, StrictMode is in false. It allows invalid or out-of-range date value with highlighted error class.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Value">
            <summary>
            Gets or sets the start and end date of the Calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.WeekNumber">
            <summary>
            Determines whether the week number of the Calendar is to be displayed or not.
            The week number is displayed in every week row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.Width">
            <summary>
            Specifies the width of the DateRangePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerModel`1.ZIndex">
            <summary>
            specifies the z-index value of the DateRangePicker popup element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.PresetsModel">
            <summary>
            Interface for a class Presets.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.PresetsModel.End">
            <summary>
            Defines the end date of the preset range.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.PresetsModel.Label">
            <summary>
            Defines the label string of the preset range.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.PresetsModel.Start">
            <summary>
            Defines the start date of the preset range.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.DateTimePickerModel`1">
            <summary>
            Interface for a class DateTimePicker.
            </summary>
            <typeparam name="T">.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Blur">
            <summary>
            Triggers when the input loses the focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Change">
            <summary>
            Triggers when the date or time value is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Cleared">
            <summary>
            Triggers when DateTimePicker value is cleared using clear button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Close">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Created">
            <summary>
            Triggers when the DateTimePicker is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Destroyed">
            <summary>
            Triggers when the DateTimePicker is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Focus">
            <summary>
            Triggers when the input gets focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Navigated">
            <summary>
            Triggers when the Calendar is navigated to another view or within the same level of view.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Open">
            <summary>
            Triggers when the popup is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.RenderDayCell">
            <summary>
            Triggers when each day cell of the Calendar is rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.AllowEdit">
            <summary>
            Specifies a boolean value whether the DateTimePicker allows user to change the value via typing. When set as false, the DateTimePicker allows user to change the value via picker only.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.CalendarMode">
            <summary>
            Gets or sets the Calendar's Type like gregorian or islamic.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the DateTimePicker. One or more custom CSS classes can be added to a DateTimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.DayHeaderFormat">
            <summary>
            Specifies the format of the day that to be displayed in the header. By default, the format is Short.
            <para>Possible formats are:</para>
            <list type="bullet">
            <item>
            <term>Short</term>
            <description>Sets the short format of day name (like Su ) in day header.</description>
            </item>
            <item>
            <term>Narrow</term>
            <description>Sets the single character of day name (like S ) in day header.</description>
            </item>
            <item>
            <term>Abbreviated</term>
            <description>Sets the min format of day name (like Sun ) in day header.</description>
            </item>
            <item>
            <term>Wide</term>
            <description>Sets the long format of day name (like Sunday ) in day header.</description>
            </item>
            </list>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Depth">
            <summary>
            Sets the maximum level of view (Month, Year, Decade) in the Calendar.
            <para>Depth view should be smaller than the Start view to restrict its view navigation.</para>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.EnablePersistence">
            <summary>
            Enable or disable persisting DateTimePicker's state between page reloads. If enabled, the `Value` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.EnableRtl">
            <summary>
            Enable or disable rendering DateTimePicker in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the DateTimePicker allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.FirstDayOfWeek">
            <summary>
            Sets the calendar's first day of the week. By default, the first day of the week will be based on the current culture.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the DateTimePicker that the placeholder text floats above the DateTimePicker based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the DateTimePicker when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the DateTimePicker.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the DateTimePicker after focusing it or when enters the value in it.</description>
            </item>
            </list>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Format">
            <summary>
            Specifies the format of the value that to be displayed in DateTimePicker.
            <para>By default, the format is based on the culture.</para>
            <para>You can set the format to "format:'dd/MM/yyyy hh:mm'".</para>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.HtmlAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the DateTimePicker considers the property value.</para>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.KeyConfigs">
            <summary>
            Customizes the key actions in DateTimePicker.
            For example, when using German keyboard, the key actions can be customized using these shortcuts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Locale">
            <summary>
            Specifies the global culture and localization of the DateTimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Max">
            <summary>
            Gets or sets the maximum date that can be selected in the DateTimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Min">
            <summary>
            Gets or sets the minimum date that can be selected in the DateTimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in DateTimePicker. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Readonly">
            <summary>
            Specifies a boolean value whether the DateTimePicker allows the user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.ScrollTo">
            <summary>
            Specifies the scroll bar position, if there is no value is selected in the timepicker popup list or
            the given value is not present in the timepicker popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.ServerTimezoneOffset">
            <summary>
            By default, the date value will be processed based on system time zone.
            If you want to process the initial date value using server time zone
            then specify the time zone value to `ServerTimezoneOffset` property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.ShowClearButton">
            <summary>
            Specifies whether to show or hide the clear icon in textbox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.ShowTodayButton">
            <summary>
            Specifies whether the today button is to be displayed or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Start">
            <summary>
            Specifies the initial view of the Calendar when it is opened.
            With the help of this property, initial view can be changed to year or decade view.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Step">
            <summary>
            Specifies the time interval between the two adjacent time values in the time popup list .
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.StrictMode">
            <summary>
            Specifies the DateTimePicker to act as strict. So that, it allows to enter only a valid date value within a specified range or else it will resets to previous value.
            <para> By default, StrictMode is in false. It allows invalid or out-of-range date value with highlighted error class.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.TimeFormat">
            <summary>
            Specifies the format of the time value that to be displayed in time popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Value">
            <summary>
            Gets or sets the selected date of the Calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.WeekNumber">
            <summary>
            Determines whether the week number of the year is to be displayed in the calendar or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.Width">
            <summary>
            Specifies the width of the DateTimePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateTimePickerModel`1.ZIndex">
            <summary>
            Specifies the z-index value of the DateTimePicker popup element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.DatePickerModel">
            <summary>
            Interface for a class DatePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.AllowEdit">
            <summary>
            Specifies a boolean value whether the DatePicker allows user to change the value via typing. When set as false, the DatePicker allows user to change the value via picker only.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the DatePicker. One or more custom CSS classes can be added to a DatePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the DatePicker allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the DatePicker that the placeholder text floats above the DatePicker based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the DatePicker when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the DatePicker.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the DatePicker after focusing it or when enters the value in it.</description>
            </item>
            </list>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.Format">
            <summary>
            Specifies the format of the value that to be displayed in component.
            <para>By default, the format is based on the culture.</para>
            <para>You can set the format to "format:'dd/MM/yyyy hh:mm'".</para>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the root element.
            <para>If you configured both the property and equivalent html attribute, then the component considers the property value.</para>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.Locale">
            <summary>
            Specifies the global culture and localization of the calendar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in DatePicker. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.Readonly">
            <summary>
            Specifies the boolean value whether the DatePicker allows the user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.ShowClearButton">
            <summary>
            Specifies a boolean value that indicates whether the clear button is displayed in DatePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.StrictMode">
            <summary>
            Specifies the component to act as strict. So that, it allows to enter only a valid date  value within a specified range or else it will resets to previous value.
            </summary>
            <para> By default, StrictMode is in false. It allows invalid or out-of-range date value with highlighted error class.</para>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.Width">
            <summary>
            Specifies the width of the DatePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.ZIndex">
            <summary>
            specifies the z-index value of the DatePicker popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DatePickerModel.TabIndex">
            <summary>
            Specifies the tab order of the DatePicker component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.TimePickerModel`1">
            <summary>
            Interface for a class TimePicker.
            </summary>
            <typeparam name="T">.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Blur">
            <summary>
            Triggers when the input loses the focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Change">
            <summary>
            Triggers when the time value is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Cleared">
            <summary>
            Triggers when TimePicker value is cleared using clear button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Close">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Created">
            <summary>
            Triggers when the TimePicker is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Destroyed">
            <summary>
            Triggers when the TimePicker is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Focus">
            <summary>
            Triggers when the input gets focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.ItemRender">
            <summary>
            Triggers while rendering the each popup list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Open">
            <summary>
            Triggers when the popup is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.AllowEdit">
            <summary>
            Specifies a boolean value whether the TimePicker allows user to change the value via typing. When set as false, the TimePicker allows user to change the value via picker only.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the TimePicker. One or more custom CSS classes can be added to a TimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.EnablePersistence">
            <summary>
            Enable or disable persisting TimePicker's state between page reloads. If enabled, the `Value` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.EnableRtl">
            <summary>
            Enable or disable rendering TimePicker in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the TimePicker allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the TimePicker that the placeholder text floats above the TimePicker based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the TimePicker when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the TimePicker.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the TimePicker after focusing it or when enters the value in it.</description>
            </item>
            </list>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Format">
            <summary>
            Specifies the format of the value that to be displayed in TimePicker.
            <para>By default, the format is based on the culture.</para>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.HtmlAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the TimePicker considers the property value.</para>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.KeyConfigs">
            <summary>
            Customizes the key actions in TimePicker.
            For example, when using German keyboard, the key actions can be customized using these shortcuts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Locale">
            <summary>
            Specifies the global culture and localization of the TimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Max">
            <summary>
            Gets or sets the maximum time value that can be allowed to select in TimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Min">
            <summary>
            Gets or sets the minimum time value that can be allowed to select in TimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in TimePicker. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Readonly">
            <summary>
            Specifies a boolean value whether the TimePicker allows the user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.ScrollTo">
            <summary>
            Specifies the scroll bar position, if there is no value is selected in the popup list or
            the given value is not present in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.ShowClearButton">
            <summary>
            Specifies whether to show or hide the clear icon.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Step">
            <summary>
            Specifies the time interval between the two adjacent time values in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.StrictMode">
            <summary>
            Specifies the TimePicker to act as strict. So that, it allows to enter only a valid time value within a specified range or else it will resets to previous value.
            <para> By default, StrictMode is in false. It allows invalid or out-of-range time value with highlighted error class.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Value">
            <summary>
            Gets or sets the value of the TimePicker. The value is parsed based on the culture specific time format.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.Width">
            <summary>
            Specifies the width of the TimePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerModel`1.ZIndex">
            <summary>
            specifies the z-index value of the timePicker popup element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.IDateRangePicker">
            <summary>
            Interface for <see cref="T:Syncfusion.Blazor.Calendars.IDateRangePicker" />.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.IDateRangePicker.UpdateChildProperties(System.Object)">
            <summary>
            Method updates the children properties of the component.
            </summary>
            <param name="presetValue">Specifies the value of preset.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.IDateRangePicker.CallStateHasChangedAsync">
            <summary>
            Task which invokes statehaschanged asynchronous method.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.ITimePicker">
            <summary>
            Defines the <see cref="T:Syncfusion.Blazor.Calendars.ITimePicker" />.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ITimePicker.AllowEdit">
            <summary>
            Gets or sets a value indicating whether editing is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ITimePicker.CssClass">
            <summary>
            Gets or sets the css class.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ITimePicker.EnablePersistence">
            <summary>
            Gets or sets a value indicating whether persistence is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ITimePicker.EnableRtl">
            <summary>
            Gets or sets a value indicating whether rtl mode is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ITimePicker.Enabled">
            <summary>
            Gets or sets a value indicating whether the component is disabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ITimePicker.FloatLabelType">
            <summary>
            Gets or sets the floatLabel type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ITimePicker.Format">
            <summary>
            Gets or sets the format.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ITimePicker.HtmlAttributes">
            <summary>
            Gets or sets the html attributes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ITimePicker.KeyConfigs">
            <summary>
            Gets or sets the key configurations.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ITimePicker.Locale">
            <summary>
            Gets or sets the locale.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ITimePicker.Max">
            <summary>
            Gets or sets the maximum date and time value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ITimePicker.Min">
            <summary>
            Gets or sets the minimum date and time value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ITimePicker.Placeholder">
            <summary>
            Gets or sets the placeholder.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ITimePicker.Readonly">
            <summary>
            Gets or sets a value indicating whether Readonly.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ITimePicker.ScrollTo">
            <summary>
            Gets or sets the ScrollTo property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ITimePicker.ShowClearButton">
            <summary>
            Gets or sets a value indicating whether clear button is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ITimePicker.Step">
            <summary>
            Gets or sets the step.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ITimePicker.StrictMode">
            <summary>
            Gets or sets a value indicating whether strict mode is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ITimePicker.Width">
            <summary>
            Gets or sets the width.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.ITimePicker.ZIndex">
            <summary>
            Gets or sets the Z-index.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.SfTimePicker`1">
            <summary>
            TimePicker is an intuitive component which provides an options to select a time value from popup list or to set a desired time value.
            </summary>
            <summary>
            TimePicker is an intuitive component which provides an options to select a time value from popup list or to set a desired time value.
            </summary>
            <summary>
            TimePicker is an intuitive component which provides an options to select a time value from popup list or to set a desired time value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.TimePickerEditContext">
            <summary>
            Specifies the edit context of timepicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.AllowEdit">
            <summary>
            Specifies a boolean value whether the TimePicker allows user to change the value via typing. When set as false, the TimePicker allows user to change the value via picker only.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the TextBox that the placeholder text floats above the TextBox based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the TextBox when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the TextBox.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the TextBox after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.Placeholder">
            <summary>
            Specifies the boolean value whether the TextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.Readonly">
            <summary>
            Specifies the boolean value whether the TextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.ShowClearButton">
            <summary>
            Specifies a boolean value that indicates whether the clear button is displayed in TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the root element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            If you configured both property and equivalent input attribute, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.Width">
            <summary>
            Specifies the width of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.TabIndex">
            <summary>
            Specifies the tab order of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.Format">
            <summary>
            Sets or gets the required time format of value that is to be displayed in component.
            <para>By default, the format is based on the culture.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.KeyConfigs">
            <summary>
            Customizes the key actions in TimePicker. For example, when using German keyboard, the key actions can be customized using these shortcuts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.Max">
            <summary>
            Gets or sets the maximum time value that can be allowed to select in TimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.Min">
            <summary>
            Gets or sets the minimum time value that can be allowed to select in TimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.ScrollTo">
            <summary>
            Specifies the scroll bar position, if there is no value is selected in the popup list or the given value is not present in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.Step">
            <summary>
            Specifies the time interval between the two adjacent time values in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.StrictMode">
            <summary>
            Specifies the TimePicker to act as strict. So that, it allows to enter only a valid time value within a specified range or else it will resets to previous value.
            <para> By default, StrictMode is in false. It allows invalid or out-of-range time value with highlighted error class.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.ZIndex">
            <summary>
            specifies the z-index value of the TimePicker popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.TimePickerParent">
            <summary>
            Parent component of TimePicker.
            </summary>
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.FocusIn">
            <summary>
            Sets the focus to the TimePicker component for interaction.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.FocusAsync">
            <summary>
            Sets the focus to the TimePicker component for interaction.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.FocusOutAsync">
            <summary>
            Remove the focus from the TimePicker component, if the component is in focus state.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.FocusOut">
            <summary>
            Remove the focus from the TimePicker component, if the component is in focus state.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.GetPersistDataAsync">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.GetPersistData">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.ShowPopupAsync">
            <summary>
            Opens the popup to show the list items.
            <returns>Task.</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.Show(System.EventArgs)">
            <summary>
            Opens the popup to show the list items.
            <param name="args">Specifies the event arguments </param>
            <returns>Task.</returns>
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.HidePopupAsync">
            <summary>
            Hides the TimePicker popup.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.Hide(System.EventArgs)">
            <summary>
            Hides the TimePicker popup.
            </summary>
            <param name="args">Specifies the event arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.ShowPopup(System.EventArgs)">
            <summary>
            Shows the TimePicker popup.
            </summary>
            <param name="args">The <see cref="T:System.EventArgs"/> arguments.</param>
            <returns>System.Threading.Tasks.Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.HidePopup(System.EventArgs)">
            <summary>
            Hides the TimePicker popup.
            </summary>
            <returns>Task.</returns>
            <param name="args">The<see cref="T:System.EventArgs"></see>/>.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.ClosePopup">
            <summary>
            Invoke the before the popup close.
            </summary>
            <returns>System.Threading.Tasks.Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.KeyboardHandler(Syncfusion.Blazor.Calendars.Internal.KeyActions)">
            <summary>
            Invoke the keyboard action handler.
            </summary>
            <returns>System.Threading.Tasks.Task.</returns>
            <param name="args">The <see cref="T:Syncfusion.Blazor.Calendars.Internal.KeyActions"/> arguments.</param>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.strictValue">
            <summary>
            Specifies the valid time value within a specified range or else it will resets to previous value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.SfTimePicker`1.isValideValue">
            <summary>
            Specifies the boolean value whether the input value is valid.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.OnParametersSetAsync">
            <summary>
            Triggers while dynamically changing the properties of the component.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.SfTimePicker`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Triggers after the component get rendered.
            </summary>
            <param name="firstRender">true if the component rendered for the first time.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerClientProps`1.EnableRtl">
            <summary>
            Enable or disable rendering TimePicker in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerClientProps`1.ZIndex">
            <summary>
            specifies the z-index value of the TimePicker popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerClientProps`1.KeyConfigs">
            <summary>
            Customizes the key actions in TimePicker. For example, when using German keyboard, the key actions can be customized using these shortcuts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerClientProps`1.Value">
            <summary>
            Gets or sets the value of the TimePicker. The value is parsed based on the culture specific time format.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerClientProps`1.Width">
            <summary>
            Specifies the width of the TimePicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerClientProps`1.ScrollTo">
            <summary>
            Specifies the scroll bar position, if there is no value is selected in the popup list or the given value is not present in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerClientProps`1.Step">
            <summary>
            Specifies the time interval between the two adjacent time values in the popup list.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Calendars.TimePickerEvents`1">
            <summary>
            Specifies the TimePicker Events of the component.
            </summary>
            <typeparam name="TValue">Specifies the type of TimePickerEvents.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerEvents`1.BaseParent">
            <summary>
            Triggers when the control loses the focus.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerEvents`1.Blur">
            <summary>
            Triggers when the control loses the focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerEvents`1.ValueChange">
            <summary>
            Triggers when the value is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerEvents`1.Selected">
            <summary>
            Triggers after selecting the value from TimePicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerEvents`1.Cleared">
            <summary>
            Triggers when timepicker value is cleared using clear button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerEvents`1.OnClose">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerEvents`1.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerEvents`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerEvents`1.Focus">
            <summary>
            Triggers when the control gets focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerEvents`1.OnItemRender">
            <summary>
            Triggers while rendering the each popup list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.TimePickerEvents`1.OnOpen">
            <summary>
            Triggers when the popup is opened.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Calendars.TimePickerEvents`1.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>System.Threading.Tasks.Task.</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerPreset.ChildContent">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerPreset.End">
            <summary>
            Defines the end date of the preset range
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerPreset.Label">
            <summary>
            Defines the label string of the preset range.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerPreset.Start">
            <summary>
            Defines the start date of the preset range.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Calendars.DateRangePickerPresets.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Adaptors">
            <summary>
            Specifies the data adaptors.
            <list type="bullet">
            <item>
            <term>BlazorAdaptor</term>
            <description>Default. BlazorAdaptor is used to process Enumerable data. It contains methods to process the given collection based on the queries.</description>
            </item>
            <item>
            <term>ODataAdaptor</term>
            <description>
            OData Adaptor provies ability to consume and manipulate data from OData services.
            </description>
            </item>
            <item>
            <term>ODataV4Adaptor</term>
            <description>
            ODatav4 Adaptor provies ability to consume and manipulate data from OData v4 services
            </description>
            </item>
            <item>
            <term>WebApiAdaptor</term>
            <description>
            WebApi Adaptor provies ability to consume and manipulate data from WebApi services.
            This adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor
            </description>
            </item>
            <item>
            <term>UrlAdaptor</term>
            <description>
            URL Adaptor is used when you are required to interact with all kind of remote services to retrieve data.
            </description>
            </item>
            <item>
            <term>RemoteSaveAdaptor</term>
            <description>
            Remote Save Adaptor is used for binding JSON data.
            It interacts with remote services only for CRUD operations.
            </description>
            </item>
            <item>
            <term>CustomAdaptor</term>
            <description>
            CustomAdaptor specifies that own data query and manipulation logic has been provided using custom adaptor component
            extended from DataAdaptor class.
            </description>
            </item>
            <item>
            <term>JsonAdaptor</term>
            <description>
            JsonAdaptor is used to process JSON data at the client side. It contains methods to process the given JSON data based on the queries.
            </description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Adaptors.JsonAdaptor">
            <summary>
            JsonAdaptor is used to process JSON data at the client side. It contains methods to process the given JSON data based on the queries.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Adaptors.BlazorAdaptor">
            <summary>
            BlazorAdaptor is used to process Enumerable data. It contains methods to process the given collection based on the queries.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Adaptors.ODataAdaptor">
            <summary>
            OData Adaptor provies ability to consume and manipulate data from OData services.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Adaptors.ODataV4Adaptor">
            <summary>
            OData v4 Adaptor provies ability to consume and manipulate data from OData v4 services.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Adaptors.UrlAdaptor">
            <summary>
            URL Adaptor is used when you are required to interact with all kind of remote services to retrieve data.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Adaptors.WebApiAdaptor">
            <summary>
            WebApi Adaptor provies ability to consume and manipulate data from WebApi services.
            This adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Adaptors.RemoteSaveAdaptor">
            <summary>
            Remote Save Adaptor is used for binding JSON data.
            It interacts with remote services only for CRUD operations.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Adaptors.CustomAdaptor">
            <summary>
            CustomAdaptor specifies that own data query and manipulation logic has been provided using custom adaptor component
            extended from DataAdaptor class.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Operator">
            <summary>
            Specifies the operator list used for filtering or searching operations.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Operator.None">
            <summary>
            No operator is selected.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Operator.Contains">
            <summary>
            Filter items by contains operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Operator.StartsWith">
            <summary>
            Filter items by starts with operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Operator.EndsWith">
            <summary>
            Filter items by ends with operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Operator.Equal">
            <summary>
            Filter items by equal operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Operator.NotEqual">
            <summary>
            Filter items by not-equal operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Operator.GreaterThan">
            <summary>
            Filter items by greater than operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Operator.GreaterThanOrEqual">
            <summary>
            Filter items by greater than or equal operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Operator.LessThan">
            <summary>
            Filter items by less than operator.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Operator.LessThanOrEqual">
            <summary>
            Filter items by less than or equal operator.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.IAdaptor">
            <summary>
            Provides the members for data adaptor class.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.GetName">
            <summary>
            Returns the adaptor name.
            </summary>
            <returns>string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.SetRunSyncOnce(System.Boolean)">
            <summary>
            Runs the data operation synchronously.
            </summary>
            <param name="runSync">Enables synchronous data operation.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.ProcessQuery(Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Read query from <see cref="T:Syncfusion.Blazor.Data.Query"/> and make it understandable by
            data source.
            </summary>
            <param name="queries">Specifies the query.</param>
            <returns>object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.ProcessResponse``1(System.Object,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Process the data operation response/result from the data source and make it understandable by user end.
            </summary>
            <typeparam name="T">Specifies the data source model type.</typeparam>
            <param name="data">Specifies the data manager instance.</param>
            <param name="queries">Specifies the query.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.ProcessCrudResponse``1(System.Object,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Process the CRUD operation response/result from the data source and make it understandable by user end.
            </summary>
            <typeparam name="T">Specifies the data source model type.</typeparam>
            <param name="data">Specifies the data manager instance.</param>
            <param name="queries">Specifies the query.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.PerformDataOperation``1(System.Object)">
            <summary>
            Performs data operation. If its a remote data source then make a server request.
            </summary>
            <typeparam name="T">Specifies the data source model type.</typeparam>
            <param name="queries">Specifies the query.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.IsRemote">
            <summary>
            Returns true if data source is remote service.
            </summary>
            <returns>bool.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.SetModelType(System.Type)">
            <summary>
            To get model type.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.GetModelType">
            <summary>
            To get model type.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.Insert(Syncfusion.Blazor.DataManager,System.Object,System.String,Syncfusion.Blazor.Data.Query,System.Int32)">
            <summary>
            Handles the new item add operation.
            </summary>
            <param name="dataManager">DataManager instance.</param>
            <param name="data">New item to be added.</param>
            <param name="tableName">Table name to insert new item.</param>
            <param name="query">Query class instance.</param>
            <param name="position">Position to insert the new item.</param>
            <returns>object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.Update(Syncfusion.Blazor.DataManager,System.String,System.Object,System.String,Syncfusion.Blazor.Data.Query,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Handles the item update operation.
            </summary>
            <param name="dataManager">DataManager instance.</param>
            <param name="keyField">Specifies the primary key.</param>
            <param name="data">Specifies the updated record.</param>
            <param name="tableName">Table name of the update item.</param>
            <param name="query">Query instance.</param>
            <param name="original">Specifies the original data. Uses this original data for sending changed items alone to the server.</param>
            <param name="updateProperties">Specifies the field names to be updated.</param>
            <returns>object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.Remove(Syncfusion.Blazor.DataManager,System.String,System.Object,System.String,Syncfusion.Blazor.Data.Query)">
            <summary>
            Handles the remove operation.
            </summary>
            <param name="dataManager">DataManager instance.</param>
            <param name="keyField">Specifies the primary key.</param>
            <param name="value">Specifies the primary key field value.</param>
            <param name="tableName">Table name of the update item.</param>
            <param name="query">Query instance.</param>
            <returns>object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.BatchUpdate(Syncfusion.Blazor.DataManager,System.Object,System.Object,System.Object,Syncfusion.Blazor.Data.Utils,System.String,System.Nullable{System.Int32},Syncfusion.Blazor.Data.Query,System.Object)">
            <summary>
            Handles the batch update operation. Enables user to perform add, update and remove items from data source in a single request.
            </summary>
            <param name="dataManager">DataManager instance.</param>
            <param name="changed">Specifies the changed records.</param>
            <param name="added">Specifies the added records.</param>
            <param name="deleted">Specifies the deleted records.</param>
            <param name="e">Specifies the url and its key.</param>
            <param name="keyField">Specifies the primary key field.</param>
            <param name="dropIndex">Specifies the record position, from which new records will be added.</param>
            <param name="query">Query class instance.</param>
            <param name="original">Specifies the original data. Uses this original data for sending change items alone to the server.</param>
            <returns>object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.Insert(Syncfusion.Blazor.DataManager,System.Dynamic.IDynamicMetaObjectProvider,System.String,Syncfusion.Blazor.Data.Query,System.Int32)">
            <summary>
            Handles the new item add operation in dynamic objects.
            </summary>
            <param name="dataManager">DataManager instance.</param>
            <param name="data">New item to be added.</param>
            <param name="tableName">Table name to insert new item.</param>
            <param name="query">Query class instance.</param>
            <param name="position">Position to insert the new item.</param>
            <returns>object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.Update(Syncfusion.Blazor.DataManager,System.String,System.Dynamic.IDynamicMetaObjectProvider,System.String,Syncfusion.Blazor.Data.Query,System.Object)">
            <summary>
            Handles the item update operation.
            </summary>
            <param name="dataManager">DataManager instance.</param>
            <param name="keyField">Specifies the primary key.</param>
            <param name="data">Specifies the updated record.</param>
            <param name="tableName">Table name of the update item.</param>
            <param name="query">Query instance.</param>
            <param name="original">Specifies the original data. Uses this original data for sending change items alone to the server.</param>
            <returns>object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.BatchUpdate(Syncfusion.Blazor.DataManager,System.Collections.Generic.List{System.Dynamic.IDynamicMetaObjectProvider},System.Collections.Generic.List{System.Dynamic.IDynamicMetaObjectProvider},System.Collections.Generic.List{System.Dynamic.IDynamicMetaObjectProvider},Syncfusion.Blazor.Data.Utils,System.String,System.Nullable{System.Int32},Syncfusion.Blazor.Data.Query,System.Object)">
            <summary>
            Handles the batch update operation for Dynamic objects. Enables user to perform add, update and remove items from data source in a single request.
            </summary>
            <param name="dataManager">DataManager instance.</param>
            <param name="changed">Specifies the changed records.</param>
            <param name="added">Specifies the added records.</param>
            <param name="deleted">Specifies the deleted records.</param>
            <param name="e">Specifies the url and its key.</param>
            <param name="keyField">Specifies the primary key field.</param>
            <param name="dropIndex">Specifies the record position, from which new records will be added.</param>
            <param name="query">Query class instance.</param>
            <param name="original">Specifies the original data. Uses this original data for sending change items alone to the server.</param>
            <returns>object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.AddParams(Syncfusion.Blazor.Data.RequestOptions,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Adds additional paramerters from Query instance to server request.
            </summary>
            <param name="options"></param>
            <param name="queries"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.BeforeSend(System.Net.Http.HttpRequestMessage)">
            <summary>
            Invoked before sending server request.
            </summary>
            <param name="request">Specifies the HttpRequestMessage instance.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IAdaptor.ProcessBatchResponse``1(System.Object,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Process the data operation batch response/result from the data source and make it understandable by user end.
            </summary>
            <typeparam name="T">Specifies the data source model type.</typeparam>
            <param name="data">Specifies the data.</param>
            <param name="queries">Specifies the query.</param>
            <returns>Task.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Data.AdaptorBase">
            <summary>
            Base class for all data adaptors.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.AdaptorBase.DataManager">
            <summary>
            Specifies the data manager instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.AdaptorBase.RunSyncOnce">
            <summary>
            When true, runs data operation synchronously. Applicable only for BlazorAdaptor.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.SetRunSyncOnce(System.Boolean)">
            <summary>
            Runs the data operation synchronously.
            </summary>
            <param name="runSync">Enables synchronous data operation.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.GetName">
            <summary>
            Returns the adaptor name.
            </summary>
            <returns>string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.IsRemote">
            <summary>
            Returns true if data source is remote service.
            </summary>
            <returns>bool.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.SetModelType(System.Type)">
            <summary>
            To get model type.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.GetModelType">
            <summary>
            To get model type.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.ProcessQuery(Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Read query from <see cref="T:Syncfusion.Blazor.Data.Query"/> and make it understandable by
            data source.
            </summary>
            <param name="queries">Specifies the query.</param>
            <returns>object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.PerformDataOperation``1(System.Object)">
            <summary>
            Performs data operation. If its a remote data source then make a server request.
            </summary>
            <typeparam name="T">Specifies the data source model type.</typeparam>
            <param name="queries">Specifies the query.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.ProcessResponse``1(System.Object,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Process the data operation response/result from the data source and make it understandable by user end.
            </summary>
            <typeparam name="T">Specifies the data source model type.</typeparam>
            <param name="data">Specifies the data manager instance.</param>
            <param name="queries">Specifies the query.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.ProcessCrudResponse``1(System.Object,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Process the CRUD operation response/result from the data source and make it understandable by user end.
            </summary>
            <typeparam name="T">Specifies the data source model type.</typeparam>
            <param name="data">Specifies the data manager instance.</param>
            <param name="queries">Specifies the query.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.Insert(Syncfusion.Blazor.DataManager,System.Object,System.String,Syncfusion.Blazor.Data.Query,System.Int32)">
            <summary>
            Handles the new item add operation.
            </summary>
            <param name="dataManager">DataManager instance.</param>
            <param name="data">New item to be added.</param>
            <param name="tableName">Table name to insert new item.</param>
            <param name="query">Query class instance.</param>
            <param name="position">Position to insert the new item.</param>
            <returns>object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.Update(Syncfusion.Blazor.DataManager,System.String,System.Object,System.String,Syncfusion.Blazor.Data.Query,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Handles the item update operation.
            </summary>
            <param name="dataManager">DataManager instance.</param>
            <param name="keyField">Specifies the primary key.</param>
            <param name="data">Specifies the updated record.</param>
            <param name="tableName">Table name of the update item.</param>
            <param name="query">Query instance.</param>
            <param name="original">Specifies the original data. Uses this original data for sending change items alone to the server.</param>
            <param name="updateProperties">Specifies the field names to be updated.</param>
            <returns>object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.Remove(Syncfusion.Blazor.DataManager,System.String,System.Object,System.String,Syncfusion.Blazor.Data.Query)">
            <summary>
            Handles the remove operation.
            </summary>
            <param name="dataManager">DataManager instance.</param>
            <param name="keyField">Specifies the primary key.</param>
            <param name="value">Specifies the primary key field value.</param>
            <param name="tableName">Table name of the update item.</param>
            <param name="query">Query instance.</param>
            <returns>object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.BatchUpdate(Syncfusion.Blazor.DataManager,System.Object,System.Object,System.Object,Syncfusion.Blazor.Data.Utils,System.String,System.Nullable{System.Int32},Syncfusion.Blazor.Data.Query,System.Object)">
            <summary>
            Handles the batch update operation. Enables user to perform add, update and remove items from data source in a single request.
            </summary>
            <param name="dataManager">DataManager instance.</param>
            <param name="changed">Specifies the changed records.</param>
            <param name="added">Specifies the added records.</param>
            <param name="deleted">Specifies the deleted records.</param>
            <param name="e">Specifies the url and its key.</param>
            <param name="keyField">Specifies the primary key field.</param>
            <param name="dropIndex">Specifies the record position, from which new records will be added.</param>
            <param name="query">Query class instance.</param>
            <param name="original">Specifies the original data. Uses this original data for sending change items alone to the server.</param>
            <returns>object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.Insert(Syncfusion.Blazor.DataManager,System.Dynamic.IDynamicMetaObjectProvider,System.String,Syncfusion.Blazor.Data.Query,System.Int32)">
            <summary>
            Handles the new item add operation in dynamic objects.
            </summary>
            <param name="dataManager">DataManager instance.</param>
            <param name="data">New item to be added.</param>
            <param name="tableName">Table name to insert new item.</param>
            <param name="query">Query class instance.</param>
            <param name="position">Position to insert the new item.</param>
            <returns>object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.Update(Syncfusion.Blazor.DataManager,System.String,System.Dynamic.IDynamicMetaObjectProvider,System.String,Syncfusion.Blazor.Data.Query,System.Object)">
            <summary>
            Handles the item update operation.
            </summary>
            <param name="dataManager">DataManager instance.</param>
            <param name="keyField">Specifies the primary key.</param>
            <param name="data">Specifies the updated record.</param>
            <param name="tableName">Table name of the update item.</param>
            <param name="query">Query instance.</param>
            <param name="original">Specifies the original data. Uses this original data for sending change items alone to the server.</param>
            <returns>object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.BatchUpdate(Syncfusion.Blazor.DataManager,System.Collections.Generic.List{System.Dynamic.IDynamicMetaObjectProvider},System.Collections.Generic.List{System.Dynamic.IDynamicMetaObjectProvider},System.Collections.Generic.List{System.Dynamic.IDynamicMetaObjectProvider},Syncfusion.Blazor.Data.Utils,System.String,System.Nullable{System.Int32},Syncfusion.Blazor.Data.Query,System.Object)">
            <summary>
            Handles the batch update operation for Dynamic objects. Enables user to perform add, update and remove items from data source in a single request.
            </summary>
            <param name="dataManager">DataManager instance.</param>
            <param name="changed">Specifies the changed records.</param>
            <param name="added">Specifies the added records.</param>
            <param name="deleted">Specifies the deleted records.</param>
            <param name="e">Specifies the url and its key.</param>
            <param name="keyField">Specifies the primary key field.</param>
            <param name="dropIndex">Specifies the record position, from which new records will be added.</param>
            <param name="query">Query class instance.</param>
            <param name="original">Specifies the original data. Uses this original data for sending change items alone to the server.</param>
            <returns>object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.AddParams(Syncfusion.Blazor.Data.RequestOptions,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Adds additional paramerters from Query instance to server request.
            </summary>
            <param name="options"></param>
            <param name="queries"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.BeforeSend(System.Net.Http.HttpRequestMessage)">
            <summary>
            Invoked before sending server request.
            </summary>
            <param name="request">Specifies the HttpRequestMessage instance.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.AdaptorBase.ProcessBatchResponse``1(System.Object,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Process the data operation batch response/result from the data source and make it understandable by user end.
            </summary>
            <typeparam name="T">Specifies the data source model type.</typeparam>
            <param name="data">Specifies the data.</param>
            <param name="queries">Specifies the query.</param>
            <returns>Task.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Data.RemoteOptions">
            <summary>
            Defines internal adaptor options.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.From">
            <summary>
            Gets or sets the table name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.RequestType">
            <summary>
            Gets or sets the request type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.SortBy">
            <summary>
            Gets or sets the sort field name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.Select">
            <summary>
            Gets or sets the select field name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.Skip">
            <summary>
            Gets or sets the records to skip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.Group">
            <summary>
            Gets or sets the group criteria.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.Take">
            <summary>
            Gets or sets the records to take.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.Search">
            <summary>
            Gets or sets the search string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.Count">
            <summary>
            Gets or sets the count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.Where">
            <summary>
            Gets or sets the filter criteria.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.Aggregates">
            <summary>
            Gets or sets the aggregate details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.Expand">
            <summary>
            Gets or sets the navigation table.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.Accept">
            <summary>
            Gets or sets the accept type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.MultipartAccept">
            <summary>
            Gets or sets the multipart type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.Batch">
            <summary>
            Gets or sets the batch value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.ChangeSet">
            <summary>
            Gets or sets the change set.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.BatchPre">
            <summary>
            Gets or sets the batch prefix.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.ContentId">
            <summary>
            Gets or sets the content id.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.BatchContent">
            <summary>
            Gets or sets the batch content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.ChangeSetContent">
            <summary>
            Gets or sets the change set.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.BatchChangeSetContentType">
            <summary>
            Gets or sets the batch change set.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.UpdateType">
            <summary>
            Gets or sets the http update type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.LocalTime">
            <summary>
            Enables local time conversion.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.Apply">
            <summary>
            Gets or sets the odatav4 $apply value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RemoteOptions.EnableODataSearchFallback">
            <summary>
            Enable odatav4 search by $filter.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.RemoteOptions.Equals(System.Object)">
            <summary>
            Compares the specified instance and the current instance of RemoteOptions
                for value equality.
            </summary>
            <param name="obj">The instance to compare.</param>
            <returns>true.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.RemoteOptions.Equals(Syncfusion.Blazor.Data.RemoteOptions)">
            <summary>
            Compares the specified instance and the current instance of RemoteOptions
                for value equality.
            </summary>
            <param name="other">The instance to compare.</param>
            <returns>true.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.RemoteOptions.GetHashCode">
            <summary>
            Returns the hash code.
            </summary>
            <returns>int.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.RemoteOptions.op_Equality(Syncfusion.Blazor.Data.RemoteOptions,Syncfusion.Blazor.Data.RemoteOptions)">
            <summary>
            Handles equal
            </summary>
            <param name="point1">argument one</param>
            <param name="point2">argument two</param>
            <returns>bool</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.RemoteOptions.op_Inequality(Syncfusion.Blazor.Data.RemoteOptions,Syncfusion.Blazor.Data.RemoteOptions)">
            <summary>
            Handles unequal
            </summary>
            <param name="point1">argument one</param>
            <param name="point2">argument two</param>
            <returns>bool</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Data.CRUDModel`1">
            <summary>
            Defines the members of the CRUD arguments send during server request. Use this class to model
            bind request parameters while using UrlAdaptor.
            </summary>
            <typeparam name="T">Type of the data.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Data.CRUDModel`1.Action">
            <summary>
            Specifies the action initiated the request. Possible values are add, update or remove.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.CRUDModel`1.Table">
            <summary>
            Specifies the Table name(if any) to be updated.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.CRUDModel`1.KeyColumn">
            <summary>
            Specifies the primary key column name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.CRUDModel`1.Key">
            <summary>
            Specifies the Primary key value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.CRUDModel`1.Value">
            <summary>
            Specifies the modified/added record. For batch operation use Added, Changed and Deleted property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.CRUDModel`1.Added">
            <summary>
            Specifies the list of added records while batch editing.
            </summary>
            <remarks>The Added property will holds values on batch editing only.</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Data.CRUDModel`1.Changed">
            <summary>
            Specifies the list of updated records while batch editing.
            </summary>
            <remarks>The Changed property will holds values on batch editing only.</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Data.CRUDModel`1.Deleted">
            <summary>
            Specifies the list of deleted records while batch editing.
            </summary>
            <remarks>The Deleted property will holds values on batch editing only.</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Data.CRUDModel`1.Params">
            <summary>
            Holds the additional parameters passed.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.Utils">
            <summary>
            Class holds URL and Key for batch operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Utils.Url">
            <summary>
            Specifies the batch url.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Utils.Key">
            <summary>
            Specifies the batch primary key value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.RequestOptions">
            <summary>
            Defines members of the request option for remote data handling.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RequestOptions.Url">
            <summary>
            Specifies the service url.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RequestOptions.BaseUrl">
            <summary>
            Specifies the application base url.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RequestOptions.RequestMethod">
            <summary>
            Specifies the Http request method.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RequestOptions.Data">
            <summary>
            Specifies the data to be posted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RequestOptions.Queries">
            <summary>
            Specifies the source query value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.RequestOptions.ContentType">
            <summary>
            Specifies the content type. By default, application/json is used.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.ApiAdaptor">
            <summary>
            Handles request and response to and from Web API created for ApiController.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.BlazorAdaptor">
            <summary>
            Handles data operation in IEnumerable data source.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.BlazorAdaptor.DataOperationInvoke``1(System.Collections.IEnumerable,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Performs data operation.
            </summary>
            <typeparam name="T">Type of the data source item.</typeparam>
            <param name="DataSource">Data source value.</param>
            <param name="queries">Query to be processed.</param>
            <returns>DataResult.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.BlazorAdaptor.CollectChildRecords(System.Collections.IEnumerable,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Performs data operation on child records.
            </summary>
            <param name="datasource">Data source value.</param>
            <param name="dm">Query to be processed.</param>
            <returns>IEnumerable.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Data.ODataAdaptor">
            <summary>
            Handles request and response to and from OData service.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ODataAdaptor.OnPredicate(Syncfusion.Blazor.Data.WhereFilter,Syncfusion.Blazor.DataManagerRequest,System.Boolean)">
            <summary>
            Generates request filter query string from the Query value.
            </summary>
            <param name="filter">Filter criteria.</param>
            <param name="query">Query value.</param>
            <param name="requiresCast">Performs value cast. Applicable on search operation.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ODataAdaptor.OnEachSort(Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Returns sort query string based on query.
            </summary>
            <param name="queries">Query value.</param>
            <returns>string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ODataAdaptor.OnEachSearch(Syncfusion.Blazor.Data.SearchFilter)">
            <summary>
            Returns search query string based on query.
            </summary>
            <param name="e">Search query.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ODataAdaptor.OnSearch(System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter})">
            <summary>
            Returns search query string based on query.
            </summary>
            <param name="e">List of filter queries.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ODataAdaptor.OnSearch(System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter},System.Object)">
            <summary>
            Returns search query string based on query.
            </summary>
            <param name="e">List of filter queries.</param>
            <param name="additionParams">Additional parameters.</param>
            <returns>string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ODataAdaptor.OnCount(System.Boolean)">
            <summary>
            Returns count query string based on query.
            </summary>
            <param name="e">Request count value if it is true.</param>
            <returns>string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ODataAdaptor.OnExpand(System.Collections.Generic.List{System.String})">
            <summary>
            Returns expand query string based on query.
            </summary>
            <param name="expands">List of relational table names.</param>
            <returns>string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ODataAdaptor.OnExpand(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Returns expand query string based on query.
            </summary>
            <param name="selects">List of fields to select in relational tables.</param>
            <param name="expands">List of relational table names.</param>
            <returns>string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ODataAdaptor.OnSelect(System.Collections.Generic.List{System.String})">
            <summary>
            Returns select query string based on query.
            </summary>
            <param name="selects">List of field names to select.</param>
            <returns>string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ODataAdaptor.OnDistinct(System.Collections.Generic.List{System.String})">
            <summary>
            Returns distinct query string based on query.
            </summary>
            <param name="distincts">List of field names.</param>
            <returns>string.</returns>
            <remarks>Applicable only for ODataV4 services.</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ODataAdaptor.CheckDate(System.String)">
            <summary>
            Check if given value is a valid date or not.
            </summary>
            <param name="date">Input date string.</param>
            <returns>bool.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Data.PvtOptions">
            <summary>
            Hold private options.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.OData`1">
            <summary>
            Schema for OData service response.
            </summary>
            <typeparam name="T">Type of the model.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Data.ODataNoCount`1">
            <summary>
            Schema for OData service response with no count.
            </summary>
            <typeparam name="T">Type of the model.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Data.RemoteArgs">
            <summary>
            Remote arguments.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.CrudResponse`1">
            <summary>
            Schema for CRUD OData service response.
            </summary>
            <typeparam name="T">Type of the model.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Data.ODataV4Adaptor">
            <summary>
            Handles request and response to and from ODataV4 service.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.ODataV4`1">
            <summary>
            Schema for ODataV4 service response.
            </summary>
            <typeparam name="T">Type of the model.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Data.UrlAdaptor">
            <summary>
            Handles request and response to and from any remote service.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.UrlResult`1">
            <summary>
            Schema for URL service response.
            </summary>
            <typeparam name="T">Type of the model.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Data.WebApiAdaptor">
            <summary>
            Handles request and response to and from Web API controller.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.Sort">
            <summary>
            Defines the sort descriptor.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Sort.Name">
            <summary>
            Gets the field name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Sort.Direction">
            <summary>
            Gets the sort direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Sort.Comparer">
            <summary>
            Gets the sort comparer
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.SearchFilter">
            <summary>
            Defines members for creating search criteria.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.SearchFilter.Fields">
            <summary>
            Collection of fields to search.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.SearchFilter.Key">
            <summary>
            Specifies the search key.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.SearchFilter.Operator">
            <summary>
            Specifies the search operator. By default, contains operator will be used.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.SearchFilter.IgnoreCase">
            <summary>
            Specifies that incasesensitive search to be done.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.Aggregate">
            <summary>
            Defines the members of the aggregate.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Aggregate.Field">
            <summary>
            Specifies the field name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Aggregate.Type">
            <summary>
            Specifies the aggregate type.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.WhereFilter">
            <summary>
            Defines the members to build filter criteria.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.WhereFilter.Field">
            <summary>
            Specifies the field name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.WhereFilter.IgnoreCase">
            <summary>
            Specifies that filter should be incasesensitive.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.WhereFilter.IgnoreAccent">
            <summary>
            Specifies that ignore accent/diacritic letters while searching.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.WhereFilter.IsComplex">
            <summary>
            When true it specifies that the filter criteria is a complex one.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.WhereFilter.Operator">
            <summary>
            Gets the filter operator.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.WhereFilter.Condition">
            <summary>
            Provides the complex filter merge condition.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.WhereFilter.value">
            <summary>
            Specifies the filter value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.WhereFilter.predicates">
            <summary>
            Specifies the collection filter criteria.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.WhereFilter.And(System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter})">
            <summary>
            Merge the give collection of predicates using And condition.
            </summary>
            <param name="predicates">List of predicates.</param>
            <returns>WhereFilter.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.WhereFilter.Or(System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter})">
            <summary>
            Merge the give collection of predicates using Or condition.
            </summary>
            <param name="predicates">List of predicates.</param>
            <returns>WhereFilter.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.WhereFilter.And(System.String,System.String,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Merge the give predicate using And condition.
            </summary>
            <param name="fieldName">Specifies the field name.</param>
            <param name="operator">Specifies the filter operator.</param>
            <param name="value">Specifies the filter value.</param>
            <param name="ignoreCase">Performs incasesensitive filtering.</param>
            <param name="ignoreAccent">Ignores accent/diacritic letters while filtering.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.WhereFilter.And(Syncfusion.Blazor.Data.WhereFilter)">
            <summary>
            Merge the give predicate using And condition.
            </summary>
            <param name="predicate">Predicate to be merged.</param>
            <returns>WhereFilter.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.WhereFilter.Or(System.String,System.String,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Merge the give predicate using Or condition.
            </summary>
            <param name="fieldName">Specifies the field name.</param>
            <param name="operator">Specifies the filter operator.</param>
            <param name="value">Specifies the filter value.</param>
            <param name="ignoreCase">Performs incasesensitive filtering.</param>
            <param name="ignoreAccent">Ignores accent/diacritic letters while filtering.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.WhereFilter.Or(Syncfusion.Blazor.Data.WhereFilter)">
            <summary>
            Merge the give predicate using Or condition.
            </summary>
            <param name="predicate">Predicate to be merged.</param>
            <returns>WhereFilter.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Data.DefaultAdaptor">
            <summary>
            Provide adaptor information which sends to client side.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.DataResult">
            <summary>
            Defines the members of the data manager operation result.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.DataResult`1">
            <summary>
            Defines the members of the data manager operation result.
            </summary>
            <typeparam name="T">Type of the data source element.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Data.DataResult`1.Result">
            <summary>
            Gets the result of the data operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.DataResult`1.Count">
            <summary>
            Gets the total count of the records in data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.DataResult`1.Aggregates">
            <summary>
            Gets the aggregate result based on the aggregate query.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.DataResult`1.FilteredRecords">
            <summary>
            Gets the filtered records.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.BaseAdaptor">
            <summary>
            Handles custom adaptor logic.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.Group`1">
            <summary>
            Defines the members of the grouped record.
            </summary>
            <typeparam name="T">Type of the data source elements.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.GroupGuid">
            <summary>
            Unique identifier.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.Level">
            <summary>
            Specifies the level of this group.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.ChildLevels">
            <summary>
            Specifies the count of child if any.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.Records">
            <summary>
            Specifies the ungrouped records.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.Key">
            <summary>
            Specifies the group key value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.CountItems">
            <summary>
            Specifies the count of items in this group.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.Items">
            <summary>
            Specifies the items of the group.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.Aggregates">
            <summary>
            Specifies the aggregates of this group.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.Field">
            <summary>
            Specifies the field value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.HeaderText">
            <summary>
            Specifies the header text of the field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.ForeignKey">
            <summary>
            Specifies the foreign key.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.Result">
            <summary>
            Specifies the result.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Group`1.GroupedData">
            <summary>
            Specifies the grouped data.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.IDataAdaptor">
            <summary>
            Interface for Data adaptors.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IDataAdaptor.Read(Syncfusion.Blazor.DataManagerRequest,System.String)">
            <summary>
            Performs data Read operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IDataAdaptor.ReadAsync(Syncfusion.Blazor.DataManagerRequest,System.String)">
            <summary>
            Performs data Read operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IDataAdaptor.Insert(Syncfusion.Blazor.DataManager,System.Object,System.String)">
            <summary>
            Performs Insert operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IDataAdaptor.InsertAsync(Syncfusion.Blazor.DataManager,System.Object,System.String)">
            <summary>
            Performs Insert operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IDataAdaptor.Remove(Syncfusion.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Remove operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IDataAdaptor.RemoveAsync(Syncfusion.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Remove operation asynchronously..
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IDataAdaptor.Update(Syncfusion.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Update operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IDataAdaptor.UpdateAsync(Syncfusion.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Update operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IDataAdaptor.BatchUpdate(Syncfusion.Blazor.DataManager,System.Object,System.Object,System.Object,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Performs Batch CRUD operations synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.IDataAdaptor.BatchUpdateAsync(Syncfusion.Blazor.DataManager,System.Object,System.Object,System.Object,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Performs Batch CRUD operations asynchronously.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.DataManagerTypeConverter">
            <summary>
            Handles the datamanager converter.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.DataUtil">
            <summary>
            Provides utility method used by data manager.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.GetUrl(System.String,System.String,System.String)">
            <summary>
            Resolves the given base url and relative url to generate absolute url. And merge query string if any.
            </summary>
            <param name="baseUrl">Base address url.</param>
            <param name="relativeUrl">Relative url.</param>
            <param name="queryParams">Query string.</param>
            <returns>string - absolute url.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.GetKeyValue(System.String,System.Object)">
            <summary>
            Gets the property value with the given key.
            </summary>
            <param name="key">Property name.</param>
            <param name="value">Source object.</param>
            <returns>string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.ToQueryParams(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Converts dictionary of key/value pair to query string.
            </summary>
            <param name="Params">Input dictionary value.</param>
            <returns>string - Query string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.GetDistinct``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Converts dictionary of key/value pair to query string.
            </summary>
            <param name="dataSource">Collection of Data source.</param>
            <param name="propertyName">property name which is need to distincts </param>.
            <returns>IEnumerable Distinct collections</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.GetValue(System.Int32,System.Object)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.Group``1(System.Collections.IEnumerable,System.String,System.Collections.Generic.List{Syncfusion.Blazor.Data.Aggregate},System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean,System.Boolean)">
            <summary>
            Groups the given data source with the field name.
            </summary>
            <typeparam name="T">Type of the data source elements.</typeparam>
            <param name="jsonArray">Input data source.</param>
            <param name="field">Specifies the group by field name.</param>
            <param name="aggregates">Aggregate details to aggregate grouped records.</param>
            <param name="level">Level of the group. For parent group it is 0.</param>
            <param name="format">Specifies the format and handler method to perform group by format.</param>
            <param name="isLazyLoad">Specifies the isLazyLoad property as true to handle lazy load grouping.</param>
            <param name="isLazyGroupExpandAll">Specifies the isLazyGroupExpandAll as true to perform expand all for lazy load grouping.</param>
            <returns>IEnumerable - Grouped record.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.PerformAggregation(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.Aggregate})">
            <summary>
            Performs aggregation on the given data source.
            </summary>
            <param name="jsonData">Input data source.</param>
            <param name="aggregates">List of aggregate to be calculated.</param>
            <returns>Dictionary of aggregate results.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.GetVal(System.Collections.IEnumerable,System.Int32,System.String)">
            <summary>
            Gets the property value from list of object.
            </summary>
            <param name="jsonData">List of object.</param>
            <param name="index">Index of the item to be processed.</param>
            <param name="field">Property name to get value.</param>
            <returns>object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.GetGroupValue(System.String,System.Object)">
            <summary>
            Gets the property value from object.
            </summary>
            <param name="nameSpace">Property name to be accessed.</param>
            <param name="from">Source object.</param>
            <returns>object - property value.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.GetObject(System.String,System.Object)">
            <summary>
            Gets the property value from object.
            </summary>
            <param name="nameSpace">Property name to be accessed.</param>
            <param name="from">Source object.</param>
            <returns>object - property value.</returns>
            <remarks>For accessing complex/nested property value, given the nameSpace with field names delimited by dot(.).</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.GetEnumType(System.String,System.Type)">
            <summary>
            Returns enum column type.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.GetFormattedValue(System.Object,System.String)">
            <summary>
            Formats the given value.
            </summary>
            <param name="value">Value to be formatted.</param>
            <param name="format">Format string.</param>
            <returns>string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.GetDynamicValue(System.Dynamic.DynamicObject,System.String)">
            <summary>
            Gets the property value from the DynamicObject.
            </summary>
            <param name="obj">Input dynamic object.</param>
            <param name="name">Property name to get.</param>
            <returns>object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DataUtil.GetExpandoValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Gets the property value from the ExpandoObject.
            </summary>
            <param name="obj">Input Expando object.</param>
            <param name="name">Property name to get.</param>
            <returns>object.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Data.DataMemberBinder">
            <summary>
            Defines the data member binder for setting dynamic object property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.DynamicQueryableExtensions">
            <summary>
            Provides extension methods for Queryable source.
            <para></para>
            <para></para>
            <para>var fonts = FontFamily.Families.AsQueryable();. </para>
            <para></para>
            <para></para>
            <para>We would normally write Expressions as,. </para>
            <para></para>
            <code lang="C#">var names = new string[] {&quot;Tony&quot;, &quot;Al&quot;,
            &quot;Sean&quot;, &quot;Elia&quot;}.AsQueryable();
            names.OrderBy(n=&gt;n);</code>
            <para></para>
            <para></para>
            <para>This would sort the names based on alphabetical order. Like so, the
            Queryable extensions are a set of extension methods that define functions which
            will generate expressions based on the supplied values to the functions.</para>
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Data.DynamicQueryableExtensions.Predicate(System.Linq.IQueryable,System.Linq.Expressions.ParameterExpression,System.String,System.Object,Syncfusion.Blazor.Data.FilterType,Syncfusion.Blazor.Data.FilterBehavior,System.Boolean,System.Type,System.Type)">
            <summary>
            Predicate is a Binary expression that needs to be built for a single or a series
            of values that needs to be passed on to the WHERE expression.
            <para></para>
            <para></para>
            <code lang="C#">var binaryExp = queryable.Predicate(parameter,
            &quot;EmployeeID&quot;, &quot;4&quot;, true);</code>
            </summary>
            <remarks>
            First create a ParameterExpression using the Parameter extension function, then
            use the same ParameterExpression to generate the predicates.
            </remarks>
            <param name="source">Data source.</param>
            <param name="paramExpression">Parameter expression to merge.</param>
            <param name="propertyName">Property name to be filtered.</param>
            <param name="constValue">Const value.</param>
            <param name="filterType">Filter operator type.</param>
            <param name="filterBehaviour">Specifies the filter behavior.</param>
            <param name="isCaseSensitive">Performs the case sensitive if true.</param>
            <param name="sourceType">Specifies the data source element type.</param>
            <param name="columnType">Specifies the current field type.</param>
        </member>
        <member name="T:Syncfusion.Blazor.Data.EnumerableExtensions">
            <summary>
            Provides enumerable extension.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.EnumerableOperation">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.EnumerableOperation.Execute(System.Collections.IEnumerable,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Executes the query against the given data source and returns the resultant records.
            </summary>
            <param name="dataSource">Input data source against which the query to be executed.</param>
            <param name="manager">Query to be executed.</param>
            <returns>IEnumerable - resultant records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.EnumerableOperation.PerformGrouping(System.Collections.IEnumerable,System.Collections.Generic.List{System.String})">
            <summary>
            Groups data source by the given list of column names.
            </summary>
            <param name="dataSource">Input data source to be grouped.</param>
            <param name="grouped">List of column names by which rows will be grouped.</param>
            <returns>IEnumerable.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.EnumerableOperation.PerformSorting(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.SortedColumn})">
            <summary>
            Sorts the data source using the given sort descriptor and returns the sorted records.
            </summary>
            <param name="dataSource">Data source to be sorted.</param>
            <param name="sortedColumns">List of sort criteria.</param>
            <returns>IEnumerable - sorted records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.EnumerableOperation.PerformSorting(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.Sort})">
            <summary>
            Sorts the data source using the given sort descriptor and returns the sorted records.
            </summary>
            <param name="dataSource">Data source to be sorted.</param>
            <param name="sortedColumns">List of sort criteria.</param>
            <returns>IEnumerable - sorted records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.EnumerableOperation.PredicateBuilder(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter},System.String,System.Linq.Expressions.ParameterExpression,System.Type)">
            <summary>
            Generates predicate with the given filter criteria.
            </summary>
            <param name="dataSource">Input data source.</param>
            <param name="whereFilter">List of filter criteria.</param>
            <param name="condition">Value can be either AND or OR.</param>
            <param name="paramExpression">Parameter expression.</param>
            <param name="type">Specifies the source type.</param>
            <returns>Expression.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.EnumerableOperation.PerformFiltering(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter},System.String)">
            <summary>
            Apply the given filter criteria against the data source and returns the filtered records.
            </summary>
            <param name="dataSource">Data source to be filtered.</param>
            <param name="whereFilter">List of filter criteria.</param>
            <param name="condition">Filter merge condition. Value can be either AND or OR.</param>
            <returns>IEnumerable - filtered records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.EnumerableOperation.PerformSearching(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.SearchFilter})">
            <summary>
            Apply the given search criteria against the data source and returns the filtered records.
            </summary>
            <param name="dataSource">Data source to be filtered.</param>
            <param name="searchFilter">List of search criteria.</param>
            <returns>IEnumerable - searched records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.EnumerableOperation.GetDataType(System.Collections.IEnumerable,System.Type,System.String)">
            <summary>
            Returns data type.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Data.EnumerableOperation.GetColumnType(System.Collections.IEnumerable,System.String,System.Type)">
            <summary>
            Returns column type.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Data.EnumerableOperation.PerformSkip(System.Collections.IEnumerable,System.Int32)">
            <summary>
            Skip the given number of records from data source and returns the resultant records.
            </summary>
            <param name="dataSource">Input data source.</param>
            <param name="skip">Number of records to be skipped.</param>
            <returns>IEnumerable.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.EnumerableOperation.PerformTake(System.Collections.IEnumerable,System.Int32)">
            <summary>
            Take the given number of records from data source.
            </summary>
            <param name="dataSource">Input data source.</param>
            <param name="take">Number of records to be taken.</param>
            <returns>IEnumerable.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Data.IHttpHandler">
            <summary>
            Interface for http handler used by data manager.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.HttpHandlerBase">
            <summary>
            Bas class for http handler used by data manager.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Data.HttpHandlerBase.GetClient">
            <summary>
            Returns http client.
            </summary>
            <returns>HttpClient</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Data.HttpHandler">
            <summary>
            Handles HttpClient instance creation. Also build and sends HttpMessages request.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.HttpMessageContent">
            <summary>
            Derived HttpMessageContent class to prepare or modify the multipart type requests.
            Reference from the https://github.com/aspnet/AspNetWebStack/blob/master/src/System.Net.Http.Formatting/HttpMessageContent.cs to prepare a HttpContent extension.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.FilterType">
            <summary>
            Specifies the FilterType to be used in LINQ methods.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterType.LessThan">
            <summary>
            Performs LessThan operation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterType.LessThanOrEqual">
            <summary>
            Performs LessThan Or Equal operation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterType.Equals">
            <summary>
            Checks Equals on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterType.NotEquals">
            <summary>
            Checks for Not Equals on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterType.GreaterThanOrEqual">
            <summary>
            Checks for Greater Than or Equal on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterType.GreaterThan">
            <summary>
            Checks for Greater Than on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterType.StartsWith">
            <summary>
            Checks for StartsWith on the string operands.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterType.EndsWith">
            <summary>
            Checks for EndsWith on the string operands.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterType.Contains">
            <summary>
            Checks for Contains on the string operands.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterType.Undefined">
            <summary>
            Returns invalid type
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterType.Between">
            <summary>
            Checks for Between two date on the operands.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.FilterBehavior">
            <summary>
            Specifies the Filter Behaviour for the filter predicates.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterBehavior.StronglyTyped">
            <summary>
            Parses only StronglyTyped values.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.FilterBehavior.StringTyped">
            <summary>
            Parses all values by converting them as string.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.ColumnFilter">
            <summary>
            Specifies the Filter Behaviour for the filter predicates.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.ColumnFilter.Value">
            <summary>
            Parses only StronglyTyped values.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.ColumnFilter.DisplayText">
            <summary>
            Parses all values by converting them as string.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.SortColumn">
            <summary>
            Defines the sort column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.SortColumn.ColumnName">
            <summary>
            Specifies the column name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.SortColumn.SortDirection">
            <summary>
            Specifies the sort direction.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.DynamicClass">
            <summary>
            Defines the dynamic class.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.DynamicProperty">
            <summary>
            Specifies the dynamic property.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.GroupContext">
            <summary>
            Defines the group context class.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.ListSortDirection">
            <summary>
             Specifies the direction of a sort operation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.ListSortDirection.Ascending">
            <summary>
            Sorts in ascending order.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.ListSortDirection.Descending">
            <summary>
            Sorts in descending order.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.SortOrder">
            <summary>
            Sepcifies the sort order.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.SortOrder.None">
            <summary>
            No sort order.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.SortOrder.Ascending">
            <summary>
            Sorts in ascending order.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Data.SortOrder.Descending">
            <summary>
            Sorts in descending order.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.SortedColumn">
            <summary>
            Defines the sort column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.SortedColumn.Field">
            <summary>
            Specifies the field to sort.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.SortedColumn.Direction">
            <summary>
            Specifies the sort order.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.SortedColumn.Comparer">
            <summary>
            Gets the sort comparer
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Data.NullableHelperInternal">
            <summary>
            A framework independent utility class for the new Nullable type in .NET Framework 2.0.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Data.NullableHelperInternal.IsComplexType(System.Reflection.PropertyInfo)">
            <summary>
            Indicates whether the specified PropertyDescriptor has nested properties.
            </summary>
            <param name="pd">The PropertyDescriptor to be checked.</param>
            <returns>True if nested properties are found; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.NullableHelperInternal.IsComplexType(System.Type)">
            <summary>
            Indicates whether the specified Type has nested properties.
            </summary>
            <param name="t">The Type to be checked.</param>
            <returns>True if nested properties are found; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.NullableHelperInternal.ChangeType(System.Object,System.Type)">
            <summary>
            Use this method instead of Convert.ChangeType. Makes Convert.ChangeType work with Nullable types.
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.NullableHelperInternal.ChangeType(System.Object,System.Type,System.IFormatProvider)">
            <summary>
            Use this method instead of Convert.ChangeType. Makes Convert.ChangeType work with Nullable types.
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.NullableHelperInternal.FixDbNUllasNull(System.Object,System.Type)">
            <summary>
            Returns null if value is DBNull and specified type is a Nullable type. Otherwise the value is returned unchanged.
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.NullableHelperInternal.GetUnderlyingType(System.Type)">
            <summary>
            Returns the underlying type of a Nullable type. For .NET 1.0 and 1.1 this method will always return null.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Blazor.Data.NullableHelperInternal.TypeConverterHelper">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.ValueConvert">
            <summary>
            <see cref="T:Syncfusion.Blazor.Data.ValueConvert"/> provides conversion routines for values
            to convert them to another type and routines for formatting values.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
            <overload>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </overload>
            <summary>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="value">The original value.</param>
            <param name="type">The target type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.ChangeType(System.Object,System.Type,System.IFormatProvider,System.Boolean)">
            <summary>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="value">The original value.</param>
            <param name="type">The target type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value.</param>
            <param name="returnDbNUllIfNotValid">Indicates whether exceptions should be avoided or catched and return value should be DBNull if
            it cannot be converted to the target type.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.ChangeType(System.Object,System.Type,System.IFormatProvider,System.String,System.Boolean)">
            <summary>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="value">The original value.</param>
            <param name="type">The target type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value.</param>
            <param name="format">Format string.</param>
            <param name="returnDbNUllIfNotValid">Indicates whether exceptions should be avoided or catched and return value should be DBNull if
            it cannot be converted to the target type.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider)">
            <summary>
            Overloaded. Parses the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider,System.String)">
            <summary>
            Parses the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <param name="format">A format string used in a <see cref="M:System.Object.ToString"/> call. Right now
            format is only interpreted to enable roundtripping for formatted dates.
            </param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider,System.String,System.Boolean)">
            <summary>
            Parse the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <param name="format">A format string used in a <see cref="M:System.Object.ToString"/> call. Right now
            format is only interpreted to enable roundtripping for formatted dates.
            </param>
            <param name="returnDbNUllIfNotValid">Indicates whether DbNull should be returned if value cannot be parsed. Otherwise an exception is thrown.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider,System.String[],System.Boolean)">
            <summary>
            Parse the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <param name="formats">A string array holding permissible formats used in a <see cref="M:System.Object.ToString"/> call. Right now
            formats is only interpreted to enable roundtripping for formatted dates.
            </param>
            <param name="returnDbNUllIfNotValid">Indicates whether DbNull should be returned if value cannot be parsed. Otherwise an exception is thrown.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.FormatValue(System.Object,System.Type,System.String,System.Globalization.CultureInfo,System.Globalization.NumberFormatInfo)">
            <summary>
            Generates display text using the specified format, culture info and number format.
            </summary>
            <param name="value">The value to format.</param>
            <param name="valueType">The value type on which formatting is based. The original value will first be converted to this type.</param>
            <param name="format">The format like in ToString(string format).</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo"/> for formatting the value.</param>
            <param name="nfi">The <see cref="T:System.Globalization.NumberFormatInfo"/> for formatting the value.</param>
            <returns>The string with the formatted text for the value.</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Data.ValueConvert.AllowFormatValueTrimEnd">
            <summary>
            Indicates whether <see cref="M:Syncfusion.Blazor.Data.ValueConvert.FormatValue(System.Object,System.Type,System.String,System.Globalization.CultureInfo,System.Globalization.NumberFormatInfo)"/> should trim whitespace characters from
            the end of the formatted text.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.GetDefaultValue(System.Type)">
            <summary>
            Returns a representative value for any given type.
            </summary>
            <param name="type">The <see cref="T:System.Type"/>.</param>
            <returns>A value with the specified type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.ParseValueWithTypeInformation(System.String,System.Object@)">
            <summary>
            Overloaded. Parses the given string including type information. String can be in format %lt;type&gt; 'value'.
            </summary>
            <param name="valueAsString"></param>
            <param name="retVal"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.ParseValueWithTypeInformation(System.String,System.Object,System.Boolean)">
            <summary>
            Parses the given string including type information. String can be in format %lt;type&gt; 'value'.
            </summary>
            <param name="valueAsString"></param>
            <param name="retVal"></param>
            <param name="allowConvertFromBase64">Indicates whether TypeConverter should be checked whether the type to be
            parsed supports conversion to/from byte array (e.g. an Image).</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.TryConvertFromBase64String(System.Type,System.String,System.Object@)">
            <summary>
            Indicates whether the TypeConverter associated with the type supports conversion to/from a byte array (e.g. an Image).
            If that is the case the string is converted to a byte array from a base64 string.
            </summary>
            <param name="type"></param>
            <param name="valueAsString"></param>
            <param name="retVal"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.FormatValueWithTypeInformation(System.Object)">
            <summary>
            Overloaded. Formats the given value as string including type information. String will be in format %lt;type&gt; 'value'.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.FormatValueWithTypeInformation(System.Object,System.Boolean)">
            <summary>
            Formats the given value as string including type information. String will be in format %lt;type&gt; 'value'.
            </summary>
            <param name="value"></param>
            <param name="allowConvertToBase64">Indicates whether TypeConverter should be checked whether the type to be
            parsed supports conversion to/from byte array (e.g. an Image).</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.GetTypeName(System.Type)">
            <summary>
            Returns the type name. If type is not in mscorlib, the assembly name is appended.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.GetType(System.String)">
            <summary>
            Returns the type from the specified name. If an assembly name is appended the list of currently loaded
            assemblies in the current AppDomain are checked.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.ValueConvert.IsEmpty(System.String)">
            <summary>
            Indicates whether string is null or empty.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Blazor.Data.Query">
            <summary>
            Provides methods to generate query which can be executed against data source using <see cref="T:Syncfusion.Blazor.Data.SfDataManager"/>.
            </summary>
            <remarks>Methods in this class are chainable.</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.Queries">
            <summary>
            Provides various method that allow user to generate query.
            These queries is used by <see cref="T:Syncfusion.Blazor.Data.SfDataManager"/> to process given data source and returns resultant records.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.Key">
            <summary>
            Specifies the primary key value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.FKey">
            <summary>
            Specifies the foreign key value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.FromTable">
            <summary>
            Specifies the table name.
            </summary>
            <remarks>Table name is used by the remote adaptors.</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.Lookups">
            <summary>
            Specifies the lookup table names.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.Expands">
            <summary>
            Specifies the relation table/resource names.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.SortedColumns">
            <summary>
            Gets the sort column details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.GroupedColumns">
            <summary>
            Gets the group column details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.SubQuerySelector">
            <summary>
            Specifies the sub query details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.SubQuery">
            <summary>
            Specifies the sub query.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.IsChild">
            <summary>
            Specifies the presence of child.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.Params">
            <summary>
            Gets the additional parameters to be used.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.IsCountRequired">
            <summary>
            Specifies that count value is required in responses from remote services.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.DataManager">
            <summary>
            Gets the data manager instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.Distincts">
            <summary>
            Gets the list of distinct values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.Query.IdMapping">
            <summary>
            Gets the id mapping value used for child data source process.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.From(System.String)">
            <summary>
            Adds the table or resource name.
            </summary>
            <param name="tableName">Table name.</param>
            <returns>Query.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Page(System.Int32,System.Int32)">
            <summary>
            Sets the current page index and page size.
            </summary>
            <param name="pageIndex">Specifies the current page.</param>
            <param name="pageSize">Specifies the page size.</param>
            <returns>Query.</returns>
            <remarks>Use this method to get chunk of records from the given data source.</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Take(System.Int32)">
            <summary>
            Sets the take index.
            </summary>
            <param name="pageSize">Maximum index of the record.</param>
            <returns>Query.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Skip(System.Int32,System.Int32)">
            <summary>
            Sets the current page index and page size.
            </summary>
            <param name="pageIndex">Specifies the current page.</param>
            <param name="pageSize">Specifies the page size.</param>
            <returns>Query.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Skip(System.Int32)">
            <summary>
            Sets the skip index.
            </summary>
            <param name="skip">Number of records to skip.</param>
            <returns>Query.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Range(System.Int32,System.Int32)">
            <summary>
            Gets the range of records.
            </summary>
            <param name="start">Range start index.</param>
            <param name="end">Range end index.</param>
            <returns>Query.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Select(System.Collections.Generic.List{System.String})">
            <summary>
            Selects the given fields from data source.
            </summary>
            <param name="fieldNames">List of fields to select.</param>
            <returns>Query.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Where(System.String,System.String,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Filters the records with the given query.
            </summary>
            <param name="fieldName">Specifies the field name.</param>
            <param name="operator">Specifies the operator.</param>
            <param name="value">Specifies the filter value.</param>
            <param name="ignoreCase">Performs case sensitive filter.</param>
            <param name="ignoreAccent">Ignore accents/diacritic words during filtering.</param>
            <returns>Query.</returns>
            <remarks>Multiple Where method can be chained to create complex filter criteria.</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Where(Syncfusion.Blazor.Data.WhereFilter)">
            <summary>
            Filters the records with the given query.
            </summary>
            <param name="predicate">Specifies the predicate to be used.</param>
            <returns>Query.</returns>
            <remarks>Multiple Where method can be chained to create complex filter criteria.</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Where(System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter})">
            <summary>
            Filters the records with the given query.
            </summary>
            <param name="predicates">Specifies the list of predicates to be used.</param>
            <returns>Query</returns>
            <remarks>Multiple Where method can be chained to create complex filter criteria.</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Search(System.String,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Boolean)">
            <summary>
            Searches the records with the given query.
            </summary>
            <param name="searchKey">Specifies the search key.</param>
            <param name="fieldNames">Specifies the field names.</param>
            <param name="operator">Specifies the search operator.</param>
            <param name="ignoreCase">Performs case sensitive search.</param>
            <param name="ignoreAccent">Ignore accents/diacritic words during searching.</param>
            <returns></returns>
            <remarks>Multiple Search method can be chained to create complex search criteria.</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.RequiresCount">
            <summary>
            Specifies that count is expected in remote service response.
            </summary>
            <returns>Query.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Sort(System.String,System.String)">
            <summary>
            Sorts the data source.
            </summary>
            <param name="name">Specifies the sort name.</param>
            <param name="direction">Specifies the sort direction.</param>
            <returns>Query.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Sort(System.String,System.String,System.Object)">
            <summary>
            Sorts the data source.
            </summary>
            <param name="name">Specifies the sort name.</param>
            <param name="direction">Specifies the sort direction.</param>
            <param name="comparer">Specifies the comparer object.</param>
            <returns>Query.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Group(System.Collections.Generic.List{System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Groups the data source.
            </summary>
            <param name="fieldNames">Specifies the column names to group.</param>
            <param name="groupFormat">Specifies the group format.</param>
            <returns>Query.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Group(System.String)">
            <summary>
            Groups the data source.
            </summary>
            <param name="fieldName">Specifies the column name.</param>
            <returns>Query.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Group(System.String,System.String)">
            <summary>
            Groups the data source.
            </summary>
            <param name="fieldName">Specifies the column name.</param>
            <param name="columnFormat">Specifies the column format.</param>
            <returns>Query.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Aggregates(System.String,System.String)">
            <summary>
            Performs the aggregate operation in the aggregate type.
            </summary>
            <param name="field">Specifies the field name.</param>
            <param name="type">Specifies the aggregate type.</param>
            <returns>Query.</returns>
            <remarks>Multiple aggregation can be performed by chaining Aggregates method.</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.AddParams(System.String,System.Object)">
            <summary>
            Adds additional parameters to the HTTP request sent by <see cref="T:Syncfusion.Blazor.Data.SfDataManager"/>.
            </summary>
            <param name="key">Key value.</param>
            <param name="value">Additional parameter value.</param>
            <returns>Query.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Distinct(System.Collections.Generic.List{System.String})">
            <summary>
            Gets the distinct records of the given field from the data source.
            </summary>
            <param name="fieldNames">List of field names.</param>
            <returns>Query.</returns>
            <remarks>Applicable only for ODataV4Adaptor.</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Expand(System.Collections.Generic.List{System.String})">
            <summary>
            Sets the relational tables to be eager loaded.
            </summary>
            <param name="fieldNames">List of relational table names.</param>
            <returns>Query.</returns>
            <remarks>Given table names should be eager loaded. Lazy loading is not supported.</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.Clone">
            <summary>
            Performs deep cloning of the given Query.
            </summary>
            <returns>Query.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.Query.IsEqual(Syncfusion.Blazor.Data.Query,Syncfusion.Blazor.Data.Query)">
            <summary>
            Compares given Query instance by value.
            </summary>
            <param name="source">Source Query instance.</param>
            <param name="destination">Destination Query instance.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Blazor.Data.QueryConverter">
            <summary>
            Converts Query class to and from string respectively.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Data.QueryableExtensions">
            <summary>
            Provides extension methods for Queryable source.
            <para></para>
            <para></para>
            <para>var fonts = FontFamily.Families.AsQueryable();. </para>
            <para></para>
            <para></para>
            <para>We would normally write Expressions as,. </para>
            <para></para>
            <code lang="C#">var names = new string[] {&quot;Tony&quot;, &quot;Al&quot;,
            &quot;Sean&quot;, &quot;Elia&quot;}.AsQueryable();
            names.OrderBy(n=&gt;n);</code>
            <para></para>
            <para></para>
            <para>This would sort the names based on alphabetical order. Like so, the
            Queryable extensions are a set of extension methods that define functions which
            will generate expressions based on the supplied values to the functions.</para>
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.AndPredicate(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Generates an AND binary expression for the given Binary expressions.
            <para></para>
            </summary>
            <param name="expr1"></param>
            <param name="expr2"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.OrderBy(System.Linq.IQueryable,System.String,System.Type)">
            <summary>
            Generates a OrderBy query for the Queryable source.
            <para></para>
            <code lang="C#">            DataClasses1DataContext db = new
            DataClasses1DataContext();
                        var orders = db.Orders.Skip(0).Take(10).ToList();
                        var queryable = orders.AsQueryable();
                        var sortedOrders =
            queryable.OrderBy(&quot;ShipCountry&quot;);</code>
            <para></para>
            </summary>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.GetLambdaWithComplexPropertyNullCheck(System.Collections.IEnumerable,System.String,System.Linq.Expressions.ParameterExpression,System.Type)">
            <summary>
            Generates lambda expression for the complex properties.
            </summary>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="paramExpression"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.OrderBy``1(System.Linq.IQueryable,System.Collections.Generic.IComparer{``0},System.Type)">
            <summary>
            Generates an OrderBy query for the IComparer defined.
            <para></para>
            <para> </para>
            <code lang="C#">   public class OrdersComparer :
            IComparer&lt;Order&gt;
                {
                    public int Compare(Order x, Order y)
                    {
                        return string.Compare(x.ShipCountry, y.ShipCountry);
                    }
                }</code>
            <para></para>
            <para><code lang="C#">var sortedOrders =
            db.Orders.Skip(0).Take(5).ToList().OrderBy(o =&gt; o, new
            OrdersComparer());</code></para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="comparer"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.OrderByDescending``1(System.Linq.IQueryable,System.Collections.Generic.IComparer{``0},System.Type)">
            <summary>
            Generates an OrderByDescending query for the IComparer defined.
            <para></para>
            <para> </para>
            <code lang="C#">   public class OrdersComparer :
            IComparer&lt;Order&gt;
                {
                    public int Compare(Order x, Order y)
                    {
                        return string.Compare(x.ShipCountry, y.ShipCountry);
                    }
                }</code>
            <para></para>
            <para><code lang="C#">var sortedOrders =
            db.Orders.Skip(0).Take(5).ToList().OrderByDescending(o =&gt; o, new
            OrdersComparer());</code></para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="comparer"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.OrderByDescending(System.Linq.IQueryable,System.String,System.Type)">
            <summary>
            Generates a OrderByDescending query for the Queryable source.
            <para></para>
            <code lang="C#">            DataClasses1DataContext db = new
            DataClasses1DataContext();
                        var orders = db.Orders.Skip(0).Take(10).ToList();
                        var queryable = orders.AsQueryable();
                        var sortedOrders =
            queryable.OrderByDescending(&quot;ShipCountry&quot;);</code>
            <para></para>
            </summary>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.GetValueExpression(System.Linq.Expressions.ParameterExpression,System.String,System.Type)">
            <summary>
            Generate expression from simple and complex property.
            </summary>
            <param name="propertyName"></param>
            <param name="sourceType"></param>
            <param name="paramExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.OrPredicate(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Generates an OR binary expression for the given Binary expressions.
            <para></para>
            </summary>
            <param name="expr1"></param>
            <param name="expr2"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.Parameter(System.Linq.IQueryable)">
            <summary>
            Creates a ParameterExpression that is required when building a series of
            predicates for the WHERE filter.
            <para></para>
            <code lang="C#">        DataClasses1DataContext db = new
            DataClasses1DataContext();
                    var orders = db.Orders.Skip(0).Take(100).ToList();
                    var queryable = orders.AsQueryable();
                    var parameter =
            queryable.Parameter();</code>
            <para></para>
            <para></para>Use this same parameter passed to generate different predicates and
            finally to generate the Lambda.
            </summary>
            <remarks>
            If we specify a parameter for every predicate, then the Lambda expression scope
            will be out of the WHERE query that gets generated.
            </remarks>
            <param name="source"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.Predicate(System.Linq.IQueryable,System.Linq.Expressions.ParameterExpression,System.String,System.Object,Syncfusion.Blazor.Data.FilterType,Syncfusion.Blazor.Data.FilterBehavior,System.Boolean,System.Type)">
            <summary>
            Predicate is a Binary expression that needs to be built for a single or a series
            of values that needs to be passed on to the WHERE expression.
            <para></para>
            <para></para>
            <code lang="C#">var binaryExp = queryable.Predicate(parameter,
            &quot;EmployeeID&quot;, &quot;4&quot;, true);</code>
            </summary>
            <remarks>
            First create a ParameterExpression using the Parameter extension function, then
            use the same ParameterExpression to generate the predicates.
            </remarks>
            <param name="source"></param>
            <param name="paramExpression"></param>
            <param name="propertyName"></param>
            <param name="constValue"></param>
            <param name="filterType"></param>
            <param name="filterBehaviour"></param>
            <param name="isCaseSensitive"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.Select(System.Linq.IQueryable,System.String,System.Type)">
            <summary>
            Generates a Select query for a single property value.
            </summary>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="sourceType">Type.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.Select``1(System.Linq.IQueryable,System.String,System.Type)">
            <summary>
            Generates a Select query for a single and multiple property value.
            </summary>
            <typeparam name="T">Type of the data source elements.</typeparam>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="sourceType">Type.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.Skip(System.Linq.IQueryable,System.Int32,System.Type)">
            <summary>
            Generates a SKIP expression in the IQueryable source.
            </summary>
            <param name="source">The source.</param>
            <param name="constValue">The const value.</param>
            <param name="sourceType">Type.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.GetDelegateInvokeExpressionAggregateFunc``1(System.Linq.Expressions.ParameterExpression,System.String,System.Delegate)">
            <summary>
            Use this method with a cached delegate, this improves performance when using complex Expressions.
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="paramExp"></param>
            <param name="propertyName"></param>
            <param name="expressionFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.GetQueryableSumMethod(System.Type)">
            <summary>
            Get the exact Sum method from Queryable based on body type.
            </summary>
            <param name="bodyType"></param>
            <returns>exact method info.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.GetQueryableAverageMethod(System.Type)">
            <summary>
            Get the exact Average method from Queryable based on body type.
            </summary>
            <param name="bodyType"></param>
            <returns>exact method info.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.Take(System.Linq.IQueryable,System.Int32,System.Type)">
            <summary>
            Generates a TAKE expression in the IQueryable source.
            </summary>
            <param name="source">The source.</param>
            <param name="constValue">The const value.</param>
            <param name="sourceType">Type.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.ThenBy(System.Linq.IQueryable,System.String,System.Type)">
            <summary>
            Generates a ThenBy query for the Queryable source.
            <para></para>
            <code lang="C#">            DataClasses1DataContext db = new
            DataClasses1DataContext();
                        var orders = db.Orders.Skip(0).Take(10).ToList();
                        var queryable = orders.AsQueryable();
                        var sortedOrders = queryable.OrderBy(&quot;ShipCountry&quot;);
                        sortedOrders = sortedOrders.ThenBy(&quot;ShipCity&quot;);</code>
            </summary>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.ThenBy``1(System.Linq.IQueryable,System.Collections.Generic.IComparer{``0},System.Type)">
            <summary>
            Generates an ThenBy query for the IComparer defined.
            <para></para>
            <para> </para>
            <code lang="C#">   public class OrdersComparer :
            IComparer&lt;Order&gt;
                {
                    public int Compare(Order x, Order y)
                    {
                        return string.Compare(x.ShipCountry, y.ShipCountry);
                    }
                }</code>
            <para></para>
            <para><code lang="C#">var sortedOrders =
            db.Orders.Skip(0).Take(5).ToList().ThenBy(o =&gt; o, new
            OrdersComparer());</code></para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="comparer"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.ThenByDescending``1(System.Linq.IQueryable,System.Collections.Generic.IComparer{``0},System.Type)">
            <summary>
            Generates an ThenByDescending query for the IComparer defined.
            <para></para>
            <para> </para>
            <code lang="C#">   public class OrdersComparer :
            IComparer&lt;Order&gt;
                {
                    public int Compare(Order x, Order y)
                    {
                        return string.Compare(x.ShipCountry, y.ShipCountry);
                    }
                }</code>
            <para></para>
            <para><code lang="C#">var sortedOrders =
            db.Orders.Skip(0).Take(5).ToList().ThenByDescending(o =&gt; o, new
            OrdersComparer());</code></para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="comparer"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.ThenByDescending(System.Linq.IQueryable,System.String,System.Type)">
            <summary>
            Generates a ThenByDescending query for the Queryable source.
            <para></para>
            <code lang="C#">            DataClasses1DataContext db = new
            DataClasses1DataContext();
                        var orders = db.Orders.Skip(0).Take(10).ToList();
                        var queryable = orders.AsQueryable();
                        var sortedOrders = queryable.OrderBy(&quot;ShipCountry&quot;);
                        sortedOrders = sortedOrders.ThenByDescending(&quot;ShipCity&quot;);</code>
            </summary>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.Where(System.Linq.IQueryable,System.String,System.Object,Syncfusion.Blazor.Data.FilterType,System.Boolean,System.Type)">
            <summary>
            Generates the where expression.
            <para></para>
            <code lang="C#">            var nw = new Northwind(@&quot;Data Source =
            Northwind.sdf&quot;);
                        IQueryable queryable = nw.Orders.AsQueryable();
                        var filters = queryable.Where(&quot;ShipCountry&quot;,
            &quot;z&quot;, FilterType.Contains);
                        foreach (Orders item in filters)
                        {
                            Console.WriteLine(&quot;{0}/{1}&quot;, item.OrderID,
            item.ShipCountry);
                        }</code>
            </summary>
            <param name="source"></param>
            <param name="propertyName">Name of the property.</param>
            <param name="value"></param>
            <param name="filterType"></param>
            <param name="isCaseSensitive"></param>
            <param name="sourceType"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableExtensions.Where(System.Linq.IQueryable,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)">
            <summary>
            Use this function to generate WHERE expression based on Predicates. The
            AndPredicate and OrPredicate should be used in combination to build the
            predicate expression which is finally passed on to this function for creating a
            Lambda.
            <para></para>
            <para></para>
            <para></para>DataClasses1DataContext db = new DataClasses1DataContext();.
            <para></para>            var orders = db.Orders.Skip(0).Take(100).ToList();.
            <para></para>            var queryable = orders.AsQueryable();.
            <para></para>            var parameter =
            queryable.Parameter(&quot;ShipCountry&quot;);.
            <para></para>            var binaryExp = queryable.Predicate(parameter,.
            <para></para>&quot;ShipCountry&quot;, &quot;USA&quot;, true);.
            <para></para>            var filteredOrders = queryable.Where(parameter,
            binaryExp);.
            <para></para>            foreach (var order in filteredOrders).
            <para></para>            {.
            <para></para>                Console.WriteLine(order);.
            <para></para>            }.
            <para></para>
            <para></para>
            <para></para>Build Predicates for Contains / StartsWith / EndsWith,.
            <para></para>
            <para></para>            IQueryable queryable = nw.Orders.AsQueryable();.
            <para></para>            var parameter = queryable.Parameter();.
            <para></para>            var exp1 = queryable.Predicate(parameter,
            &quot;ShipCountry&quot;, &quot;h&quot;, FilterType.Contains);.
            <para></para>            var exp2 = queryable.Predicate(parameter,
            &quot;ShipCountry&quot;, &quot;a&quot;, FilterType.StartsWith);.
            <para></para>            var andExp = exp2.OrPredicate(exp1);.
            <para></para>            var filters = queryable.Where(parameter, andExp);.
            <para></para>            foreach (Orders item in filters).
            <para></para>            {.
            <para></para>                Console.WriteLine(&quot;{0}/{1}&quot;,
            item.OrderID, item.ShipCountry);.
            <para></para>            }.
            <para></para>
            </summary>
            <param name="source"></param>
            <param name="paramExpression"></param>
            <param name="predicateExpression"></param>
        </member>
        <member name="T:Syncfusion.Blazor.Data.QueryableOperation">
            <summary>
            DataOperation class that performs data operation in IQueryable type data sources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableOperation.Execute``1(System.Linq.IQueryable{``0},Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Executes the query against the given data source and returns the resultant records.
            </summary>
            <param name="dataSource">Input data source against which the query to be executed.</param>
            <param name="manager">Query to be executed.</param>
            <returns>IQueryable - resultant records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableOperation.PerformGrouping``1(System.Linq.IQueryable{``0},System.Collections.Generic.List{System.String})">
            <summary>
            Groups data source by the given list of column names.
            </summary>
            <param name="dataSource">Input data source to be grouped.</param>
            <param name="grouped">List of column names by which rows will be grouped.</param>
            <returns>IQueryable.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableOperation.PerformSorting``1(System.Linq.IQueryable{``0},System.Collections.Generic.List{Syncfusion.Blazor.Data.SortedColumn})">
            <summary>
            Sorts the data source using the given sort descriptor and returns the sorted records.
            </summary>
            <param name="dataSource">Data source to be sorted.</param>
            <param name="sortedColumns">List of sort criteria.</param>
            <returns>IQueryable - sorted records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableOperation.PerformSorting``1(System.Linq.IQueryable{``0},System.Collections.Generic.List{Syncfusion.Blazor.Data.Sort})">
            <summary>
            Sorts the data source using the given sort descriptor and returns the sorted records.
            </summary>
            <param name="dataSource">Data source to be sorted.</param>
            <param name="sortedColumns">List of sort criteria.</param>
            <returns>IQueryable - sorted records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableOperation.PerformSkip``1(System.Linq.IQueryable{``0},System.Int32)">
            <summary>
            Skip the given number of records from data source and returns the resultant records.
            </summary>
            <param name="dataSource">Input data source.</param>
            <param name="skip">Number of records to be skipped.</param>
            <returns>IQueryable.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableOperation.PerformTake``1(System.Linq.IQueryable{``0},System.Int32)">
            <summary>
            Take the given number of records from data source.
            </summary>
            <param name="dataSource">Input data source.</param>
            <param name="take">Number of records to be taken.</param>
            <returns>IQueryable.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableOperation.PerformSearching``1(System.Linq.IQueryable{``0},System.Collections.Generic.List{Syncfusion.Blazor.Data.SearchFilter})">
            <summary>
            Apply the given search criteria against the data source and returns the filtered records.
            </summary>
            <param name="dataSource">Data source to be filtered.</param>
            <param name="searchFilter">List of search criteria.</param>
            <returns>IQueryable - searched records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableOperation.PerformFiltering``1(System.Linq.IQueryable{``0},System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter},System.String)">
            <summary>
            Apply the given filter criteria against the data source and returns the filtered records.
            </summary>
            <param name="dataSource">Data source to be filtered.</param>
            <param name="whereFilter">List of filter criteria.</param>
            <param name="condition">Filter merge condition. Value can be either AND or OR.</param>
            <returns>IQueryable - filtered records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableOperation.PerformSelect(System.Linq.IQueryable,System.Collections.Generic.List{System.String})">
            <summary>
            Selects the fields from data source.
            </summary>
            <param name="dataSource">Input data source.</param>
            <param name="select">Fields to select.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.QueryableOperation.PerformSelect``1(System.Linq.IQueryable,System.Collections.Generic.List{System.String})">
            <summary>
            Selects the fields from data source.
            </summary>
            <typeparam name="T">Type of the data source elements.</typeparam>
            <param name="dataSource">Input data source.</param>
            <param name="select">Fields to select.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Blazor.Data.SortDescription">
            <summary>
             Defines the direction and the property name to be used as the criteria for
             sorting a collection.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Data.SortDescription.#ctor(System.String,Syncfusion.Blazor.Data.ListSortDirection)">
            <summary>
            Initializes a new instance of the System.ComponentModel.SortDescription structure.
            </summary>
            <param name="propertyName">The name of the property to sort the list by.</param>
            <param name="direction">The sort order.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Data.SortDescription.op_Inequality(Syncfusion.Blazor.Data.SortDescription,Syncfusion.Blazor.Data.SortDescription)">
            <summary>
            Compares two System.ComponentModel.SortDescription objects for value inequality.
            </summary>
            <param name="sd1">The first instance to compare.</param>
            <param name="sd2">The second instance to compare.</param>
            <returns>bool.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.SortDescription.op_Equality(Syncfusion.Blazor.Data.SortDescription,Syncfusion.Blazor.Data.SortDescription)">
            <summary>
            Compares two System.ComponentModel.SortDescription objects for value equality.
            </summary>
            <param name="sd1">The first instance to compare.</param>
            <param name="sd2">The second instance to compare.</param>
            <returns>true.</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Data.SortDescription.Direction">
            <summary>
            Gets or sets a value that indicates whether to sort in ascending or descending
                order.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Data.SortDescription.PropertyName">
            <summary>
            Gets or sets the property name being used as the sorting criteria.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Data.SortDescription.Equals(System.Object)">
            <summary>
            Compares the specified instance and the current instance of System.ComponentModel.SortDescription
                for value equality.
            </summary>
            <param name="obj">The System.ComponentModel.SortDescription instance to compare.</param>
            <returns>true.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.SortDescription.Equals(Syncfusion.Blazor.Data.SortDescription)">
            <summary>
            Compares the specified instance and the current instance of System.ComponentModel.SortDescription
                for value equality.
            </summary>
            <param name="other">The System.ComponentModel.SortDescription instance to compare.</param>
            <returns>true.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Data.SortDescription.GetHashCode">
            <summary>
            Returns the hash code.
            </summary>
            <returns>int.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.BaseComponent">
            <summary>
            A Base Component for all the Syncfusion Blazor UI components.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.BaseComponent.LocaleText">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.BaseComponent.ID">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.BaseComponent.IsRendered">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.BaseComponent.ModelType">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.BaseComponent.DataManager">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.BaseComponent.TemplateClientChanges">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.BaseComponent.UniqueId">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.BaseComponent.DataContainer">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.BaseComponent.DataHashTable">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.BaseComponent.OnInitRenderAsync">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.BaseComponent.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.BaseComponent.DataBind(System.Boolean)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.BaseComponent.Trigger(System.String,System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.BaseComponent.UpdateModel(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.BaseComponent.ErrorHandling(System.String,System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.BaseComponent.DataProcess(System.String,System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.BaseComponent.Insert(System.String,System.String,System.Int32,System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.BaseComponent.Update(System.String,System.String,System.String,System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.BaseComponent.Remove(System.String,System.String,System.String,System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.BaseComponent.BatchUpdate(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.BaseComponent.UpdateTemplate(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DataManager">
            <summary>
            The DataManager is a data management component used for performing data operations in applications.
            It acts as an abstraction for using local data source - IEnumerable and remote data source - web services returning JSON or oData.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.ServiceProvider">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.BaseAdaptor">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.HttpClientInstance">
            <summary>
            Specifies the HttpClient instance to be used  by DataManager.
            </summary>
            <remarks>Use HttpClientInstance property to inject named HttpClient into DataManager.</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.Url">
            <summary>
            Specifies the endpoint URL. DataManager requests this URL when data is needed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.AdaptorInstance">
            <summary>
            Specifies the custom adaptor class type. DataManager uses this type value to instantiate custom adaptor class.
            </summary>
            <remarks>DataManager uses Activator.CreateInstance method to create custom adaptor instance.
            Injecting services into custom adaptor class, is not supported while using this approach.
            To inject and use services, provide custom adaptor as a Blazor component by extending DataAdaptor class.</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.Adaptor">
            <summary>
            Gets or sets the data adaptor to be used by DataManager.
            <list type="bullet">
            <item>
            <term>BlazorAdaptor</term>
            <description>Default. BlazorAdaptor is used to process Enumerable data. It contains methods to process the given collection based on the queries.</description>
            </item>
            <item>
            <term>ODataAdaptor</term>
            <description>
            OData Adaptor provies ability to consume and manipulate data from OData services.
            </description>
            </item>
            <item>
            <term>ODataV4Adaptor</term>
            <description>
            ODatav4 Adaptor provies ability to consume and manipulate data from OData v4 services
            </description>
            </item>
            <item>
            <term>WebApiAdaptor</term>
            <description>
            WebApi Adaptor provies ability to consume and manipulate data from WebApi services.
            This adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor
            </description>
            </item>
            <item>
            <term>UrlAdaptor</term>
            <description>
            URL Adaptor is used when you are required to interact with all kind of remote services to retrieve data.
            </description>
            </item>
            <item>
            <term>RemoteSaveAdaptor</term>
            <description>
            Remote Save Adaptor is used for binding JSON data.
            It interacts with remote services only for CRUD operations.
            </description>
            </item>
            <item>
            <term>CustomAdaptor</term>
            <description>
            CustomAdaptor specifies that own data query and manipulation logic has been provided using custom adaptor component
            extended from DataAdaptor class.
            </description>
            </item>
            <item>
            <term>JsonAdaptor</term>
            <description>
            JsonAdaptor is used to process JSON data at the client side. It contains methods to process the given JSON data based on the queries.
            </description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.DataAdaptor">
            <summary>
            Holds adaptor instance.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.DotNetObjectRef">
            <summary>
            Holds dotnet instance.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.InsertUrl">
            <summary>
            Specifies the insert URL.
            </summary>
            <remarks>Applicable for remote adaptors.
            When Insert method is called, request will be made to InsertUrl.
            If InsertUrl is not provided, Url is used as fallback.</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.RemoveUrl">
            <summary>
            Specifies the remove URL.
            </summary>
            <remarks>Applicable for remote adaptors.
            When Remove method is called, request will be made to RemoveUrl.
            If RemoveUrl is not provided, Url is used as fallback.</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.UpdateUrl">
            <summary>
            Specifies the update URL.
            </summary>
            <remarks>Applicable for remote adaptors.
            When Update method is called, request will be made to UpdateUrl.
            If UpdateUrl is not provided, Url is used as fallback.</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.CrudUrl">
            <summary>
            Specifies the CRUD URL.
            </summary>
            <remarks>Applicable for remote adaptors.
            When Insert, Remove or Update method is called, request will be made to CrudUrl.
            If CrudUrl is not provided, Url is used as fallback.</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.BatchUrl">
            <summary>
            Specifies the batch url.
            </summary>
            <remarks>Applicable for remote adaptors.
            When SaveChanges method is called, request will be made to BatchUrl.
            If BatchUrl is not provided, Url is used as fallback.</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.Json">
            <summary>
            Specifies the IEnumerable collection. This data could be queried and manipulated.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.Headers">
            <summary>
            Specifies the key/value pair of headers.
            </summary>
            <remarks>
            Use Headers to add any custom headers to the request made by DataManager.
            Users can also send authentication bearer token using Headers property.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.Accept">
            <summary>
            Specifies the accept type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.Data">
            <summary>
            Specifies the IEnumerale data.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.TimeTillExpiration">
            <summary>
            Specifies the time limit to clear the cached data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.CachingPageSize">
            <summary>
            Specifies the caching page size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.EnableCaching">
            <summary>
            Enables data caching.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.RequestType">
            <summary>
            Specifies the request type for sending data fetching.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.Key">
            <summary>
            Specifies the primary key value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.CrossDomain">
            <summary>
            When true, then indicates that the request is a cross-domain request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.Jsonp">
            <summary>
            Specifies the jsonp request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.DataType">
            <summary>
            Specifies the data type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.Offline">
            <summary>
            Enables offline mode in datamanager.
            </summary>
            <remarks>
            Applicable for remote data source. If offline is true then initial request will be made to fetch
            data. Further actions will be handled at the in-memory data and no more request will be made to the service.
            Cached data is stored in the JSON property.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.RequiresFormat">
            <summary>
            Sepcifies requires format.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.guid">
            <summary>
            unique identifier.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.UniqueGuid">
            <summary>
            unique identifier
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.Parent">
            <summary>
            Parent component of DataManager.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.BaseParent">
            <summary>
            Parent component of DataManager.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.ChildContent">
            <summary>
            Defines the child content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.UriHelper">
            <summary>
            Gets navigation manager to get base url.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DataManager.BaseUri">
            <summary>
            Gets the Base URL.
            </summary>
            <remarks>BaseUri will be used to get absolute of Url, InsertUrl, UpdateUrl and RemoveUrl properties.</remarks>
        </member>
        <member name="F:Syncfusion.Blazor.DataManager.HttpHandler">
            <summary>
            Specifies the http client handler.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.ShouldSerializeJson">
            <summary>
            If returns true, Json property will be serialized.
            </summary>
            <returns>bool.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.ExecuteQuery``1(Syncfusion.Blazor.Data.Query)">
            <summary>
            Executes given query and returns resultant data.
            </summary>
            <typeparam name="T">Type of the model class.</typeparam>
            <param name="query">Query class which will be executed against data source.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.ExecuteQueryAsync``1(Syncfusion.Blazor.Data.Query)">
            <summary>
            Executes given query and returns resultant data.
            </summary>
            <typeparam name="T">Type of the model class.</typeparam>
            <param name="query">Query class which will be executed against data source.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.ExecuteQuery``1(Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Executes given query and returns resultant data.
            </summary>
            <typeparam name="T">Type of the model class</typeparam>
            <param name="queries">Query class which will be executed against data source.</param>
            <returns>Task</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.ExecuteQueryAsync``1(Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Executes given query and returns resultant data.
            </summary>
            <typeparam name="T">Type of the model class</typeparam>
            <param name="queries">Query class which will be executed against data source.</param>
            <returns>Task</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.BeforeSend(System.Net.Http.HttpRequestMessage)">
            <summary>
            Invoked before sending http request.
            </summary>
            <param name="request">HttpRequestMessage instance.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.Insert``1(System.Object,System.String,Syncfusion.Blazor.Data.Query,System.Int32)">
            <summary>
            Performs the new item add operation.
            </summary>
            <param name="data">New item to be added.</param>
            <param name="tableName">Table name to insert new item.</param>
            <param name="query">Query class instance.</param>
            <param name="position">Position to insert the new item.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.InsertAsync``1(System.Object,System.String,Syncfusion.Blazor.Data.Query,System.Int32)">
            <summary>
            Performs the new item add operation.
            </summary>
            <param name="data">New item to be added.</param>
            <param name="tableName">Table name to insert new item.</param>
            <param name="query">Query class instance.</param>
            <param name="position">Position to insert the new item.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.Update``1(System.String,System.Object,System.String,Syncfusion.Blazor.Data.Query,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Performs the update operation.
            </summary>
            <param name="keyField">Specifies the primary key.</param>
            <param name="data">Specifies the updated record.</param>
            <param name="tableName">Table name of the update item.</param>
            <param name="query">Query instance.</param>
            <param name="original">Specifies the original data. Uses this original data for sending changed items alone to the server.</param>
            <param name="updateProperties">Specifies the field names to be updated.</param>
            <returns>object.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.UpdateAsync``1(System.String,System.Object,System.String,Syncfusion.Blazor.Data.Query,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Performs the update operation.
            </summary>
            <param name="keyField">Specifies the primary key.</param>
            <param name="data">Specifies the updated record.</param>
            <param name="tableName">Table name of the update item.</param>
            <param name="query">Query instance.</param>
            <param name="original">Specifies the original data. Uses this original data for sending changed items alone to the server.</param>
            <param name="updateProperties">Specifies the field names to be updated.</param>
            <returns>object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.Remove``1(System.String,System.Object,System.String,Syncfusion.Blazor.Data.Query)">
            <summary>
            Performs the remove operation.
            </summary>
            <param name="keyField">Specifies the primary key.</param>
            <param name="value">Specifies the primary key field value.</param>
            <param name="tableName">Table name of the update item.</param>
            <param name="query">Query instance.</param>
            <returns>object.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.RemoveAsync``1(System.String,System.Object,System.String,Syncfusion.Blazor.Data.Query)">
            <summary>
            Performs the remove operation.
            </summary>
            <param name="keyField">Specifies the primary key.</param>
            <param name="value">Specifies the primary key field value.</param>
            <param name="tableName">Table name of the update item.</param>
            <param name="query">Query instance.</param>
            <returns>object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.SaveChanges``1(System.Object,System.Object,System.Object,System.String,System.Nullable{System.Int32},System.String,Syncfusion.Blazor.Data.Query,System.Object)">
            <summary>
            Performs the batch update operation. Enables user to perform add, update and remove items from data source in a single request.
            </summary>
            <param name="changed">Specifies the changed records.</param>
            <param name="added">Specifies the added records.</param>
            <param name="deleted">Specifies the deleted records.</param>
            <param name="keyField">Specifies the primary key field.</param>
            <param name="dropIndex">Specifies the record position, from which new records will be added.</param>
            <param name="tableName">Table name of the update item.</param>
            <param name="query">Query class instance.</param>
            <param name="Original">Specifies the original data. Uses this original data for sending change items alone to the server.</param>
            <returns>object.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.SaveChangesAsync``1(System.Object,System.Object,System.Object,System.String,System.Nullable{System.Int32},System.String,Syncfusion.Blazor.Data.Query,System.Object)">
            <summary>
            Performs the batch update operation. Enables user to perform add, update and remove items from data source in a single request.
            </summary>
            <param name="changed">Specifies the changed records.</param>
            <param name="added">Specifies the added records.</param>
            <param name="deleted">Specifies the deleted records.</param>
            <param name="keyField">Specifies the primary key field.</param>
            <param name="dropIndex">Specifies the record position, from which new records will be added.</param>
            <param name="tableName">Table name of the update item.</param>
            <param name="query">Query class instance.</param>
            <param name="Original">Specifies the original data. Uses this original data for sending change items alone to the server.</param>
            <returns>object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.Dispose">
            <summary>
            Dispose unmanaged resources in the Syncfusion Blazor component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataManager.Dispose(System.Boolean)">
            <summary>
            Dispose unmanaged resources in the Syncfusion Blazor component.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.DataManagerRequest">
            <summary>
            Defines the members of the query.
            </summary>
            <remarks>DataManagerRequest is used to model bind posted data at server side.</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.Skip">
            <summary>
            Specifies the records to skip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.Take">
            <summary>
            Specifies the records to take.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.antiForgery">
            <summary>
            Specifies the anti-forgery key.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.RequiresCounts">
            <summary>
            Sepcifies that the count is required in response.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.Table">
            <summary>
            Specifies the table name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.IdMapping">
            <summary>
            Specifies the parent id mapping value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.Group">
            <summary>
            Specifies the grouped column details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.Select">
            <summary>
            Specifies the select column details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.Expand">
            <summary>
            Specifies the relational table names to be eagerloaded.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.Sorted">
            <summary>
            Speccifies the sort criteria.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.Search">
            <summary>
            Specifies the search criteria.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.Where">
            <summary>
            Specifies the filter criteria.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.Aggregates">
            <summary>
            Specifies the aggregate details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.Params">
            <summary>
            Specifies additional parameters.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.Distinct">
            <summary>
            Specifies the field names to find distinct values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.GroupByFormatter">
            <summary>
            Holds field and format method to handle group by format.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.ServerSideGroup">
            <summary>
            Specifies that perform in-built grouping.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.RequiresFilteredRecords">
            <summary>
            Sepcifies that the filtered records is required in response.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.LazyLoad">
            <summary>
            Specifies that perform lazy load grouping.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataManagerRequest.LazyExpandAllGroup">
            <summary>
            Specifies that to perform expand all for lazy load grouping.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DataAdaptor">
            <summary>
            Abstract class for Data adaptors.
            </summary>
            <remarks>
            Extend DataAdaptor component while creating custom adaptor component. DataAdaptor component is extended from
            <see cref="T:Microsoft.AspNetCore.Components.OwningComponentBase"></see> so that
            services can be accessed from <see cref="P:Microsoft.AspNetCore.Components.OwningComponentBase.ScopedServices"/> property.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor.Read(Syncfusion.Blazor.DataManagerRequest,System.String)">
            <summary>
            Performs data Read operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor.ReadAsync(Syncfusion.Blazor.DataManagerRequest,System.String)">
            <summary>
            Performs data Read operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor.Insert(Syncfusion.Blazor.DataManager,System.Object,System.String)">
            <summary>
            Performs Insert operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor.InsertAsync(Syncfusion.Blazor.DataManager,System.Object,System.String)">
            <summary>
            Performs Insert operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor.Remove(Syncfusion.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Remove operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor.RemoveAsync(Syncfusion.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Remove operation asynchronously..
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor.Update(Syncfusion.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Update operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor.UpdateAsync(Syncfusion.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Update operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor.BatchUpdate(Syncfusion.Blazor.DataManager,System.Object,System.Object,System.Object,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Performs Batch CRUD operations synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor.BatchUpdateAsync(Syncfusion.Blazor.DataManager,System.Object,System.Object,System.Object,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Performs Batch CRUD operations asynchronously.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DataAdaptor`1">
            <summary>
            Abstract class for Data adaptors.
            </summary>
            <remarks>
            Extend DataAdaptor{T} component while creating custom adaptor component. DataAdaptor{T} component is extended from
            <see cref="T:Microsoft.AspNetCore.Components.OwningComponentBase`1"></see> so that
            services can be accessed from <see cref="P:Microsoft.AspNetCore.Components.OwningComponentBase`1.Service"/> property.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor`1.Read(Syncfusion.Blazor.DataManagerRequest,System.String)">
            <summary>
            Performs data Read operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor`1.ReadAsync(Syncfusion.Blazor.DataManagerRequest,System.String)">
            <summary>
            Performs data Read operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor`1.Insert(Syncfusion.Blazor.DataManager,System.Object,System.String)">
            <summary>
            Performs Insert operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor`1.InsertAsync(Syncfusion.Blazor.DataManager,System.Object,System.String)">
            <summary>
            Performs Insert operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor`1.Remove(Syncfusion.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Remove operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor`1.RemoveAsync(Syncfusion.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Remove operation asynchronously..
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor`1.Update(Syncfusion.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Update operation synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor`1.UpdateAsync(Syncfusion.Blazor.DataManager,System.Object,System.String,System.String)">
            <summary>
            Performs Update operation asynchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor`1.BatchUpdate(Syncfusion.Blazor.DataManager,System.Object,System.Object,System.Object,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Performs Batch CRUD operations synchronously.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataAdaptor`1.BatchUpdateAsync(Syncfusion.Blazor.DataManager,System.Object,System.Object,System.Object,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Performs Batch CRUD operations asynchronously.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DataOperations">
            <summary>
            DataOperation class that performs data operation in IEnumerable and IQueryable type data sources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.Execute(System.Collections.IEnumerable,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Executes the query against the given data source and returns the resultant records.
            </summary>
            <param name="dataSource">Input data source against which the query to be executed.</param>
            <param name="query">Query to be executed.</param>
            <returns>IEnumerable - resultant records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSorting(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.SortedColumn})">
            <summary>
            Sorts the data source using the given sort descriptor and returns the sorted records.
            </summary>
            <param name="dataSource">Data source to be sorted.</param>
            <param name="sortedColumns">List of sort criteria.</param>
            <returns>IEnumerable - sorted records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSorting(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.Sort})">
            <summary>
            Sorts the data source using the given sort descriptor and returns the sorted records.
            </summary>
            <param name="dataSource">Data source to be sorted.</param>
            <param name="sortedColumns">List of sort criteria.</param>
            <returns>IEnumerable - sorted records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformFiltering(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter},System.String)">
            <summary>
            Apply the given filter criteria against the data source and returns the filtered records.
            </summary>
            <param name="dataSource">Data source to be filtered.</param>
            <param name="whereFilter">List of filter criteria.</param>
            <param name="condition">Filter merge condition. Value can be either AND or OR.</param>
            <returns>IEnumerable - filtered records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSearching(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.SearchFilter})">
            <summary>
            Apply the given search criteria against the data source and returns the filtered records.
            </summary>
            <param name="dataSource">Data source to be filtered.</param>
            <param name="searchFilter">List of search criteria.</param>
            <returns>IEnumerable - searched records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSkip(System.Collections.IEnumerable,System.Int32)">
            <summary>
            Skip the given number of records from data source and returns the resultant records.
            </summary>
            <param name="dataSource">Input data source.</param>
            <param name="skip">Number of records to be skipped.</param>
            <returns>IEnumerable.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformTake(System.Collections.IEnumerable,System.Int32)">
            <summary>
            Take the given number of records from data source.
            </summary>
            <param name="dataSource">Input data source.</param>
            <param name="take">Number of records to be taken.</param>
            <returns>IEnumerable.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformGrouping(System.Collections.IEnumerable,System.Collections.Generic.List{System.String})">
            <summary>
            Groups data source by the given list of column names.
            </summary>
            <param name="dataSource">Input data source to be grouped.</param>
            <param name="grouped">List of column names by which rows will be grouped.</param>
            <returns>IEnumerable.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.Execute``1(System.Collections.Generic.IEnumerable{``0},Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Executes the query against the given data source and returns the resultant records.
            </summary>
            <param name="dataSource">Input data source against which the query to be executed.</param>
            <param name="query">Query to be executed.</param>
            <returns>IEnumerable - resultant records.</returns>
            <typeparam name="T">Type of the data source elements.</typeparam>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSkip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Skip the given number of records from data source and returns the resultant records.
            </summary>
            <param name="dataSource">Input data source.</param>
            <param name="skip">Number of records to be skipped.</param>
            <typeparam name="T">Type of the data source elements.</typeparam>
            <returns>IEnumerable.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformTake``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Take the given number of records from data source.
            </summary>
            <param name="dataSource">Input data source.</param>
            <param name="take">Number of records to be taken.</param>
            <typeparam name="T">Type of the data source elements.</typeparam>
            <returns>IEnumerable.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformGrouping``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{System.String})">
            <summary>
            Groups data source by the given list of column names.
            </summary>
            <param name="dataSource">Input data source to be grouped.</param>
            <param name="grouped">List of column names by which rows will be grouped.</param>
            <typeparam name="T">Type of the data source elements.</typeparam>
            <returns>IEnumerable.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSorting``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{Syncfusion.Blazor.Data.SortedColumn})">
            <summary>
            Sorts the data source using the given sort descriptor and returns the sorted records.
            </summary>
            <param name="dataSource">Data source to be sorted.</param>
            <param name="sortedColumns">List of sort criteria.</param>
            <typeparam name="T">Type of the data source elements.</typeparam>
            <returns>IEnumerable - sorted records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSorting``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{Syncfusion.Blazor.Data.Sort})">
            <summary>
            Sorts the data source using the given sort descriptor and returns the sorted records.
            </summary>
            <param name="dataSource">Data source to be sorted.</param>
            <param name="sortedColumns">List of sort criteria.</param>
            <typeparam name="T">Type of the data source elements.</typeparam>
            <returns>IEnumerable - sorted records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSelect(System.Collections.IEnumerable,System.Collections.Generic.List{System.String})">
            <summary>
            Selected the given field names alone from the data source.
            </summary>
            <param name="dataSource">Input data source.</param>
            <param name="select">List of fields to select.</param>
            <returns>IEnumerale.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSearching``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{Syncfusion.Blazor.Data.SearchFilter})">
            <summary>
            Apply the given search criteria against the data source and returns the filtered records.
            </summary>
            <param name="dataSource">Data source to be filtered.</param>
            <param name="searchFilter">List of search criteria.</param>
            <returns>IEnumerable - searched records.</returns>
            <typeparam name="T">Type of the data source elements.</typeparam>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformFiltering``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter},System.String)">
            <summary>
            Apply the given filter criteria against the data source and returns the filtered records.
            </summary>
            <param name="dataSource">Data source to be filtered.</param>
            <param name="whereFilter">List of filter criteria.</param>
            <param name="condition">Filter merge condition. Value can be either AND or OR.</param>
            <returns>IEnumerable - filtered records.</returns>
            <typeparam name="T">Type of the data source elements.</typeparam>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.Execute``1(System.Linq.IQueryable{``0},Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Executes the query against the given data source and returns the resultant records.
            </summary>
            <param name="dataSource">Input data source against which the query to be executed.</param>
            <param name="query">Query to be executed.</param>
            <returns>IQueryable - resultant records.</returns>
            <typeparam name="T">Type of the data source elements.</typeparam>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformGrouping``1(System.Linq.IQueryable{``0},System.Collections.Generic.List{System.String})">
            <summary>
            Groups data source by the given list of column names.
            </summary>
            <param name="dataSource">Input data source to be grouped.</param>
            <param name="grouped">List of column names by which rows will be grouped.</param>
            <typeparam name="T">Type of the data source elements.</typeparam>
            <returns>IQueryable.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSorting``1(System.Linq.IQueryable{``0},System.Collections.Generic.List{Syncfusion.Blazor.Data.SortedColumn})">
            <summary>
            Sorts the data source using the given sort descriptor and returns the sorted records.
            </summary>
            <param name="dataSource">Data source to be sorted.</param>
            <param name="sortedColumns">List of sort criteria.</param>
            <typeparam name="T">Type of the data source elements.</typeparam>
            <returns>IQueryable - sorted records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSorting``1(System.Linq.IQueryable{``0},System.Collections.Generic.List{Syncfusion.Blazor.Data.Sort})">
            <summary>
            Sorts the data source using the given sort descriptor and returns the sorted records.
            </summary>
            <param name="dataSource">Data source to be sorted.</param>
            <param name="sortedColumns">List of sort criteria.</param>
            <typeparam name="T">Type of the data source elements.</typeparam>
            <returns>IQueryable - sorted records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSkip``1(System.Linq.IQueryable{``0},System.Int32)">
            <summary>
            Skip the given number of records from data source and returns the resultant records.
            </summary>
            <param name="dataSource">Input data source.</param>
            <param name="skip">Number of records to be skipped.</param>
            <typeparam name="T">Type of the data source elements.</typeparam>
            <returns>IQueryable.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformTake``1(System.Linq.IQueryable{``0},System.Int32)">
            <summary>
            Take the given number of records from data source.
            </summary>
            <param name="dataSource">Input data source.</param>
            <param name="take">Number of records to be taken.</param>
            <typeparam name="T">Type of the data source elements.</typeparam>
            <returns>IEnumerable.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSearching``1(System.Linq.IQueryable{``0},System.Collections.Generic.List{Syncfusion.Blazor.Data.SearchFilter})">
            <summary>
            Apply the given search criteria against the data source and returns the filtered records.
            </summary>
            <param name="dataSource">Data source to be filtered.</param>
            <param name="searchFilter">List of search criteria.</param>
            <returns>IQueryable - searched records.</returns>
            <typeparam name="T">Type of the data source elements.</typeparam>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformFiltering``1(System.Linq.IQueryable{``0},System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter},System.String)">
            <summary>
            Apply the given filter criteria against the data source and returns the filtered records.
            </summary>
            <param name="dataSource">Data source to be filtered.</param>
            <param name="whereFilter">List of filter criteria.</param>
            <param name="condition">Filter merge condition. Value can be either AND or OR.</param>
            <returns>IQueryable - filtered records.</returns>
            <typeparam name="T">Type of the data source elements.</typeparam>
        </member>
        <member name="M:Syncfusion.Blazor.DataOperations.PerformSelect``1(System.Linq.IQueryable{``0},System.Collections.Generic.List{System.String})">
            <summary>
            Selected the given field names alone from the data source.
            </summary>
            <param name="dataSource">Input data source.</param>
            <param name="select">List of fields to select.</param>
            <returns>IQueryable.</returns>
            <typeparam name="T">Type of the data source elements.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.DynamicObjectOperation">
            <summary>
            DataOperation class that performs data operation in DynamicObject type data sources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DynamicObjectOperation.PerformDataOperations(System.Collections.IEnumerable,Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Executes the query against the given data source and returns the resultant records.
            </summary>
            <param name="DataSource">Input data source.</param>
            <param name="queries">Query to be executed against data source.</param>
            <returns>IEnumerable - resultant records.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DynamicObjectOperation.PerformSorting(System.Linq.IQueryable,System.Collections.Generic.List{Syncfusion.Blazor.Data.Sort})">
            <summary>
            Sorts the given data source.
            </summary>
            <param name="dataSource">Input data source to be sorted.</param>
            <param name="sortedColumns">List of sort criteria.</param>
            <returns>IQuerable.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DynamicObjectOperation.PerformFiltering(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter},System.String,System.Collections.Generic.IDictionary{System.String,System.Type})">
            <summary>
            Apply the given filter criteria against the data source and returns the filtered records.
            </summary>
            <param name="dataSource">Input data source.</param>
            <param name="whereFilter">List of filter criteria.</param>
            <param name="condition">Condition to merge two filter criteria.</param>
            <param name="columnTypes">Type collection of each property in data source.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Blazor.DynamicObjectOperation.PerformSearching(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.SearchFilter},System.Collections.Generic.IDictionary{System.String,System.Type})">
            <summary>
            Apply the given search criteria against the data source and returns the filtered records.
            </summary>
            <param name="dataSource">Data source to be filtered.</param>
            <param name="searchFilter">List of search criteria.</param>
            <returns>IEnumerable - searched records.</returns>
            <param name="columnTypes">Type collection of each property in data source.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DynamicObjectOperation.PredicateBuilder(System.Collections.IEnumerable,System.Collections.Generic.List{Syncfusion.Blazor.Data.WhereFilter},System.String,System.Linq.Expressions.ParameterExpression,System.Collections.Generic.IDictionary{System.String,System.Type})">
            <summary>
            Generates predicate from the filter criteria.
            </summary>
            <param name="dataSource">Data source to be filtered.</param>
            <param name="whereFilter">List of filter criteria.</param>
            <param name="condition">Condition to merge two filter criteria.</param>
            <param name="paramExpression">Parameter expression.</param>
            <param name="columnTypes">Type collection of each property in data source.</param>
            <returns>Expression.</returns>
        </member>
        <member name="P:Syncfusion.Blazor.SfBaseExtension.isDiagramRendered">
            <summary>
            This member is used only to prevent raising JS interop call for dependent controls (i.e. overview) before rendered the diagram.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SfBaseExtension.LocaleText">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.SfBaseExtension.ID">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.SfBaseExtension.ModelType">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.SfBaseExtension.DataManager">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.SfBaseExtension.TemplateClientChanges">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.SfBaseExtension.UniqueId">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.SfBaseExtension.DataContainer">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.SfBaseExtension.DataHashTable">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseExtension.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseExtension.OnInitRenderAsync">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseExtension.DataBind(System.Boolean)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseExtension.Trigger(System.String,System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseExtension.UpdateModel(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseExtension.DataProcess(System.String,System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.SfBaseExtension.UpdateTemplate(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.EventData">
            <summary>
            Represents the event argument data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SfDataBoundComponent.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.SfDataBoundComponent.UpdateProperty``1(System.String,``0,``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Processing the property value changes and invoking the events for two-way bindings.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2">
            <summary>
            Specifies the AutoComplete Events of the component.
            </summary>
            <typeparam name="TValue">Specifies the value type.</typeparam>
            <typeparam name="TItem">Specifies the type of AutoCompleteEvents.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.OnActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.OnActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.OnActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.OnOpen">
            <summary>
            Triggers when the popup before opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.Blur">
            <summary>
            Triggers when focus moves out from the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.ValueChange">
            <summary>
            <para>Triggers when an item in a popup is selected or when the model value is changed by user.</para>
            <para>Use Change event to configure the cascading DropDownList.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.OnClose">
            <summary>
            Triggers before the popup is closed. If you cancel this event, the popup remains opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.CustomValueSpecifier">
            <summary>
            Triggers on set a custom value to this component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.Filtering">
            <summary>
            Triggers on typing a character in the filter bar when the AllowFiltering is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.Focus">
            <summary>
            Triggers when the component is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.Opened">
            <summary>
            Triggers after the popup has been closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.Closed">
            <summary>
            Triggers when the popup closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.OnValueSelect">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.AutoCompleteEvents`2.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings">
            <summary>
            The Fields property maps the columns of the data table and binds the data to the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings.GroupBy">
            <summary>
            Group the list items with it's related items by mapping groupBy field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the list element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings.IconCss">
            <summary>
            Maps the icon class column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings.Text">
            <summary>
            Maps the text column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings.Value">
            <summary>
            Maps the value column from data table for each list item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.AutoCompleteFieldSettings.OnParametersSet">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.AutoCompleteTemplates`1">
            <summary>
            The AutoComplete has been provided with several options to customize each list item, group title, selected value, header, and footer elements.
            </summary>
            /// <typeparam name="TItem">Specifies the type of AutoCompleteTemplates.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SfAutoComplete`2">
            <summary>
            The AutoComplete component provides the matched suggestion list when type into the input, from which the user can select one.
            </summary>
            <summary>
            The AutoComplete component provides the matched suggestion list when type into the input, from which the user can select one.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.Highlight">
            <summary>
            When set to 'true', highlight the searched characters on suggested list items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.MinLength">
            <summary>
            Allows you to set the minimum search character length, the search action will perform after typed minimum characters.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.FilterType">
            <summary>
            Determines on which filter type, the component needs to be considered on search action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.ShowClearButton">
            <summary>
            <para>Specifies whether to show or hide the clear button.</para>
            <para>When the clear button is clicked, `Value` properties are reset to null.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.ShowPopupButton">
            <summary>
            Allows you to either show or hide the popup button on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.SuggestionCount">
            <summary>
            Supports the specified number of list items on the suggestion popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.AutoCompleteParent">
            <summary>
            Parent component of AutoComplete.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.ROOT">
            <summary>
            Specifies the root class of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.ComponentName">
            <summary>
            Specifies the component name.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.IsFilter">
            <summary>
            Specifies whether filter option is allowed or not.
            </summary>
            <returns>bool.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.InvokeBeforeOpen">
            <summary>
            Triggers before the popup get opened.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.InvokeAfterClosed">
            <summary>
            Triggers after the popup get closed.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Triggers after the component was rendered.
            </summary>
            <param name="firstRender">true if the component rendered for the first time.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.InvokePopupEvents(System.Boolean)">
            <summary>
            Invoked when popup get opened.
            </summary>
            <param name="isOpen">True if the popup in open state.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.InvokeSelectEvent(`1,System.EventArgs)">
            <summary>
            Method which returns the selected event arguments.
            </summary>
            <param name="item">Specifies the item.</param>
            <param name="args">Speciifes the EventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.InvokeChangeEvent(System.EventArgs)">
            <summary>
            Method which returns the change event arguments.
            </summary>
            <param name="args">Specifies the EventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.SearchList(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Task which specifies the search list.
            </summary>
            <param name="args">Specifies the KeyboardEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.FocusHandler(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
            <summary>
            Triggers when the component get focused in.
            </summary>
            <param name="args">Specifies the FocusEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.InvokeBlur">
            <summary>
            Triggers when component get focused out.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.IsEditTextBox">
            <summary>
            Specifies whether it is edit textbox.
            </summary>
            <returns>bool.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.UpdateFocusItem(`1)">
            <summary>
            Task which updates the focus item.
            </summary>
            <param name="focusItem">Specifies the focus item.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.GetQuery(Syncfusion.Blazor.Data.Query)">
            <summary>
            Method which gets the query.
            </summary>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.ClearAll(System.EventArgs)">
            <summary>
            Specifies the clear all event.
            </summary>
            <param name="args">Specifies the EventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.ActionBegin(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which pecifies the action begin event.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.UpdateMainData">
            <summary>
            Method which updates main data.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.ActionFailure(System.Object)">
            <summary>
            Task which specifies the action failure event.
            </summary>
            <param name="args">Specifies the object arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.ActionComplete(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which specifies the action complete event.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.InvokeCustomValueEvent">
            <summary>
            Task which specifies the custom value event.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.ListItemCreated(Syncfusion.Blazor.DropDowns.ListOptions{`1})">
            <summary>
            Task which specifies the list item created event.
            </summary>
            <param name="listItem">Specifies the list item.</param>
            <returns>ListOptions.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.HighLightSearch(System.String,System.Boolean,Syncfusion.Blazor.DropDowns.FilterType,System.String)">
            <summary>
            Highlight the searched characters on suggested list items.
            </summary>
            <param name="textValue">highlight the list item.</param>
            <param name="ignoreCase">performing the search  text based on casing.</param>
            <param name="filtertype">Determines on which filter type, the highlight text update on the text.</param>
            <param name="highLighText"> Higlighted the char based on hightligh text and this is  optional. If not provide the highlightText, it wil get the filter value.</param>
            <returns>Returns highlight string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfAutoComplete`2.UpdateChildProperties(System.Object)">
            <summary>
            Update the autocomplete fileds.
            </summary>
            <param name="fieldValue">Specifies the field value.</param>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates`1">
            <summary>
            The DropDowns has been provided with several options to customize each list item, group title, header, and footer elements.
            </summary>
            <typeparam name="TItem">Specifies the type of DropDownsTemplates.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates`1.FooterTemplate">
            <summary>
            Accepts the template design and assigns it to the footer container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates`1.HeaderTemplate">
            <summary>
            Accepts the template design and assigns it to the header container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates`1.GroupTemplate">
            <summary>
            Accepts the template design and assigns it to the group headers present in the DropDowns popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates`1.ItemTemplate">
            <summary>
            Accepts the template design and assigns it to each list item present in the popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates`1.NoRecordsTemplate">
            <summary>
            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates`1.ActionFailureTemplate">
            <summary>
            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.Internal.DropDownsTemplates`1.OnInitialized">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.NoRecord`1.IsFaiure">
            <summary>
            IsActionFaiure set to true, then the action failure template is show in popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.NoRecord`1.LocaleKey">
            <summary>
            Get the no record locale key for dropdowns component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.NoRecord`1.FailureLocaleKey">
            <summary>
            Get the action failure locale key for dropdowns component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.NoRecord`1.LocaleValue">
            <summary>
            Get the no record locale value for dropdowns component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.Internal.NoRecord`1.FailureLocaleValue">
            <summary>
            Get the action failure locale value for dropdowns component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.Internal.NoRecord`1.CallStateHasChangedAsync">
            <summary>
            Invoke state change of the component.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.Internal.NoRecord`1.UpdateChildProperties(System.Object)">
             <summary>
             Update the dropdownlist fileds
             </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SfDropDownBase`1">
            <summary>
            The DropDownBase can be created data source and fetch the list of data from data bound component.
            </summary>
            <typeparam name="T">Specifies the type of SfDropDownBase.</typeparam>
            <summary>
            The DropDownBase can be created data source and fetch the list of data from data bound component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.Fields">
            <summary>
            <para>The `Fields` property maps the columns of the data table and binds the data to the component.</para>
            <list type="bullet">
            <item>
            <term>Text</term>
            <description>Maps the text column from data table for each list item.</description>
            </item>
            <item>
            <term>Value</term>
            <description>Maps the value column from data table for each list item.</description>
            </item>
            <item>
            <term>IconCss</term>
            <description>Maps the icon class column from data table for each list item.</description>
            </item>
            <item>
            <term>GroupBy</term>
            <description>Group the list items with it's related items by mapping groupBy field.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.EnablePersistence">
            <summary>
            <para>Enable or disable persisting component's state between page reloads.</para>
            <para>If enabled,  the `Value` state will be persisted.</para>
            <list type="bullet">
            <item>
            <term>Value</term>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ItemTemplate">
            <summary>
            Accepts the template design and assigns it to each list item present in the popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.GroupTemplate">
            <summary>
            Accepts the template design and assigns it to the group headers present in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.NoRecordsTemplate">
            <summary>
            Accepts the template design and assigns it to popup list of component, when no data is available on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ActionFailureTemplate">
            <summary>
            Accepts the template and assigns it to the popup list content of the component, when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.SortOrder">
            <summary>
            <para>Specifies the `SortOrder` to sort the data source.</para>
            <para>The available type of sort orders are.</para>
            <list type="bullet">
            <item>
            <term>None</term>
            <description>The data source is not sorting.</description>
            </item>
            <item>
            <term>Ascending</term>
            <description>The data source is sorting with ascending order.</description>
            </item>
            <item>
            <term>Descending</term>
            <description>The data source is sorting with descending order.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the component allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.DataSource">
            <summary>
            <para>Accepts the list items either through local or remote service and binds it to the component.</para>
            <para>It can be an array of JSON Objects or an instance of `DataManager`.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.Query">
            <summary>
            Accepts the external `Query` that execute along with data processing.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.FilterType">
            <summary>
            Determines on which filter type, the component needs to be considered on search action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.IgnoreCase">
            <summary>
            <para>When set to `false`, consider the `case-sensitive` on performing the search to find suggestions.</para>
            <para>By default, consider the casing.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.IgnoreAccent">
            <summary>
            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ZIndex">
            <summary>
            specifies the z-index value of the component popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.DropDownsEditContext">
            <summary>
            Specifies the edit context of dropdown base.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ListData">
            <summary>
            Specifies the list data.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.MainData">
            <summary>
            Specifies the main data.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ListDataSource">
            <summary>
            Specifies the list data source.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ItemData">
            <summary>
            Specifies the item data.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.MatchItems">
            <summary>
            Specifies the match items.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.IsActionFaiure">
            <summary>
            Specifies whether the action get failed or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.TotalCount">
            <summary>
            Specifies the total count.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ComponentName">
            <summary>
            Specifies the list data.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.Render(System.Collections.Generic.IEnumerable{`0},Syncfusion.Blazor.DropDowns.FieldSettingsModel,Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which render the component with provided datasource , fields and query.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="fields">Specifies the fields.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
            <exlude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.SetListData(System.Collections.Generic.IEnumerable{`0},Syncfusion.Blazor.DropDowns.FieldSettingsModel,Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which sets the list data.
            </summary>
            <param name="dataSource">Specifies the datasource.</param>
            <param name="fields">Specifies the fields.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ActionBegin(System.Collections.Generic.IEnumerable{`0},Syncfusion.Blazor.Data.Query)">
            <summary>
            Task specifies the action begin.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ActionComplete(System.Collections.Generic.IEnumerable{`0},Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which specifies the action complete.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ActionFailure(System.Object)">
            <summary>
            Task which specifies the action failure.
            </summary>
            <param name="args">Specifies the object arguments.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.GetQuery(Syncfusion.Blazor.Data.Query)">
            <summary>
            Methods which gets the query.
            </summary>
            <param name="query">Specifies the query.</param>
            <returns>query.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.SetFields">
            <summary>
            Method which sets the fields.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.SimpleDataExecute(System.Collections.Generic.IEnumerable{`0},Syncfusion.Blazor.Data.Query)">
            <summary>
            Specifies the data execute.
            </summary>
            <param name="data">Specifies the data.</param>
            <param name="query">Specifies the query.</param>
            <returns>Simple data.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.CloneQuery(Syncfusion.Blazor.Data.Query)">
            <summary>
            Method which clones the query.
            </summary>
            <param name="query">Specifies the query.</param>
            <returns>Query.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.OnParametersSetAsync">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.GetDataByText(System.String,System.String)">
            <summary>
            Method which gets data by text.
            </summary>
            <param name="ddlText">Specifies the text value.</param>
            <param name="field">Specifies the field.</param>
            <returns>Type.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.IncrementalSearch(System.String,System.Collections.Generic.IEnumerable{`0},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Method which specifies the incremental search.
            </summary>
            <param name="queryString">Specifies the query string.</param>
            <param name="items">Specifies the items.</param>
            <param name="selectedIndex">Specifies the selectes index.</param>
            <param name="ignoreCase">Specifies the ignore case.</param>
            <returns>Type.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.Search(System.String,System.Collections.Generic.IEnumerable{`0},System.String,System.Boolean)">
            <summary>
            Method which specifies the search action.
            </summary>
            <param name="inputValue">Specifies the input element value.</param>
            <param name="items">Specifies the items.</param>
            <param name="searchType">Specifies the search type.</param>
            <param name="ignoreCase">Specifies whether the case can be ignored or not. </param>
            <returns>Type.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.SetItemValue(System.String,System.Type)">
            <summary>
            Method which set item value.
            </summary>
            <param name="itemValue">Specifies the item value.</param>
            <param name="valueType"></param>
            <returns>Type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.IsSimpleDataType">
            <summary>
            Method speciifes whether the data is simple data type.
            </summary>
            <returns>Bool.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.AddItems(System.Collections.Generic.IEnumerable{`0},System.Nullable{System.Int32})">
            <summary>
            Add new items to the popup list. By default, new items append to the list as the last item, but you can insert based on the index parameter.
            </summary>
            <param name="items">Specifies the items append to the list based on index.</param>
            <param name="itemIndex">Specifies the index to place the newly added item in the popup list.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.AddItemsAsync(System.Collections.Generic.IEnumerable{`0},System.Nullable{System.Int32})">
            <summary>
            Add new items to the popup list. By default, new items append to the list as the last item, but you can insert based on the index parameter.
            </summary>
            <param name="items">Specifies the items append to the list based on index.</param>
            <param name="itemIndex">Specifies the index to place the newly added item in the popup list.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.InsertItem(System.Collections.Generic.IEnumerable{`0},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Method which inserts the item.
            </summary>
            <param name="items">Specifies the items.</param>
            <param name="itemIndex">Specifies the item index.</param>
            <param name="preventInit">Specifies whether it  preventInit or not.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.IsFilter">
            <summary>
            Method specifies whether  filter mode or not.
            </summary>
            <returns>bool.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.RenderItems">
            <summary>
            Task which render the component with provided datasource.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.HighlightSearch(System.String,System.String,System.Boolean,Syncfusion.Blazor.DropDowns.FilterType)">
            <summary>
            Method specifies the higlight search action.
            </summary>
            <param name="liConent">Specifies the list content.</param>
            <param name="searchText">Specifies the search text.</param>
            <param name="ignoreCase">Specifies whether cases can be ignored or not.</param>
            <param name="highlightType">Specifies the highlight type.</param>
            <returns>string.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownBase`1.ListItemCreated(Syncfusion.Blazor.DropDowns.ListOptions{`0})">
            <summary>
            Triggers while the list item get created.
            </summary>
            <param name="listItem">Specifies the list item.</param>
            <returns>ListOptions.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ListOptions`1">
            <summary>
            Specifies the list options.
            </summary>
            <typeparam name="T">Specifies the type of ListOptions.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListOptions`1.Text">
            <summary>
            Specifies the Text property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListOptions`1.Value">
            <summary>
            Specifies the Value property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListOptions`1.GroupBy">
            <summary>
            Specifies the GroupBy  property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListOptions`1.IsHeader">
            <summary>
            Specifies the IsHeader  property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListOptions`1.ShowIcon">
            <summary>
            Specifies the ShowIcon  property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListOptions`1.Items">
            <summary>
            Specifies the Items  property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListOptions`1.CurItemData">
            <summary>
            Specifies the  CurItemData property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListOptions`1.ListClass">
            <summary>
            Specifies the ListClass  property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListOptions`1.IconCss">
            <summary>
            Specifies the IconCss  property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListOptions`1.GroupItems">
            <summary>
            Specifies the GroupItems property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListOptions`1.ListAttribute">
            <summary>
            Specifies the ListAttribute property.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.KeyActions">
            <summary>
            Specifies the key action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.KeyActions.Action">
            <summary>
            Specifies the  action property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.KeyActions.Key">
            <summary>
            Specifies the key.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.KeyActions.Events">
            <summary>
            Specifies the events.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.KeyActions.Type">
            <summary>
            Specifies the type.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DataItems`1">
            <summary>
            Specifies the data items.
            </summary>
            <typeparam name="TVal">Specifies the type of DataItems.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DataItems`1.Text">
            <summary>
            Specifies the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DataItems`1.Value">
            <summary>
            Specifies the value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ComposedItemModel`1">
            <summary>
            common class model for grouped list.
            </summary>
            <typeparam name="T">Specifies the type of ComposedItemModel.</typeparam>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComposedItemModel`1.IsGroupItem">
            <summary>
            Specifies whether it is a group item or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComposedItemModel`1.Data">
            <summary>
            Returns the grouped data items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComposedItemModel`1.Key">
            <summary>
            Returns the grouped key.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComposedItemModel`1.IsHeader">
            <summary>
            Returns the list item is group.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComposedItemModel`1.Id">
            <summary>
            Returns the id of the group list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComposedItemModel`1.Text">
            <summary>
            Returns the text of the grouping field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComposedItemModel`1.Items">
            <summary>
            Returns the grouped items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.EnableRtl">
            <summary>
            Specifies whether the component is in rtl mode or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.ZIndex">
            <summary>
            Specifies the z-index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.PopupWidth">
            <summary>
            Specifies the popup width.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.PopupHeight">
            <summary>
            Specifies the popup height.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.Width">
            <summary>
            Specifies the width of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.AllowFiltering">
            <summary>
            Specifies whether filtering is allowed or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.ModuleName">
            <summary>
            Specifies the module name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.EnableVirtualization">
            <summary>
            Specifies whether the virtualization is enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.DelimiterChar">
            <summary>
            Specifies the delimeter character.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.OverFlowContent">
            <summary>
            Specifies the over flow content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.TotalCountContent">
            <summary>
            Specifies the total count of the content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.DelimValue">
            <summary>
            Specifies the delimeter value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownClientProperties.Mode">
            <summary>
            Specifies the mode.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SelectedData`1">
            <summary>
            Specifies the selected data.
            </summary>
            <typeparam name="TItem">Specifies the type of SelectedData.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectedData`1.Text">
            <summary>
            Specifies the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectedData`1.Value">
            <summary>
            Specifies the value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectedData`1.ItemData">
            <summary>
            Specifies the item data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectedData`1.ChipClass">
            <summary>
            Specifies the chip class.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2">
            <summary>
            Specifies the DropDownList Events of the component.
            </summary>
            <typeparam name="TValue">Specifies the value type.</typeparam>
            <typeparam name="TItem">Specifies the type of ComboBoxEvents.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.OnActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.OnActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.OnActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.OnOpen">
            <summary>
            Triggers when the popup before opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.Blur">
            <summary>
            Triggers when focus moves out from the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.ValueChange">
            <summary>
            <para>Triggers when an item in a popup is selected or when the model value is changed by user.</para>
            <para>Use Change event to configure the cascading DropDownList.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.OnClose">
            <summary>
            Triggers before the popup is closed. If you cancel this event, the popup remains opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.CustomValueSpecifier">
            <summary>
            Triggers on set a custom value to this component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.Filtering">
            <summary>
            Triggers on typing a character in the filter bar when the AllowFiltering is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.Focus">
            <summary>
            Triggers when the component is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.Opened">
            <summary>
            Triggers when the popup opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.Closed">
            <summary>
            Triggers after the popup has been closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.OnValueSelect">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.ComboBoxEvents`2.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings">
            <summary>
            The Fields property maps the columns of the data table and binds the data to the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings.GroupBy">
            <summary>
            Group the list items with it's related items by mapping groupBy field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the list element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings.IconCss">
            <summary>
            Maps the icon class column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings.Text">
            <summary>
            Maps the text column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings.Value">
            <summary>
            Maps the value column from data table for each list item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.ComboBoxFieldSettings.OnParametersSet">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ComboBoxTemplates`1">
            <summary>
            The ComboBox has been provided with several options to customize each list item, group title, header, and footer elements.
            </summary>
            <typeparam name="TItem">Specifies the type of ComboBoxTemplates.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SfComboBox`2">
            <summary>
            The ComboBox component allows the user to type a value or choose an option from the list of predefined options.
            </summary>
            <summary>
            The ComboBox component allows the user to type a value or choose an option from the list of predefined options.
            </summary>
            <typeparam name="TValue">Specifies the value type.</typeparam>
            <typeparam name="TItem">Specifies the type of SfComboBox.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfComboBox`2.AllowCustom">
            <summary>
            Specifies whether the component allows user defined value which does not exist in data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfComboBox`2.Autofill">
            <summary>
            Specifies whether suggest a first matched item in input when searching. No action happens when no matches found.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfComboBox`2.ShowClearButton">
            <summary>
            <para>Specifies whether to show or hide the clear button.</para>
            <para>When the clear button is clicked, `Value`, `Text`, and `Index` properties are reset to null.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfComboBox`2.ValidateOnInput">
            <summary>
            Specifies a boolean value that indicates whether the component validates the input or not.
            </summary>
            <value>
            <c>true</c>, If the ValidateOnInput is enabled for form validation, then the model value will be updated on entering the value to the input. otherwise, <b>false</b>.The default value is <c>false</c>.
            </value>
            <remarks>
            This property is used to validate the form on typing into the input and updating the model value. The ValueChange event will be fired after the component lost its focus.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfComboBox`2.ComboBoxParent">
            <summary>
            Parent component of ComboBox.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfComboBox`2.ROOT">
            <summary>
            Specifies the root class of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfComboBox`2.ComponentName">
            <summary>
            Specifies the component name.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.IsFilter">
            <summary>
            Task which specifies whether filter action is allowed or not.
            </summary>
            <returns>bool.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.UpdateMainData">
            <summary>
            Method which updates main data.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.InvokeBeforeOpen">
            <summary>
            Triggers before popup get opened.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.InvokeAfterClosed">
            <summary>
            Triggers after the popup get closed.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Triggers after the component was rendered.
            </summary>
            <param name="firstRender">true if the component rendered for the first time.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.UpdateAriaAttributes">
            <summary>
            Method which update the aria attributes.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.FocusHandler(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
            <summary>
            Triggers when the component get focused in.
            </summary>
            <param name="args">Specifies the FocusEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.InvokeBlur">
            <summary>
            Triggers when component get focused out.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.OnChangeHandler(Microsoft.AspNetCore.Components.ChangeEventArgs)">
            <summary>
            Triggers when value get changed.
            </summary>
            <param name="args">Specifies ChangeEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.FocusOutHandler(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
            <summary>
            Triggers when the component get focused out.
            </summary>
            <param name="args">Specifies the FocusEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.FilterInputHandler(Microsoft.AspNetCore.Components.ChangeEventArgs)">
            <summary>
            Triggers when any value provided to filter input.
            </summary>
            <param name="args">Specifies the ChangeEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.InvokePopupEvents(System.Boolean)">
            <summary>
            Invokes the popup event.
            </summary>
            <param name="isOpen">True if the popup is in open state otherwise false.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.InvokeSelectEvent(`1,System.EventArgs)">
            <summary>
            Triggers when item get selected.
            </summary>
            <param name="item">Specifies the item.</param>
            <param name="args">Specifies the EventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.InvokeChangeEvent(System.EventArgs)">
            <summary>
            Triggers when value get changed.
            </summary>
            <param name="args">Specifies EventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.UpdateValue">
            <summary>
            Task which updates the value.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.SetOldValue(System.Object,System.Boolean)">
            <summary>
            Task which sets the old value.
            </summary>
            <param name="ddlValue">Specifies the DropDownList value.</param>
            <param name="isValueChanged"></param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.UpdateAutoFillOnDown(`1)">
            <summary>
            Task which update auto fill on down action.
            </summary>
            <param name="curItem">Specifies the current item.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.SearchList(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Task which specifies the search list.
            </summary>
            <param name="args">Specifies the KeyboardEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.IncrementSearch">
            <summary>
            Task which incrment the search.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.InlineSearch">
            <summary>
            Task which performs the in line search.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.InvokeCustomValueEvent">
            <summary>
            Task which specifies the custom value event.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.CustomValue(System.Boolean)">
            <summary>
            Task which specifies the custom value.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.ActionBegin(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which pecifies the action begin event.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.ActionFailure(System.Object)">
            <summary>
            Task which specifies the action failure event.
            </summary>
            <param name="args">Specifies the object arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.ActionComplete(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which specifies the action complete event.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfComboBox`2.UpdateChildProperties(System.Object)">
            <summary>
            Update the combobox fileds.
            </summary>
            <param name="fieldValue">Specifies the field value.</param>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DropDownListEvents`2">
            <summary>
            Specifies the DropDownList Events of the component.
            </summary>
            <typeparam name="TValue">Specifies the value type.</typeparam>
            <typeparam name="TItem">Specifies the type of SfDropDownList.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.BaseParent">
            <summary>
            Specifies the base parent of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnOpen">
            <summary>
            Triggers when the popup before opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.Blur">
            <summary>
            Triggers when focus moves out from the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.ValueChange">
            <summary>
            <para>Triggers when an item in a popup is selected or when the model value is changed by user.</para>
            <para>Use Change event to configure the cascading DropDownList.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnClose">
            <summary>
            Triggers before the popup is closed. If you cancel this event, the popup remains opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.Filtering">
            <summary>
            Triggers on typing a character in the filter bar when the AllowFiltering is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.Focus">
            <summary>
            Triggers when the component is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.Opened">
            <summary>
            Triggers when the popup opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.Closed">
            <summary>
            Triggers after the popup has been closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnValueSelect">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.DropDownListEvents`2.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DropDownListFieldSettings">
            <summary>
            The Fields property maps the columns of the data table and binds the data to the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListFieldSettings.GroupBy">
            <summary>
            Group the list items with it's related items by mapping groupBy field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListFieldSettings.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the list element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListFieldSettings.IconCss">
            <summary>
            Maps the icon class column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListFieldSettings.Text">
            <summary>
            Maps the text column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListFieldSettings.Value">
            <summary>
            Maps the value column from data table for each list item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.DropDownListFieldSettings.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.DropDownListFieldSettings.OnParametersSet">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.DropDownListFieldSettings.PropertyParametersSet">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DropDownListTemplates`1">
            <summary>
            The DropDownList has been provided with several options to customize each list item, group title, selected value, header, and footer elements.
            </summary>
            <typeparam name="TItem">Specifies the type of DropDownListTemplates.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListTemplates`1.ValueTemplate">
            <summary>
            Accepts the template design and assigns it to the selected list item in the input element of the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.DropDownListTemplates`1.OnInitialized">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SfDropDownList`2">
            <summary>
            The DropDownList component contains a list of predefined values from which a single value can be chosen.
            </summary>
            <summary>
            The DropDownList component contains a list of predefined values from which a single value can be chosen.
            </summary>
            <summary>
            The DropDownList component contains a list of predefined values from which a single value can be chosen.
            </summary>
            <typeparam name="TValue">Specifies the value type.</typeparam>
            <typeparam name="TItem">Specifies the type of SfDropDownList.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ID">
            <summary>
            Specifies the id of the DropDownList component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ValueExpression">
            <summary>
            Specifies the expression for defining the value of the bound.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.AllowFiltering">
            <summary>
            <para>When AllowFiltering is set to true, show the filter bar (search box) of the component.</para>
            <para>The filter action retrieves matched items through the `Filtering` event based on the characters typed in the search TextBox.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the DropDownList. One or more custom CSS classes can be added to a DropDownList.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FilterBarPlaceholder">
            <summary>
            Accepts the value to be displayed as a watermark text on the filter bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the DropDownList that the placeholder text floats above the DropDownList based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the DropDownList when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the DropDownList.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the DropDownList after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FooterTemplate">
            <summary>
            Accepts the template design and assigns it to the footer container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.HeaderTemplate">
            <summary>
            Accepts the template design and assigns it to the header container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the root element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Index">
            <summary>
            Gets or sets the index of the selected item in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IndexChanged">
            <summary>
            Specifies the callback to trigger when the index changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in DropDownList. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PopupHeight">
            <summary>
            Specifies the height of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PopupWidth">
            <summary>
            Specifies the width of the popup list. By default, the popup width sets based on the width of
            the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Readonly">
            <summary>
            Specifies the boolean value whether the DropDownList allows the user to change the value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ShowClearButton">
            <summary>
            <para>Specifies whether to show or hide the clear button.</para>
            <para>When the clear button is clicked, `Value`, `Text`, and `Index` properties are reset to null.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.EnableVirtualization">
            <summary>
            The Virtual Scrolling feature is used to display a large amount of data that you require without buffering the entire load of a huge database records in the DropDowns, that is, when scrolling, the datamanager request is sent to fetch some amount of data from the server dynamically.
            To achieve this scenario with DropDowns, set the EnableVirtualization to true.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ItemsCount">
            <summary>
            The data can be fetched in popup based on ItemsCount, when enabled the EnableVirtualization.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Value">
            <summary>
            Gets or sets the value of the selected item in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ValueChanged">
            <summary>
            Specifies the callback to trigger when the value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ValueTemplate">
            <summary>
            Accepts the template design and assigns it to the selected list item in the input element of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Width">
            <summary>
            <para>Specifies the width of the component. By default, the component width sets based on the width of
            its parent container.</para>
            <para>You can also set the width in pixel values.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.TabIndex">
            <summary>
            Specifies the tab order of the DropDownList component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnChange">
            <summary>
            Triggers when the content of input has changed and gets focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnInput">
            <summary>
            Triggers each time when the value of input has changed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnBlur">
            <summary>
            Triggers when the input loses the focus.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnFocus">
            <summary>
            Triggers when the input gets focus.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.DropDownListParent">
            <summary>
            Parent component of DropDownList.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Clear">
            <summary>
            Allows you to clear the selected values from the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ClearAsync">
            <summary>
            Allows you to clear the selected values from the component.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FocusIn">
            <summary>
            Sets the focus to the DropDownList component for interaction.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FocusAsync">
            <summary>
            Sets the focus to the DropDownList component for interaction.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FocusOut">
            <summary>
            Remove the focus from the DropDownList component, if the component is in focus state.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FocusOutAsync">
            <summary>
            Remove the focus from the DropDownList component, if the component is in focus state.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.GetDataByValue(`0)">
            <summary>
            Gets the data Object that matches the given value.
            </summary>
            <param name="ddlValue">Specifies the DropDownList value.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.GetItemsAsync">
            <summary>
            Gets all the list items bound on this component.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.GetItems">
            <summary>
            Gets all the list items bound on this component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.HideSpinnerAsync">
            <summary>
            Hides the spinner loader.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.HideSpinner">
            <summary>
            Hides the spinner loader.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ShowSpinnerAsync">
            <summary>
            Shows the spinner loader.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ShowSpinner">
            <summary>
            Shows the spinner loader.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Hide">
            <summary>
            Hides the DropDownList popup.
            </summary>
            <exclude/>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.HidePopupAsync">
            <summary>
            Hides the DropDownList popup.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ShowPopupAsync">
            <summary>
            Opens the popup that displays the list of items.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ClosePopup">
            <summary>
            Invoke the before the popup close.
            </summary>
            <exclude/>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.KeyActionHandler(Syncfusion.Blazor.DropDowns.KeyActions)">
            <summary>
            Invoke the key action handler.
            </summary>
            <param name="args">Specifies KeyActions arguments.</param>
            <exclude/>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.VirtualScrollHandler">
            <summary>
            Invoke the scroll handler.
            </summary>
            <exclude/>
            <returns>Task.</returns>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FALSE">
            <summary>
            Specifies the string false.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.TRUE">
            <summary>
            Specifies the string true.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.NO_DATA">
            <summary>
            Specifies the root class of base component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.POPUP_CONTENT">
            <summary>
            specifies the popup content.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.GROUP_BY">
            <summary>
            specifies the group by class.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.DROP_DOWN_ICON">
            <summary>
            specifies the dropdown icon class.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.DDL_HEADER">
            <summary>
            specifies the dropdown header.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.DDL_FOOTER">
            <summary>
            specifies the dropdown footer.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ARIA_LIVE">
            <summary>
            specifies the aria-live class.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ASSERTIVE">
            <summary>
            specifies the assertive string.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ARIA_HAS_POPUP">
            <summary>
            specifies the aria-has-popup class.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ARIA_ACTIVE_DESCENDANT">
            <summary>
            specifies the aria-activedescendant class.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.NULL_VALUE">
            <summary>
            specifies the null text.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ARIA_OWN">
            <summary>
            specifies the aria-own class.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OPTIONS">
            <summary>
            specifies the options text.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ROLE">
            <summary>
            specifies the name of role attribute.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.LIST_BOX">
            <summary>
            specifies the listbox text.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.AUTO_CORRECT">
            <summary>
            specifies the name of autocorrect attribute.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OFF">
            <summary>
            specifies the off text.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.SPELL_CHECK">
            <summary>
            specifies the spellcheck attribute.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.AUTO_COMPLETE">
            <summary>
            specifies the name of autocomplete attribute.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.AUTO_CAPITAL">
            <summary>
            specifies the name of autocapitalize attribute.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ARIA_EXPANDED">
            <summary>
            specifies the name of aria-expanded attribute.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.SELECTED">
            <summary>
            specifies the selected class.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ITEM_FOCUS">
            <summary>
            specifies the item focus class.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.InputBaseObj">
            <summary>
            Specifies the SfInputBase component object.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FilterinputObj">
            <summary>
            Specifies the SfInputBase component object as filter input.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.RootClass">
            <summary>
            Specifies the root class of the component .
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ContainerClass">
            <summary>
            Specifies the container class of the component .
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.BackIcon">
            <summary>
            Specifies the back icon.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.DropdownValue">
            <summary>
            Specifies the dropdown value.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ClearBtnStopPropagation">
            <summary>
            Specifies the clear button stop propogation.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FilterClearBtnStopPropagation">
            <summary>
            Specifies the filter clear button stop propogation.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PreventContainer">
            <summary>
            Specifies whether it is a prevent container or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsDevice">
            <summary>
            Specifies whether it is a device or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ShowPopupList">
            <summary>
            Specifies whether to show popup list or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PopupElement">
            <summary>
            Specifies the popup element reference.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PopupHolderEle">
            <summary>
            Specifies the popup holder element.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PopupContainer">
            <summary>
            Specifies the popup container.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsListRender">
            <summary>
            Specifies whether list is going to render or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsListRendered">
            <summary>
            Specifies whether list is rendered or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsDropDownClick">
            <summary>
            Specifies whether dropdown is clicked or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsValidKey">
            <summary>
            Specifies whether it is valid key or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsTyped">
            <summary>
            Specifies whether a key is typed or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsFilterClearClicked">
            <summary>
            Specifies whether the filter input clear icon is clicked or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsCustomFilter">
            <summary>
            Specifies whether it is custom filtering or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ActiveIndex">
            <summary>
            Specifies the active index of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsInternalFocus">
            <summary>
            Specifies whether it is a internal focus or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ContainerAttr">
            <summary>
            Specifies the container attribute.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PreviousValue">
            <summary>
            Specifies the previous value of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PreviousItemData">
            <summary>
            Specifies the previous item data.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.TypedString">
            <summary>
            Specifies the typed string.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.BeforePopupOpen">
            <summary>
            True before the popup get openend , otherwise  false.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PreventAutoFill">
            <summary>
            Specifies whether to prevent autofill or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FocusedData">
            <summary>
            Specifies the focused data.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.VirtualSpinnerObj">
            <summary>
            Specifies the virtual spinner object.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ComponentName">
            <summary>
            Specifies the component name.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PreventIconHandler">
            <summary>
            Specifies whether it is prevent icon handler.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PopupContent">
            <summary>
            Specifies the popup content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.NoDataContent">
            <summary>
            Specifies the NoDataContent.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.DropdownIcon">
            <summary>
            Specifies the dropdown icon.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ROOT">
            <summary>
            Specifies the root class of the component.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.CallStateHasChangedAsync">
            <summary>
            Invoke state change of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PreRender">
            <summary>
            Triggers before the component get rendered.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnParametersSetAsync">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <param name="firstRender">true if the component rendered for the first time.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.SetOldValue(System.Object,System.Boolean)">
            <summary>
            Task which sets the old value.
            </summary>
            <param name="ddlValue">Specifies the DropDownList value.</param>
            <param name="isValueChanged"></param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateMainData">
            <summary>
            Task which update main data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.GetScrollValue">
            <summary>
            Task which gets the scroll value.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateValue">
            <summary>
            Task which updates the value.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateValueSelection(`1,System.Boolean,System.Boolean)">
            <summary>
            Task which updates the value selection.
            </summary>
            <param name="item">Specifies the item.</param>
            <param name="isMutable">Specifies whether it is mutable or not.</param>
            <param name="isValidateInput">Specifies whether it is validate on input event.</param>
            <returns></returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.SetRTL">
            <summary>
            Method which set RTL to the component.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.SetReadOnly">
            <summary>
            Add the readonly class to the container element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.SetCssClass">
            <summary>
            Method which set css class to the component.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateAriaAttributes">
            <summary>
            Method which update the aria attributes.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.DependencyScripts">
            <summary>
            Method which updates the dependency scripts.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FocusOutHandler(Microsoft.AspNetCore.Components.Web.FocusEventArgs,System.Boolean)">
            <summary>
            Triggers when the component get focused out.
            </summary>
            <param name="args">Specifies the FocusEventArgs arguments.</param>
            <param name="isFilterinput">Specifies whether it is a filter input or not.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.DropDownClick">
            <summary>
            Triggers while clicking the dropdown icon.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.HidePopup">
            <summary>
            Task which used to hide popup.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OpenEventArgs">
            <summary>
            Specifies the open event.
            </summary>
            <returns>PopupEventArgs arguments.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.InvokePopupEvents(System.Boolean)">
            <summary>
            Invokes the popup event.
            </summary>
            <param name="isOpen">True if the popup is in open state otherwise false.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.InvokeClearBtnEvent(System.EventArgs,System.Boolean)">
            <summary>
            Triggered when clear button is clicked.
            </summary>
            <param name="args">Specifies the EventArgs arguments.</param>
            <param name="isFilterClear">Specifies whether it is filterinput clear icon or not.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FilterClear">
            <summary>
            Triggers when filter clear icon is clicked.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ClearAll(System.EventArgs)">
            <summary>
            Task which used to clear all the items.
            </summary>
            <param name="args">Specifies the EventArgs arguments.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FilterInputHandler(Microsoft.AspNetCore.Components.ChangeEventArgs)">
            <summary>
            Triggers when any value provided to filter input.
            </summary>
            <param name="args">Specifies the ChangeEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.PasteHandler">
            <summary>
            Triggers when paste action is performes.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnFilterUp(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Specifies the keyup event of filter event.
            </summary>
            <param name="args">Specifies the KeyboardEventArgs arguments.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.SearchList(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Task which specifies the search list.
            </summary>
            <param name="args">Specifies the KeyboardEventArgs arguments.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FilteringAction(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query,Syncfusion.Blazor.DropDowns.FieldSettingsModel)">
            <summary>
            Task which specifies the filtering action.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <param name="fields">Specifies the fields.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.FilterAsync(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query,Syncfusion.Blazor.DropDowns.FieldSettingsModel)">
            <summary>
            To filter the data from given data source by using query.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <param name="fields">Specifies the fields.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.Filter(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query,Syncfusion.Blazor.DropDowns.FieldSettingsModel)">
            <summary>
            To filter the data from given data source by using query.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <param name="fields">Specifies the fields.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.RefreshPopup">
            <summary>
            Task used to refresh the popup list items.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.GetQuery(Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which gets the query.
            </summary>
            <param name="query">Specifies the query.</param>
            <returns>Query.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsFilter">
            <summary>
            Task which specifies whether filter action is allowed or not.
            </summary>
            <returns>bool.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.InvokeBeforeOpen">
            <summary>
            Triggers before popup get opened.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.InvokeAfterClosed">
            <summary>
            Triggers after the popup get closed.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.CreatePopup">
            <summary>
            Opens the popup that displays the list of items.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ShowPopup">
            <summary>
            Opens the popup that displays the list of items.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdatePopupState">
            <summary>
            Method which updates the popup state.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateParentClass(System.String,System.String)">
            <summary>
            Update the parent component class to the element.
            </summary>
            <param name="rootClass">Update the class to input element.</param>
            <param name="containerClass">Update the class to container element.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateChildProperties(System.Object)">
            <summary>
            Update the dropdownlist fileds.
            </summary>
            <param name="fieldValue">Specifies the field value.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateInputValue(System.String)">
            <summary>
            Task updates the input value.
            </summary>
            <param name="inputValue">Specifies the input value.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnMouseClick(Syncfusion.Blazor.DropDowns.ListOptions{`1},Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Triggers when mouse click is performed.
            </summary>
            <param name="args">Specifies the ListOptions arguments.</param>
            <param name="eventArgs">Specifies the MouseEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.InvokeSelectEvent(`1,System.EventArgs)">
            <summary>
            Triggers when item get selected.
            </summary>
            <param name="item">Specifies the item.</param>
            <param name="args">Specifies the EventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateSelectedItem(`1,System.EventArgs,Syncfusion.Blazor.DropDowns.KeyActions)">
            <summary>
            Task which updates the selected item.
            </summary>
            <param name="item">Specifies the item.</param>
            <param name="args">Specifies the EventArgs arguments.</param>
            <param name="keyArgs">Specifies the KeyActions arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateSelectItem(`1,System.EventArgs,Syncfusion.Blazor.DropDowns.KeyActions)">
            <summary>
            Task which updates the selected item.
            </summary>
            <param name="item">Specifies the item.</param>
            <param name="args">Specifies the EventArgs arguments.</param>
            <param name="keyArgs">Specifies the KeyActions arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateListSelection(`1,System.String)">
            <summary>
            Task which update list selection.
            </summary>
            <param name="item">Specifies the item.</param>
            <param name="className">Specifies the class name.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.SetValue(Syncfusion.Blazor.DropDowns.DataItems{`0})">
            <summary>
            Task which sets the value.
            </summary>
            <param name="items">Specifies the data item.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.InvokeChangeEvent(System.EventArgs)">
            <summary>
            Triggers when value get changed.
            </summary>
            <param name="args">Specifies EventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnChangeEvent(System.EventArgs)">
            <summary>
            Triggers when value get changed.
            </summary>
            <param name="args">Specifies EventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.GetItemData(`1)">
            <summary>
            Method which gets item data.
            </summary>
            <param name="item">Specifies the item.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ActionBegin(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which performs the action begin event.
            </summary>
            <param name="dataSource">Specifies the datasource.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ActionComplete(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which performs the action complete event.
            </summary>
            <param name="dataSource">Specifies the datasource.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.RenderEqualItems">
            <summary>
            Update the custom value to the list
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.ActionFailure(System.Object)">
            <summary>
            Task which performs the action failure event.
            </summary>
            <param name="args">Specifies the object arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.IsEditTextBox">
            <summary>
            Specifies whether it is edit textbox.
            </summary>
            <returns>bool.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.CustomValue(System.Boolean)">
            <summary>
            Task which specifies the custom value.
            </summary>
            <param name="isValidateInput">Specifies whether it is validate on input event.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateAutoFillOnDown(`1)">
            <summary>
            Task which update auto fill on down action.
            </summary>
            <param name="curItem">Specifies the current item.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateFocusItem(`1)">
            <summary>
            Task which update the focus item.
            </summary>
            <param name="focusItem">Specifies the focus item.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.UpdateValidateClass">
            <summary>
            Update the validation class to the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfDropDownList`2.OnSearch(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Triggers when search keypress event is performed.
            </summary>
            <param name="args">Specifies the KeyboardEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.FilterType">
            <summary>
            Determines on which filter type, the component needs to be considered on search action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.FilterType.StartsWith">
            <summary>
            Defines the StartsWith filter type.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.FilterType.EndsWith">
            <summary>
            Defines the EndsWith filter type.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.FilterType.Contains">
            <summary>
            Defines the Contains filter type.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.VisualMode">
            <summary>
            Configures visibility mode for component interaction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.VisualMode.Default">
            <summary>
            Defines the Default visual mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.VisualMode.Delimiter">
            <summary>
            Defines the Delimiter visual mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.VisualMode.Box">
            <summary>
            Defines the Box visual mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.VisualMode.CheckBox">
            <summary>
            Defines the CheckBox visual mode.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SortOrder">
            <summary>
            Specifies the SortOrder to sort the data source.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SortOrder.None">
            <summary>
            Defines the None sort order.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SortOrder.Ascending">
            <summary>
            Defines the Ascending sort order.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SortOrder.Descending">
            <summary>
            Defines the Descending sort order.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.HightLightType">
            <summary>
             Highlight the searched characters on suggested list items.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.HightLightType.Contains">
            <summary>
            Defines the Contains highlight type.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.HightLightType.StartsWith">
            <summary>
            Defines the StartsWith highlight type.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.HightLightType.EndsWith">
            <summary>
            Defines the EndsWith highlight type.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SearchType">
            <summary>
            Defines the SearchType.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SearchType.StartsWith">
            <summary>
            Defines the StartsWith search type.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SearchType.Equal">
            <summary>
            Defines the Equal search type.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.CheckBoxPosition">
            <summary>
            Defines the checkbox position of List Box.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.CheckBoxPosition.Left">
            <summary>
            Defines the Left check box position.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.CheckBoxPosition.Right">
            <summary>
            Defines the Right check box position.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SelectionMode">
            <summary>
            Defines the selection mode of List Box.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SelectionMode.Multiple">
            <summary>
            Defines the Multiple selection mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.SelectionMode.Single">
            <summary>
            Defines the Single selection mode.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ToolBarPosition">
            <summary>
            Defines the toolbar position of List Box.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.ToolBarPosition.Left">
            <summary>
            Defines the Left tool bar position.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DropDowns.ToolBarPosition.Right">
            <summary>
            Defines the Right tool bar position.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.AutoCompleteModel">
            <summary>
            Interface for a class AutoComplete.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.ActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.ActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.ActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.BeforeOpen">
            <summary>
            Triggers when the popup before opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Blur">
            <summary>
            Triggers when focus moves out from the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Change">
            <summary>
            <para>Triggers when an item in a popup is selected or when the model value is changed by user.</para>
            <para>Use Change event to configure the cascading AutoComplete.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Close">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.CustomValueSpecifier">
            <summary>
            Triggers on set a custom value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Filtering">
            <summary>
            Triggers on typing a character in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Focus">
            <summary>
            Triggers when the component is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Open">
            <summary>
            Triggers when the popup opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Select">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.AllowCustom">
            <summary>
            Specifies whether the component allows user defined value which does not exist in data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Autofill">
            <summary>
            Specifies whether suggest a first matched item in input when searching. No action happens when no matches found.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.FilterType">
            <summary>
            Determines on which filter type, the component needs to be considered on search action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.Highlight">
            <summary>
            When set to ‘true’, highlight the searched characters on suggested list items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.MinLength">
            <summary>
            Allows you to set the minimum search character length,
            the search action will perform after typed minimum characters.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.ShowClearButton">
            <summary>
            <para>Specifies whether to show or hide the clear button.</para>
            <para>When the clear button is clicked, `Value`, `Text`, and `Index` properties are reset to null.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.ShowPopupButton">
            <summary>
            Allows you to either show or hide the popup button on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.AutoCompleteModel.SuggestionCount">
            <summary>
            Supports the specified number of list items on the suggestion popup.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.CustomValueSpecifierEventArgs`1">
            <summary>
            Defines the custom value specifier event.
            </summary>
            <typeparam name="T">Specifies the type of CustomValueSpecifierEventArgs.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.CustomValueSpecifierEventArgs`1.Item">
            <summary>
            Sets the text custom format data for set a `Value` and `Text`.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.CustomValueSpecifierEventArgs`1.Text">
            <summary>
            Gets the typed custom text to make a own text format and assign it to `item` argument.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ComboBoxModel">
            <summary>
            Interface for a class ComboBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.ActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.ActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.ActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.BeforeOpen">
            <summary>
            Triggers when the popup before opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Blur">
            <summary>
            Triggers when focus moves out from the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Change">
            <summary>
            <para>Triggers when an item in a popup is selected or when the model value is changed by user.</para>
            <para>Use Change event to configure the cascading ComboBox.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Close">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.CustomValueSpecifier">
            <summary>
            Triggers on set a custom value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Filtering">
            <summary>
            Triggers on typing a character in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Focus">
            <summary>
            Triggers when the component is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Open">
            <summary>
            Triggers when the popup opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Select">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.AllowCustom">
            <summary>
            Specifies whether the component allows user defined value which does not exist in data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.Autofill">
            <summary>
            Specifies whether suggest a first matched item in input when searching. No action happens when no matches found.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ComboBoxModel.ShowClearButton">
            <summary>
            <para>Specifies whether to show or hide the clear button.</para>
            <para>When the clear button is clicked, `Value`, `Text`, and `Index` properties are reset to null.</para>
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ActionBeginEventArgs">
            <summary>
            Defines the action begin event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionBeginEventArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionBeginEventArgs.EventName">
            <summary>
             Specify the Event Name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionBeginEventArgs.Query">
            <summary>
            Specify the query to begin the data.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs`1">
            <summary>
            Defines the action complete event.
            </summary>
            <typeparam name="TItem">Specifies the ActionCompleteEventArgs.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs`1.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs`1.Count">
            <summary>
            Return the total number for records.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs`1.EventName">
            <summary>
            Specify the Event Name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs`1.Query">
            <summary>
            Specify the query to complete the data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs`1.Result">
            <summary>
            Returns the selected items as JSON Object from the data source.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs">
            <summary>
            Specifies the action complete event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Actual">
            <summary>
            Return the actual records.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Aggregates">
            <summary>
            Return the aggregates.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Count">
            <summary>
            Return the total number for records.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.EventName">
            <summary>
            Specify the Event Name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Items">
            <summary>
            Return Items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Query">
            <summary>
            Specify the query to complete the data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Request">
            <summary>
            Return the request type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Result">
            <summary>
            Returns the selected items as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.VirtualSelectRecords">
            <summary>
            Return the virtualSelectRecords.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ActionCompleteEventArgs.Xhr">
            <summary>
            Return XMLHttpRequest.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.BeforeOpenEventArgs">
            <summary>
            Specifies the before open event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.BeforeOpenEventArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ClosedEventArgs">
            <summary>
            Specifies the closed event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DataBoundEventArgs">
            <summary>
            Specifies the data bound event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DataBoundEventArgs.E">
            <summary>
            Return the bounded objects.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DataBoundEventArgs.Items">
            <summary>
            Returns the selected items as JSON Object from the data source.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DropDownBaseClassList">
            <summary>
            Defines the dropdown base class list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseClassList.Content">
            <summary>
            Specifies the content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseClassList.Disabled">
            <summary>
            Specifies the disabled property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseClassList.FixedHead">
            <summary>
            Specifies the fixedHead property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseClassList.Focus">
            <summary>
            Specifies the focus property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseClassList.Group">
            <summary>
            Specifies the group property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseClassList.Grouping">
            <summary>
            Specifies the grouping property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseClassList.Hover">
            <summary>
            Specifies the hover property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseClassList.Li">
            <summary>
            Specifies the list property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseClassList.NoData">
            <summary>
            Specifies the NoData property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseClassList.Root">
            <summary>
            Specifies the root property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseClassList.Rtl">
            <summary>
            Specifies the Rtl property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseClassList.Selected">
            <summary>
            Specifies the selected property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.FilteringEventArgs">
            <summary>
            Specifies the filtering event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FilteringEventArgs.BaseEventArgs">
            <summary>
            Gets the `keyup` event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FilteringEventArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FilteringEventArgs.PreventDefaultAction">
            <summary>
            To prevent the internal filtering action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FilteringEventArgs.Text">
            <summary>
            Search text value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FilteringEventArgs.UpdateData">
            <summary>
            Specifies the UpdateData property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.FocusEventArgs">
            <summary>
            Specifies the focus event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FocusEventArgs.Event">
            <summary>
            Specifies the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FocusEventArgs.IsInteracted">
            <summary>
            Specifies the focus interacted.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.PopupEventArgs">
            <summary>
            Defines the popup event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.PopupEventArgs.Animation">
            <summary>
            Specifies the animation Object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.PopupEventArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.PopupEventArgs.Popup">
            <summary>
            Specifies the popuo Object.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ResultData">
            <summary>
            Defines the result data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ResultData.Result">
            <summary>
            To return the JSON result.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SelectEventArgs`1">
            <summary>
            Defines the select event.
            </summary>
            <typeparam name="T">Specifies the type of SelectEventArgs.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs`1.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs`1.E">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs`1.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs`1.Item">
            <summary>
            Returns the selected list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs`1.ItemData">
            <summary>
            Returns the selected item as JSON Object from the data source.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SelectEventArgs">
            <summary>
            Defines the select event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs.E">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs.Item">
            <summary>
            Returns the selected list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectEventArgs.ItemData">
            <summary>
            Returns the selected item as JSON Object from the data source.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DropDownBaseModel">
            <summary>
            Interface for a class DropDownBase.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseModel.ActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseModel.ActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseModel.ActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseModel.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseModel.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseModel.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseModel.Select">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownBaseModel.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.FieldSettingsModel">
            <summary>
            Interface for a class FieldSettings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FieldSettingsModel.GroupBy">
            <summary>
            Group the list items with it's related items by mapping GroupBy field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FieldSettingsModel.HtmlAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FieldSettingsModel.IconCss">
            <summary>
            Maps the icon class column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FieldSettingsModel.Text">
            <summary>
            Maps the text column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.FieldSettingsModel.Value">
            <summary>
            Maps the value column from data table for each list item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2">
            <summary>
            Defines the change event.
            </summary>
            <typeparam name="TValue">Specifies the type of ChangeEventArgs.</typeparam>
            <typeparam name="TItem">Specifies the typr of value.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.E">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.Element">
            <summary>
            Returns the root element of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.Item">
            <summary>
            Returns the selected list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.ItemData">
            <summary>
            Returns the selected item as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.PreviousItem">
            <summary>
            Returns the previous selected list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.PreviousItemData">
            <summary>
            Returns the previous selected item as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`2.Value">
            <summary>
            Returns the selected value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1">
            <summary>
            Specifies the change event.
            </summary>
            <typeparam name="T">Specifies the type of ChangeEventArgs.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.E">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.Element">
            <summary>
            Returns the root element of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.Item">
            <summary>
            Returns the selected list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.ItemData">
            <summary>
            Returns the selected item as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.PreviousItem">
            <summary>
            Returns the previous selected list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.PreviousItemData">
            <summary>
            Returns the previous selected item as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChangeEventArgs`1.Value">
            <summary>
            Returns the selected value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DropDownListClassList">
            <summary>
            Defines the  DropDownList class list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.BackIcon">
            <summary>
            Specifies the back icon.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Base">
            <summary>
            Specifies the base.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.ClearIcon">
            <summary>
            Specifies the clear icon.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.ClearIconHide">
            <summary>
            specifies the clear icon hide class.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Device">
            <summary>
            Specifies the device.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Disable">
            <summary>
            Specifies the disable property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.DisableIcon">
            <summary>
            Specifies the disable icon.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.FilterBarClearIcon">
            <summary>
            SPecifies the filter bar clear icon.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.FilterInput">
            <summary>
            Specfies the filter input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.FilterParent">
            <summary>
            Specifies the filter parent.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Focus">
            <summary>
            Specifies the focus property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Footer">
            <summary>
            Specifies the footer property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Header">
            <summary>
            Specifies the header property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.HiddenElement">
            <summary>
            Specifies the hidden element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Hover">
            <summary>
            Specifies the hover property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Icon">
            <summary>
            Specifies the icon property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.IconAnimation">
            <summary>
            Specifies the icon animation property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Input">
            <summary>
            Specifies the input property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.InputFocus">
            <summary>
            Specifies the input focus property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Li">
            <summary>
            Specifies the list property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.MobileFilter">
            <summary>
            Specifies the mobile filter property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.PopupFullScreen">
            <summary>
            Specifies the popup full screen property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Root">
            <summary>
            Specifies the root property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Rtl">
            <summary>
            Specifies the RTL property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Selected">
            <summary>
            Specifies the selected property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListClassList.Value">
            <summary>
            Specifies the value property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DropDownListModel`2">
            <summary>
            Interface for a class DropDownList.
            </summary>
            <typeparam name="TValue">Specifies the type of DropDownListModel.</typeparam>
            <typeparam name="TItem">Specifies the typr of value.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.ActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.ActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.ActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.BeforeOpen">
            <summary>
            Triggers when the popup before opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Blur">
            <summary>
            Triggers when focus moves out from the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Change">
            <summary>
            <para>Triggers when an item in a popup is selected or when the model value is changed by user.</para>
            <para>Use Change event to configure the cascading DropDownList.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Close">
            <summary>
            Triggers when the popup is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Filtering">
            <summary>
            Triggers on typing a character in the filter bar when the AllowFiltering is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the DropDownList allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Focus">
            <summary>
            Triggers when the component is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Open">
            <summary>
            Triggers when the popup opens.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Select">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.AllowFiltering">
            <summary>
            <para>When AllowFiltering is set to true, show the filter bar (search box) of the component.</para>
            <para>The filter action retrieves matched items through the `Filtering` event based on
            the characters typed in the search TextBox.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the DropDownList. One or more custom CSS classes can be added to a DropDownList.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.FilterBarPlaceholder">
            <summary>
            Accepts the value to be displayed as a watermark text on the filter bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the DropDownList that the placeholder text floats above the DropDownList based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the DropDownList when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the DropDownList.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the DropDownList after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.FooterTemplate">
            <summary>
            Accepts the template design and assigns it to the footer container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.HeaderTemplate">
            <summary>
            Accepts the template design and assigns it to the header container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.HtmlAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Index">
            <summary>
            Gets or sets the index of the selected item in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in DropDownList. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.PopupHeight">
            <summary>
            Specifies the height of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.PopupWidth">
            <summary>
            Specifies the width of the popup list. By default, the popup width sets based on the width of
            the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Readonly">
            <summary>
            Specifies the boolean value whether the DropDownList allows the user to change the value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.DataSource">
            <summary>
            <para>Accepts the list items either through local or remote service and binds it to the component.</para>
            <para>It can be an array of JSON Objects or an instance of
            `DataManager`.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.ActionFailureTemplate">
            <summary>
            Accepts the template and assigns it to the popup list content of the component
            when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.ShowClearButton">
            <summary>
            <para>Specifies whether to show or hide the clear button.</para>
            <para>When the clear button is clicked, `Value`, `Text`, and `Index` properties are reset to null.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Text">
            <summary>
            Gets or sets the display text of the selected item in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Value">
            <summary>
            Gets or sets the value of the selected item in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.ValueTemplate">
            <summary>
            Accepts the template design and assigns it to the selected list item in the input element of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Width">
            <summary>
            Specifies the width of the component. By default, the component width sets based on the width of
            its parent container.<para> You can also set the width in pixel values.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.FilterType">
            <summary>
            Determines on which filter type, the component needs to be considered on search action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.IgnoreCase">
            <summary>
            <para>When set to `false`, consider the `case-sensitive` on performing the search to find suggestions.</para>
            <para>By default, consider the casing.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.IgnoreAccent">
            <summary>
            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.Query">
            <summary>
            Accepts the external `Query` that execute along with data processing.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropDownListModel`2.EnableVirtualization">
            <summary>
            The Virtual Scrolling feature is used to display a large amount of data that you require without buffering the entire load of a huge database records in the DropDowns, that is, when scrolling, the datamanager request is sent to fetch some amount of data from the server dynamically.
            To achieve this scenario with DropDowns, set the EnableVirtualization to true.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ListBoxModel`1">
            <summary>
            Interface for a class ListBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.ActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.ActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.ActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.BeforeDrop">
            <summary>
            Triggers before dropping the list item on another list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.BeforeItemRender">
            <summary>
            Triggers while rendering each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Change">
            <summary>
            Triggers while select / unselect the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Drag">
            <summary>
            Triggers while dragging the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.DragStart">
            <summary>
            Triggers after dragging the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Drop">
            <summary>
            Triggers before dropping the list item on another list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Filtering">
            <summary>
            Triggers on typing a character in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.AllowDragAndDrop">
            <summary>
            If 'allowDragAndDrop' is set to true, then you can perform drag and drop of the list item.
            ListBox contains same 'scope' property enables drag and drop between multiple ListBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.AllowFiltering">
            <summary>
            To enable the filtering option in this component.
            Filter action performs when type in search box and collect the matched item through `filtering` event.
            If searching character does not match, `noRecordsTemplate` property value will be shown.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.CssClass">
            <summary>
            Sets the CSS classes to root element of this component, which helps to customize the
            complete styles.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Height">
            <summary>
            Sets the height of the ListBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.MaximumSelectionLength">
            <summary>
            Sets limitation to the value selection.
            Based on the limitation, list selection will be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Scope">
            <summary>
            Defines the scope value to group sets of draggable and droppable ListBox.
            A draggable with the same scope value will be accepted by the droppable.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.SelectionSettings">
            <summary>
            Specifies the selection mode and its type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.ToolbarSettings">
            <summary>
            Specifies the toolbar items and its position.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxModel`1.Value">
            <summary>
            Sets the specified item to the selected state or gets the selected item in the ListBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SelectionSettingsModel">
            <summary>
            Interface for a class SelectionSettings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectionSettingsModel.CheckboxPosition">
            <summary>
            Set the position of the checkbox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectionSettingsModel.Mode">
            <summary>
            Specifies the selection modes. The possible values are
             `Single`: Allows you to select a single item in the ListBox.
             `Multiple`: Allows you to select more than one item in the ListBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectionSettingsModel.ShowCheckbox">
            <summary>
            If 'showCheckbox' is set to true, then 'checkbox' will be visualized in the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectionSettingsModel.ShowSelectAll">
            <summary>
            Allows you to either show or hide the selectAll option on the component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ToolbarSettingsModel">
            <summary>
            Interface for a class ToolbarSettings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ToolbarSettingsModel.Items">
            <summary>
            Specifies the list of tools for dual ListBox.
            The predefined tools are 'moveUp', 'moveDown', 'moveTo', 'moveFrom', 'moveAllTo', and 'moveAllFrom'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ToolbarSettingsModel.Position">
            <summary>
            Positions the toolbar before/after the ListBox.
            The possible values are:
             Left: The toolbar will be positioned to the left of the ListBox.
             Right: The toolbar will be positioned to the right of the ListBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.IUpdateListArgs">
            <summary>
            Interface for update list arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.IUpdateListArgs.E">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.IUpdateListArgs.Enable">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.IUpdateListArgs.Index">
            <summary>
            Specifies the  property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.IUpdateListArgs.Li">
            <summary>
            Specifies the list property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.IUpdateListArgs.Module">
            <summary>
            Specifies the module  property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.IUpdateListArgs.PopupElement">
            <summary>
            Specifies the popup element  property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.IUpdateListArgs.Value">
            <summary>
            Specifies the value property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ItemCreatedArgs">
            <summary>
            Defines the item created event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ItemCreatedArgs.CurData">
            <summary>
            Specifies the current data property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ItemCreatedArgs.Item">
            <summary>
            Specifies the text property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ItemCreatedArgs.Text">
            <summary>
            Specifies the text property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.CustomValueEventArgs`1">
            <summary>
            Defines the custom value event.
            </summary>
            <typeparam name="T">Specifies the type of CustomValueEventArgs.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.CustomValueEventArgs`1.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.CustomValueEventArgs`1.NewData">
            <summary>
            Gets the newly added data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.CustomValueEventArgs`1.Text">
            <summary>
            Gets the typed custom text to make a own text format and assign it to `item` argument.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SelectAllEventArgs`1">
            <summary>
            Defines the select all event.
            </summary>
            <typeparam name="T">Specifies the type of SelectAllEventArgs.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectAllEventArgs`1.Event">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectAllEventArgs`1.IsChecked">
            <summary>
            Specifies whether it is selectAll or deSelectAll.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectAllEventArgs`1.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectAllEventArgs`1.ItemData">
            <summary>
            Returns the selected items as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SelectAllEventArgs`1.Items">
            <summary>
            Returns the selected list items.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ChipSelectedEventArgs`1">
            <summary>
            Specifies the chip selected event.
            </summary>
            <typeparam name="T">Specifies the type of ChipSelectedEventArgs.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ChipSelectedEventArgs`1.ChipData">
            <summary>
            Returns the selected chip data as list object from the data source.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.MultiSelectChangeEventArgs`1">
            <summary>
            Defines the MultiSelect change event.
            </summary>
            <typeparam name="T">Specifies the MultiSelectChangeEventArgs.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectChangeEventArgs`1.E">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectChangeEventArgs`1.Element">
            <summary>
            Returns the root element of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectChangeEventArgs`1.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectChangeEventArgs`1.OldValue">
            <summary>
            Returns the component initial Value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectChangeEventArgs`1.Value">
            <summary>
            Returns the updated component Values.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.RemoveEventArgs`1">
            <summary>
             Defines the remove event.
            </summary>
            <typeparam name="T">Specifies the RemoveEventArgs.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.RemoveEventArgs`1.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.RemoveEventArgs`1.E">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.RemoveEventArgs`1.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.RemoveEventArgs`1.Item">
            <summary>
            Returns the selected list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.RemoveEventArgs`1.ItemData">
            <summary>
            Returns the selected item as JSON Object from the data source.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.TaggingEventArgs`1">
            <summary>
            Defines the tagging event.
            </summary>
            <typeparam name="T">Specifies the type of TaggingEventArgs.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.TaggingEventArgs`1.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.TaggingEventArgs`1.E">
            <summary>
            Specifies the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.TaggingEventArgs`1.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.TaggingEventArgs`1.ItemData">
            <summary>
            Returns the selected item as JSON Object from the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.TaggingEventArgs`1.SetClass">
            <summary>
            To set the classes to chip element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.MultiSelectModel`1">
            <summary>
            Interface for a class MultiSelect.
            </summary>
            <typeparam name="T">Specifies the type of MultiSelectModel.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.BeforeOpen">
            <summary>
            Fires when popup opens before animation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Blur">
            <summary>
            Event triggers when the input get focus-out.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Change">
            <summary>
            Fires each time when selection changes happened in list items after model and input value get affected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ChipSelection">
            <summary>
            Event triggers when the chip selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Close">
            <summary>
            Fires when popup close after animation completion.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.CustomValueSelection">
            <summary>
            Triggers when the CustomValue is selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Filtering">
            <summary>
            Triggers event,when user types a text in search box.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Focus">
            <summary>
            Event triggers when the input get focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Open">
            <summary>
            Fires when popup opens after animation completion.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Removed">
            <summary>
            Fires after the selected item removed from the widget.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Removing">
            <summary>
            Fires before the selected item removed from the widget.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Select">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.SelectedAll">
            <summary>
            Fires after select all process completion.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Tagging">
            <summary>
            Fires before set the selected item as chip in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ActionFailureTemplate">
            <summary>
            Accepts the template and assigns it to the popup list content of the MultiSelect component
            when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.AllowCustomValue">
            <summary>
            Allows user to add a
            custom value the value which is not present in the suggestion list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.AllowFiltering">
            <summary>
            <para>To enable the filtering option in this component.</para>
            <para>Filter action performs when type in search box and collect the matched item through `Filtering` event.</para>
            <para>If searching character does not match, `NoRecordsTemplate` property value will be shown.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ChangeOnBlur">
            <summary>
            <para>By default, the MultiSelect component fires the Change event while focus out the component.</para>
            <para>If you want to fires the Change event on every value selection and remove, then disable the ChangeOnBlur property.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ClosePopupOnSelect">
            <summary>
            Based on the property, when item get select popup visibility state will changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the MultiSelect. One or more custom CSS classes can be added to a MultiSelect.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.DataSource">
            <summary>
            <para>Accepts the list items either through local or remote service and binds it to the MultiSelect component.</para>
            <para>It can be an array of JSON Objects or an instance of
            `DataManager`.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.DelimiterChar">
            <summary>
            Sets the delimiter character for 'default' and 'delimiter' visibility modes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.EnableGroupCheckBox">
            <summary>
            <para>Specifies a boolean value that indicates the whether the grouped list items are
            allowed to check by checking the group header in checkbox mode.</para>
            <para>By default, there is no checkbox provided for group headers.</para>
            <para>This property allows you to render checkbox for group headers and to select
            all the grouped items at once.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.EnablePersistence">
            <summary>
            <para>Enable or disable persisting MultiSelect state between page reloads.</para>
            <para>If enabled, the `Value` state will be persisted.</para>
            <list type="bullet">
            <item>
            <term>Value</term>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.EnableSelectionOrder">
            <summary>
            Reorder the selected items in popup visibility state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the MultiSelect allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Fields">
            <summary>
            <para>The `Fields` property maps the columns of the data table and binds the data to the component.</para>
            <list type="bullet">
            <item>
            <term>Text</term>
            <description>Maps the text column from data table for each list item.</description>
            </item>
            <item>
            <term>Value</term>
            <description>Maps the value column from data table for each list item.</description>
            </item>
            <item>
            <term>IconCss</term>
            <description>Maps the icon class column from data table for each list item.</description>
            </item>
            <item>
            <term>GroupBy</term>
            <description>Group the list items with it's related items by mapping groupBy field.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.FilterBarPlaceholder">
            <summary>
            Accepts the value to be displayed as a watermark text on the filter bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.FilterType">
            <summary>
            Determines on which filter type, the MultiSelect component needs to be considered on search action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the MultiSelect that the placeholder text floats above the MultiSelect based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the MultiSelect when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the MultiSelect.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the MultiSelect after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.FooterTemplate">
            <summary>
            Accepts the template design and assigns it to the footer container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.GroupTemplate">
            <summary>
            Accepts the template design and assigns it to the group headers present in the MultiSelect popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.HeaderTemplate">
            <summary>
            Accepts the template design and assigns it to the header container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.HideSelectedItem">
            <summary>
            Hides the selected item from the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.HtmlAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.IgnoreAccent">
            <summary>
            ignoreAccent set to true, then ignores the diacritic characters or accents when filtering.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.IgnoreCase">
            <summary>
            Sets case sensitive option for filter operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ItemTemplate">
            <summary>
            Accepts the template design and assigns it to each list item present in the popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Locale">
            <summary>
            Specifies the global culture and localization of the MultiSelect.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.MaximumSelectionLength">
            <summary>
            <para>Sets limitation to the value selection.</para>
            <para>Based on the limitation, list selection will be prevented.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Mode">
            <summary>
            configures visibility mode for component interaction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.NoRecordsTemplate">
            <summary>
            Accepts the template design and assigns it to popup list of MultiSelect component.
            when no data is available on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.OpenOnClick">
            <summary>
            Whether to automatically open the popup when the control is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in MultiSelect. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.PopupHeight">
            <summary>
            Gets or sets the height of the popup list. By default, it renders based on its list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.PopupWidth">
            <summary>
            Gets or sets the width of the popup list and percentage values has calculated based on input width.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Query">
            <summary>
            Accepts the external `Query`
            which will execute along with the data processing in MultiSelect.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Readonly">
            <summary>
            Specifies the boolean value whether the MultiSelect allows the user to change the value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.SelectAllText">
            <summary>
            Specifies the selectAllText to be displayed on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ShowClearButton">
            <summary>
            Enables close icon with the each selected item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ShowDropDownIcon">
            <summary>
            Allows you to either show or hide the DropDown button on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ShowSelectAll">
            <summary>
            Allows you to either show or hide the selectAll option on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.SortOrder">
            <summary>
            <para>Specifies the `SortOrder` to sort the data source.</para>
            <para>The available type of sort orders are.</para>
            <list type="bullet">
            <item>
            <term>None</term>
            <description>The data source is not sorting.</description>
            </item>
            <item>
            <term>Ascending</term>
            <description>The data source is sorting with ascending order.</description>
            </item>
            <item>
            <term>Descending</term>
            <description>The data source is sorting with descending order.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Text">
            <summary>
            Selects the list item which maps the data `Text` field in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.UnSelectAllText">
            <summary>
            Specifies the UnSelectAllText to be displayed on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Value">
            <summary>
            Selects the list item which maps the data `Value` field in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ValueTemplate">
            <summary>
            Accepts the template design and assigns it to the selected list item in the input element of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.Width">
            <summary>
            Gets or sets the width of the component. By default, it sizes based on its parent.
            container dimension.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectModel`1.ZIndex">
            <summary>
            specifies the z-index value of the component popup element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.IDropDowns">
            <summary>
            Interface for DropDowns component.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.IDropDowns.UpdateChildProperties(System.Object)">
            <summary>
            Update the child component properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.IDropDowns.CallStateHasChangedAsync">
            <summary>
            Refresh the parent component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.IDropDowns.NoRecordsTemplate">
            <summary>
            Accepts the template design and assigns it to popup list of DropDowns component, when no data is available on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.IDropDowns.ActionFailureTemplate">
            <summary>
            Accepts the template and assigns it to the popup list content of the DropDowns component, when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SfListBox`2">
            <summary>
            ListBox component used to display a list of items. Users can select one or more items in the list using a checkbox or by keyboard selection.
            It supports sorting, grouping, reordering and drag and drop of items.
            </summary>
            <summary>
            ListBox component used to display a list of items. Users can select one or more items in the list using a checkbox or by keyboard selection.
            It supports sorting, grouping, reordering and drag and drop of items.
            </summary>
            <summary>
            ListBox component used to display a list of items. Users can select one or more items in the list using a checkbox or by keyboard selection.
            It supports sorting, grouping, reordering and drag and drop of items.
            </summary>
            <summary>
            ListBox component used to display a list of items. Users can select one or more items in the list using a checkbox or by keyboard selection.
            It supports sorting, grouping, reordering and drag and drop of items.
            </summary>
            <summary>
            ListBox component used to display a list of items. Users can select one or more items in the list using a checkbox or by keyboard selection.
            It supports sorting, grouping, reordering and drag and drop of items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.ValueExpression">
            <summary>
            Specifies the expression for defining the value of the bound.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.AllowDragAndDrop">
            <summary>
            If 'allowDragAndDrop' is set to true, then you can perform drag and drop of the list item.
            ListBox contains same 'scope' property enables drag and drop between multiple ListBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.AllowFiltering">
            <summary>
            To enable the filtering option in this component.
            Filter action performs when type in search box and collect the matched item through `Filtering` event.
            If searching character does not match, `noRecordsTemplate` property value will be shown.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.CssClass">
            <summary>
            Sets the CSS classes to root element of this component, which helps to customize the
            complete styles.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.FilterBarPlaceholder">
            <summary>
            Accepts the value to be displayed as a watermark text on the filter bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.Height">
            <summary>
            Sets the height of the ListBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.MaximumSelectionLength">
            <summary>
            Sets limitation to the value selection.
            based on the limitation, list selection will be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.Scope">
            <summary>
            Defines the connected ListBox reference to group sets of draggable and droppable ListBox.
            A draggable ListBox with the scope reference will be accepted by the droppable.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.Value">
            <summary>
            Sets the specified item to the selected state or gets the selected item in the ListBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.ValueChanged">
            <summary>
            Specifies the callback to trigger when the value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfListBox`2.HtmlAttributes">
            <summary>
            You can add the additional HTML attributes such as id, title etc., to the listbox element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.EnableItems``1(``0,System.Boolean)">
            <summary>
            This method is used to enable or disable the items in the ListBox based on the items and enable argument.
            </summary>
            <param name = "items">Specifies the list items to be enabled or disabled. You can pass either value(TValue) or data source(TItem) collection.</param>
            <param name = "enable">Set false to disable the items. By default the items will be enabled.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.GetDataByValue(`0)">
            <summary>
            Gets the array of data Object that matches the given array of values.
            </summary>
            <param name = "dataValue">Specifies the value(s).</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.GetDataList">
            <summary>
            Returns the updated dataSource in ListBox.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.MoveAllTo(System.String,System.Nullable{System.Double})">
            <summary>
            Moves all the values from one ListBox to the scoped ListBox.
            </summary>
            <param name = "scope">Specifies the destination ListBox reference.</param>
            <param name = "index">Specifies the index to place the moved items.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.MoveAllAsync(System.String,System.Nullable{System.Double})">
            <summary>
            Moves all the values from one ListBox to the scoped ListBox.
            </summary>
            <param name = "scope">Specifies the destination ListBox reference.</param>
            <param name = "index">Specifies the index to place the moved items.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.MoveDown(`0)">
            <summary>
            Moves the given value(s) / selected value(s) downwards.
            </summary>
            <param name = "values">Specifies the value(s).</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.MoveDownAsync(`0)">
            <summary>
            Moves the given value(s) / selected value(s) downwards.
            </summary>
            <param name = "values">Specifies the value(s).</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.MoveTo(`0,System.Nullable{System.Double},System.String)">
            <summary>
            Moves the given value(s) / selected value(s) to the given / default scoped ListBox.
            </summary>
            <param name = "values">Specifies the value(s).</param>
            <param name = "index">Specifies the index to place the moved items.</param>
            <param name = "scope">Specifies the destination ListBox reference.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.MoveAsync(`0,System.Nullable{System.Double},System.String)">
            <summary>
            Moves the given value(s) / selected value(s) to the given / default scoped ListBox.
            </summary>
            <param name = "values">Specifies the value(s).</param>
            <param name = "index">Specifies the index to place the moved items.</param>
            <param name = "scope">Specifies the destination ListBox reference.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.MoveUp(`0)">
            <summary>
            Moves the given value(s) / selected value(s) upwards.
            </summary>
            <param name = "values">Specifies the value(s).</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.MoveUpAsync(`0)">
            <summary>
            Moves the given value(s) / selected value(s) upwards.
            </summary>
            <param name = "values">Specifies the value(s).</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.SelectAll(System.Boolean)">
            <summary>
            Based on the state parameter, entire list item will be selected/deselected.
            </summary>
            <param name = "state">Set `true`/`false` to select/ unselect the entire list items.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.SelectAllAsync(System.Boolean)">
            <summary>
            Based on the state parameter, entire list item will be selected/deselected.
            </summary>
            <param name = "state">Set `true`/`false` to select/ unselect the entire list items.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.SelectItems``1(``0,System.Boolean)">
            <summary>
            Based on the state parameter, specified list item will be selected/deselected.
            </summary>
            <param name = "items">Specifies the list items to be selected or unselected. You can pass either value(TValue) or data source(TItem) collection.</param>
            <param name = "state">Set false to un select the items. By default the items will be selected.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.SelectItemsAsync``1(``0,System.Boolean)">
            <summary>
            Based on the state parameter, specified list item will be selected/deselected.
            </summary>
            <param name = "items">Specifies the list items to be selected or unselected. You can pass either value(TValue) or data source(TItem) collection.</param>
            <param name = "state">Set false to un select the items. By default the items will be selected.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.RemoveItem(System.Collections.Generic.IEnumerable{`1},System.Nullable{System.Int32})">
            <summary>
            Removes a item or collection of items from the list. By default, removed the last item in the list,
            but you can remove based on the index parameter.
            </summary>
            <param name = "items">Specifies the list of data collection to be removed.</param>
            <param name = "itemIndex">Specifies the index to remove the item from the list.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.RemoveItemAsync(System.Collections.Generic.IEnumerable{`1},System.Nullable{System.Int32})">
            <summary>
            Removes a item or collection of items from the list. By default, removed the last item in the list,
            but you can remove based on the index parameter.
            </summary>
            <param name = "items">Specifies the list of data collection to be removed.</param>
            <param name = "itemIndex">Specifies the index to remove the item from the list.</param>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.DragEndAsync(System.Boolean,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,Microsoft.JSInterop.DotNetObjectReference{System.Object})">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfListBox`2.UpdateChildProperties(System.String,System.Object)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ListBoxChangeEventArgs`2">
            <summary>
            Interface for change event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxChangeEventArgs`2.Items">
            <summary>
            Specifies the list data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxChangeEventArgs`2.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxChangeEventArgs`2.Value">
            <summary>
            Returns the selected values.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DragEventArgs`1">
            <summary>
            Interface for drag and drop event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DragEventArgs`1.Cancel">
            <summary>
            Used to prevent the drag action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DragEventArgs`1.Destination">
            <summary>
            Specifies the dropped ListBox data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DragEventArgs`1.Items">
            <summary>
            Specifies the dragged items data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DragEventArgs`1.Source">
            <summary>
            Specifies the dropped ListBox data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DragEventArgs`1.PreviousIndex">
            <summary>
            Specifies the drag item index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DragEventArgs`1.CurrentIndex">
            <summary>
            Specifies the drop item index.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SourceDestinationModel`1">
            <summary>
            Interface for drag and drop event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SourceDestinationModel`1.CurrentData">
            <summary>
            Specifies the data after the drag and drop operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SourceDestinationModel`1.PreviousData">
            <summary>
            Specifies the data before the drag and drop operation.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.DropEventArgs`1">
            <summary>
            Interface for drop event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropEventArgs`1.Cancel">
            <summary>
            Used to prevent the drop action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropEventArgs`1.CurrentIndex">
            <summary>
            Specifies the drop item index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropEventArgs`1.Items">
            <summary>
            Specifies the dragged items data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropEventArgs`1.PreviousIndex">
            <summary>
            Specifies the drag item index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.DropEventArgs`1.Target">
            <summary>
            Specifies the target element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.BeforeItemRenderEventArgs`1">
            <summary>
            Interface for before item render event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.BeforeItemRenderEventArgs`1.Item">
            <summary>
            Specifies the item data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.BeforeItemRenderEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ListBoxEvents`2">
            <summary>
            Specifies the ListBox Events of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.OnActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.OnActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.OnActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.OnDrop">
            <summary>
            Triggers before dropping the list item on another list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.OnItemRender">
            <summary>
            Triggers while rendering each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.ValueChange">
            <summary>
            Triggers while select / unselect the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.DragStart">
            <summary>
            Triggers after dragging the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.Dropped">
            <summary>
            Triggers before dropping the list item on another list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxEvents`2.ItemSelected">
            <summary>
            Triggers on typing a character in the component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ListBoxFieldSettings">
            <summary>
            The Fields property maps the columns of the data table and binds the data to the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxFieldSettings.GroupBy">
            <summary>
            Group the list items with it's related items by mapping groupBy field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxFieldSettings.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the list element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxFieldSettings.IconCss">
            <summary>
            Maps the icon class column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxFieldSettings.Text">
            <summary>
            Maps the text column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxFieldSettings.Value">
            <summary>
            Maps the value column from data table for each list item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ListBoxSelectionSettings">
            <summary>
            Defines the selection settings of List Box.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxSelectionSettings.CheckboxPosition">
            <summary>
            Set the position of the checkbox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxSelectionSettings.Mode">
            <summary>
            Specifies the selection modes. The possible values are
             `Single`: Allows you to select a single item in the ListBox.
             `Multiple`: Allows you to select more than one item in the ListBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxSelectionSettings.ShowCheckbox">
            <summary>
            If 'showCheckbox' is set to true, then 'checkbox' will be visualized in the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxSelectionSettings.ShowSelectAll">
            <summary>
            Allows you to either show or hide the selectAll option on the component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ListBoxTemplates`1">
            <summary>
            Used to specify custom templates for rendering list in ListBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxTemplates`1.ItemTemplate">
            <summary>
            Accepts the template design and assigns it to each list item present in the listbox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxTemplates`1.NoRecordsTemplate">
            <summary>
            Accepts the template design and assigns it to listbox, when no data is available on the component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.ListBoxToolbarSettings">
            <summary>
            Defines the ListBox tool bar settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxToolbarSettings.Items">
            <summary>
            Specifies the list of tools for dual ListBox.
            The predefined tools are 'MoveUp', 'MoveDown', 'MoveTo', 'MoveFrom', 'MoveAllTo', and 'MoveAllFrom'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.ListBoxToolbarSettings.Position">
            <summary>
            Positions the toolbar before/after the ListBox.
            The possible values are:
            - Left: The toolbar will be positioned to the left of the ListBox.
            - Right: The toolbar will be positioned to the right of the ListBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.SfMultiSelect`2">
            <summary>
            The MultiSelect component contains a list of predefined values from which a multiple value can be chosen.
            </summary>
            <summary>
            The MultiSelect component contains a list of predefined values from which a multiple value can be chosen.
            </summary>
            <summary>
            The MultiSelect component contains a list of predefined values from which a multiple value can be chosen.
            </summary>
            <summary>
            The MultiSelect component contains a list of predefined values from which a multiple value can be chosen.
            </summary>
            <summary>
            The MultiSelect component contains a list of predefined values from which a single value can be chosen.
            </summary>
            <summary>
            The MultiSelect component contains a list of predefined values from which a multiple value can be chosen.
            </summary>
            <typeparam name="TValue">Specifies the value type.</typeparam>
            <typeparam name="TItem">Specifies the type of SfMultiSelect.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ID">
            <summary>
            Specifies the id of the MultiSelect component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ValueExpression">
            <summary>
            Specifies the expression for defining the value of the bound.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.AllowCustomValue">
            <summary>
            Allows user to add a
            Custom value the value which is not present in the suggestion list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.EnableVirtualization">
            <summary>
            The Virtual Scrolling feature is used to display a large amount of data that you require without buffering the entire load of a huge database records in the DropDowns, that is, when scrolling, the datamanager request is sent to fetch some amount of data from the server dynamically.
            To achieve this scenario with DropDowns, set the EnableVirtualization to true.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ItemsCount">
            <summary>
            The data can be fetched in popup based on ItemsCount, when enabled the EnableVirtualization.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.AllowFiltering">
            <summary>
            <para>To enable the filtering option in this component.</para>
            <para>Filter action performs when type in search box and collect the matched item through `Filtering` event.</para>
            <para>If searching character does not match, `NoRecordsTemplate` property value will be shown.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ChangeOnBlur">
            <summary>
            <para>By default, the MultiSelect component fires the Change event while focus out the component.</para>
            <para>If you want to fires the Change event on every value selection and remove, then disable the EnabledChangeOnBlur property.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.EnableChangeOnBlur">
            <summary>
            <para>By default, the MultiSelect component fires the Change event while focus out the component.</para>
            <para>If you want to fires the Change event on every value selection and remove, then disable the EnabledChangeOnBlur property.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ClosePopupOnSelect">
            <summary>
            Based on the property, when item get select popup visibility state will changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.EnableCloseOnSelect">
            <summary>
            Based on the property, when item get select popup visibility state will changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the MultiSelect. One or more custom CSS classes can be added to a MultiSelect.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.DelimiterChar">
            <summary>
            Sets the delimiter character for 'default' and 'delimiter' visibility modes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.EnableGroupCheckBox">
            <summary>
            <para>Specifies a boolean value that indicates the whether the grouped list items are
            allowed to check by checking the group header in checkbox mode.</para>
            <para>By default, there is no checkbox provided for group headers.</para>
            <para>This property allows you to render checkbox for group headers and to select
            all the grouped items at once.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.EnableSelectionOrder">
            <summary>
            Reorder the selected items in popup visibility state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FilterBarPlaceholder">
            <summary>
            Accepts the value to be displayed as a watermark text on the filter bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the MultiSelect that the placeholder text floats above the MultiSelect based on the following values.
            <para>Possible values are: </para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the MultiSelect when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the MultiSelect.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the MultiSelect after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.HideSelectedItem">
            <summary>
            Hides the selected item from the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.HtmlAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both the property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.MaximumSelectionLength">
            <summary>
            <para>Sets limitation to the value selection.</para>
            <para>Based on the limitation, list selection will be prevented.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Mode">
            <summary>
            configures visibility mode for component interaction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OpenOnClick">
            <summary>
            Whether to automatically open the popup when the control is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in MultiSelect. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.PopupHeight">
            <summary>
            Gets or sets the height of the popup list. By default, it renders based on its list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.PopupWidth">
            <summary>
            Gets or sets the width of the popup list and percentage values has calculated based on input width.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Readonly">
            <summary>
            Specifies the boolean value whether the MultiSelect allows the user to change the value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.SelectAllText">
            <summary>
            Specifies the selectAllText to be displayed on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ShowClearButton">
            <summary>
            Enables close icon with the each selected item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ShowDropDownIcon">
            <summary>
            Allows you to either show or hide the DropDown button on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ShowSelectAll">
            <summary>
            Allows you to either show or hide the selectAll option on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Text">
            <summary>
            Selects the list item which maps the data `Text` field in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.UnSelectAllText">
            <summary>
            Specifies the UnSelectAllText to be displayed on the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Value">
            <summary>
            Selects the list item which maps the data `Value` field in the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ValueChanged">
            <summary>
            Specifies the callback to trigger when the value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ValueTemplate">
            <summary>
            Accepts the template design and assigns it to the selected list item in the input element of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FooterTemplate">
            <summary>
            Accepts the template design and assigns it to the footer container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.HeaderTemplate">
            <summary>
            Accepts the template design and assigns it to the header container of the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Width">
            <summary>
            Gets or sets the width of the component. By default, it sizes based on its parent.
            container dimension.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.TabIndex">
            <summary>
            Specifies the tab order of the DropDownList component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OnChange">
            <summary>
            Triggers when the content of input has changed and gets focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OnKeyUp">
            <summary>
            Triggers when the content of input has changed and gets focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OnInput">
            <summary>
            Triggers each time when the value of input has changed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OnBlur">
            <summary>
            Triggers when the input loses the focus.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OnFocus">
            <summary>
            Triggers when the input gets focus.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.MultiSelectParent">
            <summary>
            Parent component of MultiSelect.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FocusIn">
            <summary>
            Sets the focus to the MultiSelect component for interaction.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FocusAsync">
            <summary>
            Sets the focus to the MultiSelect component for interaction.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FocusOut">
            <summary>
            Remove the focus from the MultiSelect component, if the component is in focus state.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FocusOutAsync">
            <summary>
            Remove the focus from the MultiSelect component, if the component is in focus state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.HideSpinnerAsync">
            <summary>
            Hides the spinner loader.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.HideSpinner">
            <summary>
            Hides the spinner loader.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ShowSpinnerAsync">
            <summary>
            Shows the spinner loader.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ShowSpinner">
            <summary>
            Shows the spinner loader.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.SelectAll(System.Boolean)">
            <summary>
            <para>Based on the state parameter, entire list item will be selected/deselected.</para>
            <para>parameter.</para>
            <list type="bullet">
            <item>
            <term>True</term>
            <description>Selects entire list items.</description>
            </item>
            <item>
            <term>False</term>
            <description>Un Selects entire list items.</description>
            </item>
            </list>
            </summary>
            <param name="state">Specifies the state.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.SelectAllAsync(System.Boolean)">
             <summary>
             <para>Based on the state parameter, entire list item will be selected/deselected.</para>
             <para>parameter</para>
             <list type="bullet">
             <item>
             <term>True</term>
             <description>Selects entire list items.</description>
            </item>
             <item>
             <term>False</term>
             <description>Un Selects entire list items.</description>
             </item>
             </list>
             </summary>
             <param name="state">Specifies the state.</param>
             <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Clear">
            <summary>
            Allows you to clear the selected values from the MultiSelect component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ClearAsync">
            <summary>
            Allows you to clear the selected values from the MultiSelect component.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.GetItemsAsync">
            <summary>
            Gets all the list items bound on this component.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.GetItems">
            <summary>
            Gets all the list items bound on this component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.GetDataByValueAsync(`0)">
            <summary>
            Gets the array of data Object that matches the given array of values.
            </summary>
            <param name = "dataValue">Specifies the value(s).</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.GetDataByValue(`0)">
            <summary>
            Gets the array of data Object that matches the given array of values.
            </summary>
            <param name = "dataValue">Specifies the value(s).</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FilterAsync(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query,Syncfusion.Blazor.DropDowns.FieldSettingsModel)">
            <summary>
            To filter the data from given data source by using query.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <param name="fields">Specifies the fields.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Filter(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query,Syncfusion.Blazor.DropDowns.FieldSettingsModel)">
            <summary>
            To filter the data from given data source by using query.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <param name="fields">Specifies the fields.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.HidePopupAsync">
            <summary>
            Hides the popup if it is in an open state.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ShowPopupAsync">
            <summary>
            Opens the popup that displays the list of items.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ShowPopup">
            <summary>
            Opens the popup that displays the list of items.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.HidePopup">
            <summary>
            Hides the popup if it is in an open state.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ClosePopup">
            <summary>
            Invoke the before the popup close.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.Hide">
            <summary>
            Hides the MultiSelect popup.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.InvokeBlur">
            <summary>
            Invoke the blur event for the MultiSelect input.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.RemainCount(System.Double)">
            <summary>
            Invoke the RemainCount event for the return the MultiSelect remainder count.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.VirtualScrollHandler">
            <summary>
            Invoke the scroll handler.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.IsFilter">
            <summary>
            Task which specifies whether filter action is allowed or not.
            </summary>
            <returns>bool.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.IncrementSearch">
            <summary>
            Task which incrment the search.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.PasteHandler">
            <summary>
            Triggers when paste action is performes.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FilterClear">
            <summary>
            Triggers when filter clear icon is clicked.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.FilteringAction(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query,Syncfusion.Blazor.DropDowns.FieldSettingsModel)">
            <summary>
            Task which specifies the filtering action.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <param name="fields">Specifies the fields.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.GetQuery(Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which gets the query.
            </summary>
            <param name="query">Specifies the query.</param>
            <returns>Query.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.SetRTL">
            <summary>
            Method which set RTL to the component.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.SetCssClass">
            <summary>
            Method which set css class to the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ComponentName">
            <summary>
            Specifies the component name.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.CallStateHasChangedAsync">
            <summary>
            Invoke state change of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OnParametersSetAsync">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Triggers after the component was rendered.
            </summary>
            <param name="firstRender">true if the component rendered for the first time.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.RefreshPopup">
            <summary>
            Task used to refresh the popup list items.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.SetInputValue">
            <summary>
            Invoke the client side method for update the input value while focusing out the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.DependencyScripts">
            <summary>
            Method which updates the dependency scripts.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OpenEventArgs">
            <summary>
            Specifies the open event.
            </summary>
            <returns>PopupEventArgs arguments.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ActionBegin(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which pecifies the action begin event.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ActionComplete(System.Collections.Generic.IEnumerable{`1},Syncfusion.Blazor.Data.Query)">
            <summary>
            Task which specifies the action complete event.
            </summary>
            <param name="dataSource">Specifies the data source.</param>
            <param name="query">Specifies the query.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.ActionFailure(System.Object)">
            <summary>
            Task which specifies the action failure event.
            </summary>
            <param name="args">Specifies the object arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.UpdatePopupState">
            <summary>
            Method which updates the popup state.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.UpdateListSelection(Syncfusion.Blazor.DropDowns.ListOptions{`1},System.String,System.Boolean,System.EventArgs)">
            <summary>
            Task which updates the selected item.
            </summary>
            <param name="listItem">Specifies the list item.</param>
            <param name="className">Specifies the class name..</param>
            <param name="isAdd">Specifies whether to add the item or not.</param>
            <param name="args">Specifies the EventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.UpdateChildProperties(System.Object)">
            <summary>
            Update the MultiSelect fileds.
            </summary>
            <param name="fieldValue">Specifies the field value.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.UpdateSelectedItem(Syncfusion.Blazor.DropDowns.ListOptions{`1},System.EventArgs,Microsoft.AspNetCore.Components.Web.KeyboardEventArgs,System.Boolean)">
            <summary>
            Task which updates the selected item.
            </summary>
            <param name="item">Specifies the item.</param>
            <param name="args">Specifies the EventArgs arguments.</param>
            <param name="keyArgs">Specifies the KeyActions arguments.</param>
            <param name="isGroupBy">Specifies whether the items should be grouped or not.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.OnChangeEvent(System.EventArgs)">
            <summary>
            Triggers when value get changed.
            </summary>
            <param name="args">Specifies EventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.UpdateValue">
            <summary>
            Task which updates the value.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.SfMultiSelect`2.GetItemData(`1)">
            <summary>
            Method which gets item data.
            </summary>
            <param name="item">Specifies the item.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2">
            <summary>
            Specifies the MultiSelect Events of the component.
            </summary>
            <typeparam name="TValue">Specifies the value type.</typeparam>
            <typeparam name="TItem">Specifies the type of MultiSelectEvents.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnActionBegin">
            <summary>
            Triggers before fetching data from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnActionComplete">
            <summary>
            Triggers after data is fetched successfully from the remote server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnOpen">
            <summary>
            Fires when popup opens before animation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.Blur">
            <summary>
            Event triggers when the input get focus-out.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.ValueChange">
            <summary>
            Fires each time when selection changes happened in list items after model and input value get affected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.ChipSelected">
            <summary>
            Event triggers when the chip selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnClose">
            <summary>
            Triggers before the popup is closed. If you cancel this event, the popup remains opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.CustomValueSpecifier">
            <summary>
            Triggers when the CustomValue is selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.DataBound">
            <summary>
            Triggers when data source is populated in the popup list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.Filtering">
            <summary>
            Triggers event,when user types a text in search box.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.Focus">
            <summary>
            Event triggers when the input get focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.Opened">
            <summary>
            Fires when popup opens after animation completion.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.Closed">
            <summary>
            Triggers after the popup has been closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.ValueRemoved">
            <summary>
            Fires after the selected item removed from the widget.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnValueRemove">
            <summary>
            Fires before the selected item removed from the widget.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnValueSelect">
            <summary>
            Triggers when an item in the popup is selected by the user either with mouse/tap or with keyboard navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.SelectedAll">
            <summary>
            Fires after select all process completion.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.Cleared">
            <summary>
            Fires after cleared all item using clear icon.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnChipTag">
            <summary>
            Fires before set the selected item as chip in the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.MultiSelectEvents`2.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings">
            <summary>
            The Fields property maps the columns of the data table and binds the data to the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings.GroupBy">
            <summary>
            Group the list items with it's related items by mapping groupBy field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the list element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings.IconCss">
            <summary>
            Maps the icon class column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings.Text">
            <summary>
            Maps the text column from data table for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings.Value">
            <summary>
            Maps the value column from data table for each list item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.MultiSelectFieldSettings.OnParametersSet">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.DropDowns.MultiSelectTemplates`1">
            <summary>
            The MulitSelect has been provided with several options to customize each list item, group title, selected value, header, and footer elements.
            </summary>
            <typeparam name="TItem">Specifies the type of MultiSelectTemplates.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.DropDowns.MultiSelectTemplates`1.ValueTemplate">
            <summary>
            Accepts the template design and assigns it to the selected list item in the input element of the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DropDowns.MultiSelectTemplates`1.OnInitialized">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.LocaleData">
            <summary>
            Defines the <see cref="T:Syncfusion.Blazor.LocaleData" />.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LocaleData.Dropdowns">
            <summary>
            Gets or sets the Dropdowns property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LocaleData.DropDownList">
            <summary>
            Gets or sets the DropDownList property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LocaleData.ComboBox">
            <summary>
            Gets or sets the ComboBox property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LocaleData.AutoComplete">
            <summary>
            Gets or sets the AutoComplete property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LocaleData.MultiSelect">
            <summary>
            Gets or sets the MultiSelect property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LocaleData.ListBox">
            <summary>
            Gets or sets the ListBox property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LocaleData.Uploader">
            <summary>
            Returns the upload locale.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LocaleData.NumericTextBox">
            <summary>
            Returns the numerictextbox locale.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.LocaleData.FormValidator">
            <summary>
            Returns the formValidator locale.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropdownsLocale">
            <summary>
            Defines the <see cref="T:Syncfusion.Blazor.DropdownsLocale" />.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropdownsLocale.NoRecordsTemplate">
            <summary>
            Gets or sets the NoRecordsTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropdownsLocale.ActionFailureTemplate">
            <summary>
            Gets or sets the ActionFailureTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropdownsLocale.OverflowCountTemplate">
            <summary>
            Gets or sets the OverflowCountTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropdownsLocale.SelectAllText">
            <summary>
            Gets or sets the SelectAllText property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropdownsLocale.UnSelectAllText">
            <summary>
            Gets or sets the UnSelectAllText property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropdownsLocale.TotalCountTemplate">
            <summary>
            Gets or sets the TotalCountTemplate property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DropDownListLocale">
            <summary>
            Defines the <see cref="T:Syncfusion.Blazor.DropDownListLocale" />.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDownListLocale.NoRecordsTemplate">
            <summary>
            Gets or sets the NoRecordsTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DropDownListLocale.ActionFailureTemplate">
            <summary>
            Gets or sets the ActionFailureTemplate property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.ComboBoxLocale">
            <summary>
            Defines the <see cref="T:Syncfusion.Blazor.ComboBoxLocale" />.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ComboBoxLocale.NoRecordsTemplate">
            <summary>
            Gets or sets the NoRecordsTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ComboBoxLocale.ActionFailureTemplate">
            <summary>
            Gets or sets the ActionFailureTemplate property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.AutoCompleteLocale">
            <summary>
            Defines the <see cref="T:Syncfusion.Blazor.AutoCompleteLocale" />.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.AutoCompleteLocale.NoRecordsTemplate">
            <summary>
            Gets or sets the NoRecordsTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.AutoCompleteLocale.ActionFailureTemplate">
            <summary>
            Gets or sets the ActionFailureTemplate property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.MultiSelectLocale">
            <summary>
            Defines the <see cref="T:Syncfusion.Blazor.MultiSelectLocale" />.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.MultiSelectLocale.NoRecordsTemplate">
            <summary>
            Gets or sets the NoRecordsTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.MultiSelectLocale.ActionFailureTemplate">
            <summary>
            Gets or sets the ActionFailureTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.MultiSelectLocale.OverflowCountTemplate">
            <summary>
            Gets or sets the OverflowCountTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.MultiSelectLocale.SelectAllText">
            <summary>
            Gets or sets the SelectAllText property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.MultiSelectLocale.UnSelectAllText">
            <summary>
            Gets or sets the UnSelectAllText property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.MultiSelectLocale.TotalCountTemplate">
            <summary>
            Gets or sets the TotalCountTemplate property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.ListBoxLocale">
            <summary>
            Defines the <see cref="T:Syncfusion.Blazor.ListBoxLocale" />.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ListBoxLocale.NoRecordsTemplate">
            <summary>
            Gets or sets the NoRecordsTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ListBoxLocale.ActionFailureTemplate">
            <summary>
            Gets or sets the ActionFailureTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ListBoxLocale.SelectAllText">
            <summary>
            Gets or sets the SelectAllText property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ListBoxLocale.UnSelectAllText">
            <summary>
            Gets or sets the UnSelectAllText property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ListBoxLocale.MoveUp">
            <summary>
            Gets or sets the MoveUp property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ListBoxLocale.MoveDown">
            <summary>
            Gets or sets the MoveDown property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ListBoxLocale.MoveTo">
            <summary>
            Gets or sets the MoveTo property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ListBoxLocale.MoveFrom">
            <summary>
            Gets or sets the MoveFrom property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ListBoxLocale.MoveAllTo">
            <summary>
            Gets or sets the MoveAllTo property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ListBoxLocale.MoveAllFrom">
            <summary>
            Gets or sets the MoveAllFrom property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerAjaxSettings">
            <summary>
            Defines the Ajaxsettings for the filemanager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerAjaxSettings.DownloadUrl">
            <summary>
            Specifies URL to download the files from server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerAjaxSettings.GetImageUrl">
            <summary>
            Specifies URL to get the images from server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerAjaxSettings.UploadUrl">
            <summary>
            Specifies URL to upload the files to server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerAjaxSettings.Url">
            <summary>
            Specifies URL to read the files from server.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerAjaxSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerColumn">
            <summary>
            Defines the columns settings for the each column in details view of filemanager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.ChildContent">
            <exclude/>
            <summary>
            Update child content from parent component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.AllowResizing">
            <summary>
            Allows to disables or enables resize option of a particular column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.AllowSorting">
            <summary>
            Allows to disables or enables sorting option of a particular column.
            By default all columns are sortable.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.CustomAttributes">
            <summary>
            The CSS styles and attributes of the content cells of a particular column can be customized.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.Field">
            <summary>
            Defines the field name of column which is mapped with mapping name of DataSource.
            The bounded columns can be sort, filter and group etc.,
            The `Field` name must be a valid JavaScript identifier,
            the first character must be an alphabet and should not contain spaces and special characters.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.Format">
            <summary>
            It is used to change display value with the given format and does not affect the original data.
            Gets the format from the user which can be standard or custom.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.HeaderTemplate">
            <summary>
            Defines the column template as string or HTML element ID which is used to add customized element in the column header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.HeaderText">
            <summary>
            Defines the header text of column which is used to display in column header.
            If `HeaderText` is not defined, then field name value will be assigned to header text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.HeaderTextAlign">
            <summary>
            Define the alignment of column header which is used to align the text of column header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.HideAtMedia">
            <summary>
            Column visibility can change based on Media Queries.
            HideAtMedia accepts only valid Media Queries.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.MaxWidth">
            <summary>
            Defines the maximum width of the column in pixel or percentage, which will restrict resizing beyond this pixel or percentage.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.MinWidth">
            <summary>
            Defines the minimum width of the column in pixels or percentage.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.Template">
            <summary>
            Defines the column template that renders customized element in each cell of the column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.TextAlign">
            <summary>
            Defines the alignment of the column in both header and content cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.Type">
            <summary>
            Defines the data type of the column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.Width">
            <summary>
            Defines the width of the column in pixels or percentage.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerColumn.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerColumns">
            <summary>
            Defines the columns settings for the details view of filemanager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumns.ChildContent">
            <exclude/>
            <summary>
            Update child content from parent component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerColumns.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerContextMenuSettings">
            <summary>
            Defines the context menu settings for the filemanager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerContextMenuSettings.File">
            <summary>
            Specifies the array of string that is used to configure file items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerContextMenuSettings.Folder">
            <summary>
            An array of string that is used to configure folder items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerContextMenuSettings.Layout">
            <summary>
            An array of string that is used to configure layout items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerContextMenuSettings.Visible">
            <summary>
            Enables or disables the ContextMenu.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerContextMenuSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerContextMenuSettings.OnParametersSetAsync">
            <summary>
            Method invoked when any changes in component state occurs.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerDetailsViewSettings">
            <summary>
            Defines the Details view settings of the FileManager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDetailsViewSettings.ChildContent">
            <exclude/>
            <summary>
            Update child content from parent component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDetailsViewSettings.ColumnResizing">
            <summary>
            If `ColumnResizing` is set to true, Grid columns can be resized.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDetailsViewSettings.Columns">
            <summary>
            Specifies the customizable details view.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerDetailsViewSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerEvents`1">
            <summary>
            Configure handlers to handle the events of the FileManager component.
            </summary>
            <typeparam name="TValue">TValue.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.BeforeDownload">
            <summary>
            Triggers before sending the download request to the server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.BeforeImageLoad">
            <summary>
            Triggers before sending the getImage request to the server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.BeforePopupClose">
            <summary>
            Triggers before the dialog is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.BeforePopupOpen">
            <summary>
            Triggers before the dialog is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.OnSend">
            <summary>
            Triggers before sending the AJAX request to the server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.Created">
            <summary>
            Triggers when the file manager component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.Destroyed">
            <summary>
            Triggers when the file manager component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.OnError">
            <summary>
            Triggers when the AJAX request is failed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.OnFileDragStart">
            <summary>
            Triggers when the file/folder dragging is started.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.OnFileDragStop">
            <summary>
            Triggers when the file/folder is about to be dropped at the target.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.FileDragging">
            <summary>
            Triggers while dragging the file/folder.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.FileDropped">
            <summary>
            Triggers when the file/folder is dropped.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.OnFileLoad">
            <summary>
            Triggers before the file/folder is rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.OnFileOpen">
            <summary>
            Triggers before the file/folder is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.FileSelected">
            <summary>
            Triggers when the file/folder is selected/unselected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.FileSelection">
            <summary>
            Triggers before the file/folder is selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.OnMenuClick">
            <summary>
            Triggers when the context menu item is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.MenuOpened">
            <summary>
            Triggers before the context menu is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.PopupClosed">
            <summary>
            Triggers when the dialog is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.PopupOpened">
            <summary>
            Triggers when the dialog is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.OnSuccess">
            <summary>
            Triggers when the AJAX request is success.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.ToolbarItemClicked">
            <summary>
            Triggers when the toolbar item is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.ToolbarCreated">
            <summary>
            Triggers before creating the toolbar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.UploadListCreated">
            <summary>
            Triggers before rendering each file item in upload dialog box.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerEvents`1.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerNavigationPaneSettings">
            <summary>
            Defines the navigation pane settings for the filemanager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerNavigationPaneSettings.MaxWidth">
            <summary>
            Specifies the maximum width of navigation pane.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerNavigationPaneSettings.MinWidth">
            <summary>
            Specifies the minimum width of navigation pane.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerNavigationPaneSettings.Visible">
            <summary>
            Enables or disables the visibility of the navigation pane.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerNavigationPaneSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerNavigationPaneSettings.OnParametersSetAsync">
            <summary>
            Method invoked when any changes in component state occurs.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerSearchSettings">
            <summary>
            Defines the search settings for the filemanager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerSearchSettings.ChildContent">
            <exclude/>
            <summary>
            Update child content from parent component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerSearchSettings.AllowSearchOnTyping">
            <summary>
            Enables or disables the allowSearchOnTyping.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerSearchSettings.FilterType">
            <summary>
            Specifies the filter type while searching the content. The available filter types are:
             `Contains`
             `StartsWith`
             `EndsWith`.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerSearchSettings.IgnoreCase">
            <summary>
            If ignoreCase is set to false, searches files that match exactly,
            else searches files that are case insensitive(uppercase and lowercase letters treated the same).
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerSearchSettings.Placeholder">
            <summary>
             Sets the placeholder value to search input of the File Manager component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerSearchSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerSearchSettings.OnParametersSetAsync">
            <summary>
            Method invoked when the component parameter changed.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerToolbarSettings">
            <summary>
            Defines the toolbar settings for the filemanager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerToolbarSettings.Items">
            <summary>
            An array of string or object that is used to configure the toolbar items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerToolbarSettings.Visible">
            <summary>
            Enables or disables the visibility of toolbar in the file manager component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerToolbarSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerToolbarSettings.OnParametersSetAsync">
            <summary>
            Method invoked when any changes in component state occurs.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerUploadSettings">
            <summary>
            Defines the upload settings for the filemanager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerUploadSettings.AllowedExtensions">
            <summary>
            Specifies the extensions of the file types allowed in the file manager component and pass the extensions with comma separators.
            For example, if you want to upload specific image files, pass allowedExtensions as ".jpg,.png".
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerUploadSettings.AutoClose">
            <summary>
            Defines whether to close the upload dialog after uploading all the files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerUploadSettings.AutoUpload">
            <summary>
            By default, the FileManager component initiates automatic upload when the files are added in upload queue.
            If you want to manipulate the files before uploading to server, disable the autoUpload property.
            The buttons "upload" and "clear" will be hided from file list when the autoUpload property is true.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerUploadSettings.MaxFileSize">
            <summary>
            Specifies the maximum allowed file size to be uploaded in bytes.
            The property is used to make sure that you cannot upload too large files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerUploadSettings.MinFileSize">
            <summary>
            Specifies the minimum file size to be uploaded in bytes.
            The property is used to make sure that you cannot upload empty files and small files.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerUploadSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.SfFileManager`1">
            <summary>
            This class hold constants of file manager.
            </summary>
            <summary>
            The SfFileManager is a graphical user interface component for managing the file system that allows the users to perform most common file operation like accessing, editing, and sorting the files and folders.
            </summary>
            <summary>
            This class holds the property members of file manager.
            </summary>
            <summary>
            This class holds the methods required to execute file manager functionalities.
            </summary>
            <summary>
            This class holds the methods for file manager operation functionalities.
            </summary>
            <summary>
            The SfFileManager is a graphical user interface component for managing the file system that allows the users to perform most common file operations
            like accessing, editing, and sorting the files and folders.
            </summary>
            <typeparam name="TValue"> The generic type parameter.</typeparam>
            <summary>
            This class holds the filemanager actions methods.
            </summary>
            <summary>
            This class contains the filemanager utitility functionalities.
            </summary>
            <summary>
            This class contains the toolbar operation functionalities of filemanager.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.OnParametersSetAsync">
            <summary>
            Method invoked when any changes in component state occurs.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>Task.</returns>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.ID">
            <summary>
            Specifies the ID value of the file manager element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.ChildContent">
            <exclude/>
            <summary>
            Update child content from parent component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.AjaxSettings">
            <summary>
            Specifies the AJAX settings of the file manager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.AllowDragAndDrop">
            <summary>
            Enables or disables drag-and-drop of files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.AllowMultiSelection">
            <summary>
            Enables or disables the multiple files selection of the file manager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.ContextMenuSettings">
            <summary>
            Specifies the context menu settings of the file manager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.CssClass">
            <summary>
            Specifies the root CSS class of the file manager that allows you to customize the appearance by overriding the styles.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.DetailsViewSettings">
            <summary>
            Specifies the details view settings of the file manager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.EnablePersistence">
            <summary>
            Enables or disables persisting component's state between page reloads. If enabled, the following APIs will persist:
            1. `View`: Represents the previous view of the file manager.
            2. `path`: Represents the previous path of the file manager.
            3. `selectedItems`: Represents the previous selected items in the file manager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.Height">
            <summary>
            Specifies the height of the file manager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.NavigationPaneSettings">
            <summary>
            Specifies the navigationpane settings of the file manager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.Path">
            <summary>
            Specifies the current path of the file manager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.PopupTarget">
            <summary>
            Specifies the target element in which the file manager's dialog will be displayed.
            The default value is null, which refers to the File Manager element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.RootAliasName">
            <summary>
            Specifies the root folder alias name in file manager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.SearchSettings">
            <summary>
            Specifies the search settings of the file manager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.SelectedItems">
            <summary>
            Specifies the selected folders and files name of the  file manager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.SelectedItemsChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.ShowFileExtension">
            <summary>
            Shows or hides the file extension in file manager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.ShowHiddenItems">
            <summary>
            Shows or hides the files and folders that are marked as hidden.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.ShowThumbnail">
            <summary>
            Shows or hides the thumbnail images in largeicons view.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.SortOrder">
            <summary>
            Specifies a value that indicates whether the folders and files are sorted in the ascending or descending order,
            or they are not sorted at all. The available types of sort orders are,
            `None` - Indicates that the folders and files are not sorted.
            `Ascending` - Indicates that the folders and files are sorted in the ascending order.
            `Descending` - Indicates that the folders and files are sorted in the descending order.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.ToolbarSettings">
            <summary>
            Specifies the group of items aligned horizontally in the toolbar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.UploadSettings">
            <summary>
            Specifies the upload settings for the file manager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.View">
            <summary>
            Specifies the initial view of the file manager.
            With the help of this property, initial view can be changed to details or largeicons view. The available views are:
             `LargeIcons`
             `Details`.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.ViewChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.Width">
            <summary>
            Specifies the width of the file manager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as title, native events etc., to the file manager element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.ClearSelection">
            <summary>
            Deselects the currently selected folders and files in current path.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.ClearSelectionAsync">
            <summary>
            Deselects the currently selected folders and files in current path.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.CreateFolder(System.String)">
            <summary>
            Creates a new folder in file manager.
            </summary>
            <param name="folderName"> Specifies the folder name parameter.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.CreateFolderAsync(System.String)">
            <summary>
            Creates a new folder in file manager.
            </summary>
            <param name="folderName"> Specifies the folder name parameter.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.DeleteFiles(System.String[])">
            <summary>
            Deletes the folders or files from the given unique identifiers.
            </summary>
            <param name="deleteFiles"> Specifies the file name parameter to be deleted.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.DeleteFilesAsync(System.String[])">
            <summary>
            Deletes the folders or files from the given unique identifiers.
            </summary>
            <param name="deleteFiles"> Specifies the file name parameter to be deleted.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.DisableMenuItems(System.String[])">
            <summary>
            Disables the specified context menu items in file manager. This method is used only in the menuOpen event.
            </summary>
            <param name="menuItems"> Specifies the menu item arguement to be disabled.</param>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.DisableToolbarItems(System.String[])">
            <summary>
            Disables the specified toolbar items of the file manager.
            </summary>
            <param name="toolbarItems"> Specifies the toolbar items parameter to be disabled.</param>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.DownloadFiles(System.String[])">
            <summary>
            Downloads the folders or files from the given unique identifiers.
            </summary>
            <param name="downloadFiles"> Specifies the files names to be downloaded.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.DownloadFilesAsync(System.String[])">
            <summary>
            Downloads the folders or files from the given unique identifiers.
            </summary>
            <param name="downloadFiles"> Specifies the files names to be downloaded.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.EnableToolbarItems(System.String[])">
            <summary>
            Enables the specified toolbar items of the file manager.
            </summary>
            <param name="toolbarItems">Specifies toolbar items to be enabled.</param>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.FilterFiles(System.Collections.Generic.List{`0})">
            <summary>
            Display the custom filtering files in file manager.
            </summary>
            <param name="filterData">Specifies file(s)/folder(s) to be filtered.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.FilterFilesAsync(System.Collections.Generic.List{`0})">
            <summary>
            Display the custom filtering files in file manager.
            </summary>
            <param name="filterData">Specifies file(s)/folder(s) to be filtered.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetMenuItemIndex(System.String)">
            <summary>
            Returns the index position of given current context menu item in file manager.
            </summary>
            <param name="item">Specifies menu item to get its index.</param>
            <returns>int.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetSelectedFiles">
            <summary>
            Gets the details of the selected files in the file manager.
            </summary>
            <returns>List.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetToolbarItemIndex(System.String)">
            <summary>
            Returns the index position of given toolbar item in file manager.
            </summary>
            <param name="item">Specifies item to get toolbar item index.</param>
            <returns>int.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.OpenFile(System.String)">
            <summary>
            Opens the corresponding file or folder from the given unique identifier.
            </summary>
            <param name="file">Specifies file to be opened.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.OpenFileAsync(System.String)">
            <summary>
            Opens the corresponding file or folder from the given unique identifier.
            </summary>
            <param name="file">Specifies file to be opened.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.RefreshFiles">
            <summary>
            Refreshes the folder files of the file manager.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.RefreshFilesAsync">
            <summary>
            Refreshes the folder files of the file manager.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.RefreshLayout">
            <summary>
            Refreshes the layout of the file manager.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.RefreshLayoutAsync">
            <summary>
            Refreshes the layout of the file manager.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.RenameFile(System.String,System.String)">
            <summary>
            Renames the file or folder with given new name in file manager.
            </summary>
            <param name="renameFile">Specifies rename files.</param>
            <param name="name">Specifies new name for renaming file.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.RenameFileAsync(System.String,System.String)">
            <summary>
            Renames the file or folder with given new name in file manager.
            </summary>
            <param name="renameFile">Specifies rename files.</param>
            <param name="name">Specifies new name for renaming file.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.SelectAll">
            <summary>
            Selects the entire folders and files in current path.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.SelectAllAsync">
            <summary>
            Selects the entire folders and files in current path.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.UploadFiles">
            <summary>
            Opens the upload dialog in file manager.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.UploadFilesAsync">
            <summary>
            Opens the upload dialog in file manager.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.UpdateChildProperties(System.String,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Updates the child property of the component.
            </summary>
            <param name="key">Specifies the key parameter.</param>
            <param name="propValue">Specifies the property value.</param>
            <param name="isDynamicPropUpdate"> Parameter to check dynamic property update or not.</param>
            <param name="isVisibleChanged">Parameter to check visibility state is changed or not.</param>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.Paste(`0,System.String[],System.Boolean)">
            <summary>
            Performs paste operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetDataPermisson(System.String,System.Collections.Generic.List{`0})">
            <summary>
            Returns the permission for actions to be performed for a file data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.ActionDenied(System.String,System.String)">
            <summary>
            Returns the access denied message for file operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.CopyDenied">
            <summary>
            Checks for permission to perform copy operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.PerformOperation(System.String,System.Boolean)">
            <summary>
            Performs operation on files.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetItemPrefixIcon(System.String,Syncfusion.Blazor.FileManager.ViewType)">
            <summary>
            return the prefix icon for each item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetValue(System.String,`0)">
            <summary>
            Return the required Data from the Ttype.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.FileType(`0)">
            <summary>
            Returns the icon class for listbase data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetPermission(`0)">
            <summary>
            Returns the permission data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetDataKey(`0)">
            <summary>
            Generates the data key for each file data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.UpdateDefaultLocaleValue">
            <summary>
            Updates the default locale value.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetDefaultFormat">
            <summary>
            Method to get the default format based on culture, if none specified.
            </summary>
            <returns>Returns string format.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetDefaultCulture">
            <summary>
            Method to get the default cultureinfo.
            </summary>
            <returns>Cultureinfo.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetClass">
            <summary>
            Returns class to be added to the root element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetProperties">
            <summary>
            Returns class to be added to the root element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetDataId(`0)">
            <summary>
            Generates unique data id for each file data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetDataWithId(System.String)">
            <summary>
            Returns the data for the provided unique id.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.SetDataWithId(System.String,`0)">
            <summary>
            Returns the data for the provided unique id.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.ReRenderComponent">
            <summary>
            Rerenders the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.CheckItemOnClick(System.String,System.String[])">
            <summary>
            Getting the item clicked based on locale value.
            </summary>
            <param name="text"> Specifies item text.</param>
            <param name="items"> Specifies item details.</param>
            <returns>string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.UpdateSelectedItems(System.Collections.Generic.List{`0},Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Boolean)">
            <summary>
            Updates the selected items of the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.UpdateSorting(System.String,Syncfusion.Blazor.FileManager.SortOrder)">
            <summary>
            Sorts data based on the field value.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.ChangePath(System.String)">
            <summary>
            Updates the path during navigation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.OnSplitterClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Click event handler for splitter.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.DialogClose(System.Boolean,System.String,System.Boolean)">
            <summary>
            Closes the dialog after performing operations.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.UpdateDataKey(System.String,System.String,System.String,`0)">
            <summary>
            Updates the data key for each file data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.OpenContextMenu(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Finds the exact target and opens the context menu.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.ChangeMobileMultiSelection(System.String)">
            <summary>
            Performs mobile multiselection opertaion.
            </summary>
            <param name="dataId">Specifies the data id parameter.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.PerformTreeViewKeyboardAction(System.String)">
            <exclude/>
            <summary>
            Performs keyboard actions.
            </summary>
            <param name="action">Specifies the action parameter.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.PerformKeyboardAction(System.String)">
            <exclude/>
            <summary>
            Performs keyboard actions.
            </summary>
            <param name="action">Specifies the action parameter.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.IsImage(`0)">
            <summary>
            Returns whether the file is image or not.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.UpdateViewData(`0,System.Boolean)">
            <summary>
            Updates the data on file navigation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.SetLocalStorage(System.String,System.String)">
            <summary>
            Update the Persistence value to local storage.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.SerializeModel">
            <summary>
            Updating the persisting values to our component properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.SetCurrentDirectoryPermission">
            <summary>
            Returns the permission for current directory.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.UploadRetry(System.String)">
            <summary>
            Retry upload operation when issue occurs on file upload.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.DragStartCall(System.Double,System.Double)">
            <summary>
            Server call for drag start operation.
            </summary>
            <param name="left"> Specifies the left coordinates.</param>
            <param name="top"> Specifies the top coordinates.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.DraggingCall(System.Double,System.Double)">
            <summary>
            Server call for drag start operation.
            </summary>
            <param name="left"> Specifies the left coordinates.</param>
            <param name="top"> Specifies the top coordinates.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.DragStopCall(System.String,System.String,System.String,System.String,System.Boolean,System.Double,System.Double)">
            <summary>
            Server call for drag stop operation.
            </summary>
            <param name="dragDataId">Specifies the drag data id.</param>
            <param name="dropDataId">Specifies the drop data id.</param>
            <param name="targetModule">Specifies the target module.</param>
            <param name="activeModule">Specifies the active module.</param>
            <param name="isLayout">Specifies layout parameter.</param>
            <param name="left"> Specifies the left coordinates.</param>
            <param name="top"> Specifies the top coordinates.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.Read``1(``0[],``0,System.String,Syncfusion.Blazor.FileManager.FileManagerAjaxSettings,System.Boolean)">
            <summary>
            Performs read operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.Create``1(``0[],``0,System.String,System.String,Syncfusion.Blazor.FileManager.FileManagerAjaxSettings,System.Boolean)">
            <summary>
            Performs new folder operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.Rename``1(``0[],``0,System.String,System.String,System.String,Syncfusion.Blazor.FileManager.FileManagerAjaxSettings,System.Boolean)">
            <summary>
            Performs rename operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.Search``1(``0[],``0,System.String,Syncfusion.Blazor.FileManager.FileManagerAjaxSettings,System.Boolean,System.Boolean,System.String)">
            <summary>
            Performs search operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.Delete``1(``0[],``0,System.String,Syncfusion.Blazor.FileManager.FileManagerAjaxSettings,System.Boolean,System.String[])">
            <summary>
            Performs delete operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.Paste``1(System.String,``0[],System.String,System.String,Syncfusion.Blazor.FileManager.FileManagerAjaxSettings,``0,System.String[],System.String[],System.Boolean)">
            <summary>
            Performs paste operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.Details``1(System.String,``0[],System.String,Syncfusion.Blazor.FileManager.FileManagerAjaxSettings,``0,System.String[],System.Boolean)">
            <summary>
            Performs get details operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.Filter``1(``0[],``0,System.String,Syncfusion.Blazor.FileManager.FileManagerAjaxSettings,System.Boolean)">
            <summary>
            Performs filtering operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetItemId(System.String)">
            <summary>
            Return the id of each toolbar item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetToolbarItemPrefixIcon(System.String)">
            <summary>
            Return the icon css for toolbar item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetPopupId(System.String)">
            <summary>
            Return the id of each popup item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetMenuID(System.String)">
            <summary>
            Return the id of each menu item.
            </summary>.
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetViewPopupAttributes(Syncfusion.Blazor.FileManager.ViewType)">
            <summary>
            Return attributes value of the root element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.ToolbarChangeView(Syncfusion.Blazor.FileManager.ViewType)">
            <summary>
            Change view item click hander.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.DropDownButtonOpen(Syncfusion.Blazor.SplitButtons.BeforeOpenCloseMenuEventArgs)">
            <summary>
            Toolbar change DropDownButton OnOpen handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.SortItemSelected(Syncfusion.Blazor.SplitButtons.MenuEventArgs)">
            <summary>
            Sort item cick handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.SortByClick(System.String,Syncfusion.Blazor.FileManager.SortOrder)">
            <summary>
            Performs sorting operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.OnToolBarItemClick(Syncfusion.Blazor.Navigations.ClickEventArgs)">
            <summary>
            Event hanlder for toolbar item click.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.SortOrder">
            <summary>
            Defines the sorting order of the folders and files.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.SortOrder.Ascending">
            <summary>
            Indicates that the folders and files are sorted in the ascending order in FileManager component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.SortOrder.Descending">
            <summary>
            Indicates that the folders and files are sorted in the descending order.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.SortOrder.None">
            <summary>
            Indicates that the folders and files are not sorted.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ViewType">
            <summary>
            Defines the view type of the FileManager.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.ViewType.LargeIcons">
            <summary>
            To display the folders and files in the large icon view.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.ViewType.Details">
            <summary>
            To display the folders and files in the details view.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.TextAlign">
            <summary>
            Defines alignments of text.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.TextAlign.Left">
            <summary>
            Represents the text alignment as left. The text content will be shown in the left side.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.TextAlign.Right">
            <summary>
            Represents the text alignment as Right. The text content will be shown in the right side.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.TextAlign.Center">
            <summary>
            Represents the text alignment as Center. The text content will be shown at the center.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.TextAlign.Justify">
            <summary>
            Represents the text alignment as Justify. The text will be aligned along the left margin.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FilterType">
            <summary>
            Specifies the filter type for Search settings of the File Manager.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.FilterType.Contains">
            <summary>
            Search the folders or files name which contains the typed characters.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.FilterType.StartsWith">
            <summary>
            Search the folders or files name which starts with the typed characters.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.FilterType.EndsWith">
            <summary>
            Search the folders or files name which ends with the typed characters.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ClipMode">
            <summary>
            Defines the cell content's overflow mode. The available modes are
             `Clip` -  Truncates the cell content when it overflows its area.
             `Ellipsis` -  Displays ellipsis when the cell content overflows its area.
             `EllipsisWithTooltip` - Displays ellipsis when the cell content overflows its area
            also it will display tooltip while hover on ellipsis applied cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.ClipMode.Clip">
            <summary>
            Truncates the cell content when it overflows its area.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.ClipMode.Ellipsis">
            <summary>
            Displays ellipsis when the cell content overflows its area.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.ClipMode.EllipsisWithTooltip">
            <summary>
            Displays ellipsis when the cell content overflows its area.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.AccessPermission">
            <summary>
            Class for File Access Permission.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.AccessPermission.Copy">
            <summary>
            Return the current item having copy permission or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.AccessPermission.Download">
            <summary>
            Return the current item having download permission or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.AccessPermission.Write">
            <summary>
            Return the current item having write permission or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.AccessPermission.WriteContents">
            <summary>
            Return the current item having WriteContents permission or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.AccessPermission.Read">
            <summary>
            Return the current item having read permission or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.AccessPermission.Upload">
            <summary>
            Return the current item having upload permission or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.AccessPermission.Message">
            <summary>
            Return the current item permission message.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerResponse`1">
            <summary>
            Class for FileManager Response data.
            </summary>
            <typeparam name="T">The generic type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerResponse`1.CWD">
            <summary>
            Specifies the current directory details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerResponse`1.Files">
            <summary>
            Specifies the details of the files/folders in the directory.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerResponse`1.Error">
            <summary>
            Specifies the error details with the response.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerResponse`1.Details">
            <summary>
            Specifies the details of the files/folder.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent">
            <summary>
            Class for File Manager Directory content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.Path">
            <summary>
            Specify the path for File Manager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.Action">
            <summary>
            Specify the corresponding File Operation name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.NewName">
            <summary>
            Specify the Rename operation for new name value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.Names">
            <summary>
            Specify the selected items value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.Name">
            <summary>
            Specify the selected item value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.Size">
            <summary>
            Specify the selected item size value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.PreviousName">
            <summary>
            Specify the Rename operation for previous name value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.DateModified">
            <summary>
            Specify the file item date modified value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.DateCreated">
            <summary>
            Specify the file item date created value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.HasChild">
            <summary>
            Specify the file file item having child or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.IsFile">
            <summary>
            Specify the file item is file or folder.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.Type">
            <summary>
            Specify the file item Type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.Id">
            <summary>
            Specify the file item Id.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.FilterPath">
            <summary>
            Specify the file item filter path.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.FilterId">
            <summary>
            Specify the file item filter id.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.ParentId">
            <summary>
            Specify the file item parent id.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.TargetPath">
            <summary>
            Specify the file item target path.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.RenameFiles">
            <summary>
            Specify the renamed item file names.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.CaseSensitive">
            <summary>
            Specify the file item case sensitive.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.SearchString">
            <summary>
            Specify the file item search string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.ShowHiddenItems">
            <summary>
            Specify the permission for view the value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.Data">
            <summary>
            Specify the data for file items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.TargetData">
            <summary>
            Specify the target data for file items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.Permission">
            <summary>
            Specify the permission for file items.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.DownloadData`1">
            <summary>
            Class for DownloadData.
            </summary>
            <typeparam name="TValue">The generic type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.DownloadData`1.Path">
            <summary>
            Specifies the path in which download operation is performed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.DownloadData`1.Names">
            <summary>
            Specifies the names of the downloading files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.DownloadData`1.DownloadFileDetails">
            <summary>
            Specifies file details of the downloading files.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.BeforeDownloadEventArgs`1">
            <summary>
            Class for BeforeDownload event arguments.
            </summary>
            <typeparam name="TValue">The generic type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforeDownloadEventArgs`1.Cancel">
            <summary>
            If you want to cancel this event then, set cancel to true. Otherwise, false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforeDownloadEventArgs`1.Data">
            <summary>
            Specifies the data to be sent to server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforeDownloadEventArgs`1.DownloadData">
            <summary>
            Specifies the data to be sent to server.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.BeforeImageLoadEventArgs`1">
            <summary>
            Class for BeforeImageLoad event arguments.
            </summary>
            <typeparam name="TValue">The generic type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforeImageLoadEventArgs`1.FileDetails">
            <summary>
            Return the current rendering image item as an array of JSON object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforeImageLoadEventArgs`1.ImageUrl">
            <summary>
            Specifies the URL along with custom attributes to be sent to server.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.BeforePopupOpenCloseEventArgs">
            <summary>
            Class for BeforePopupOpenClose event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforePopupOpenCloseEventArgs.Cancel">
            <summary>
            Prevents the dialog from opening when it is set to true.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforePopupOpenCloseEventArgs.PopupModule">
            <summary>
            Returns the current dialog component instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforePopupOpenCloseEventArgs.PopupName">
            <summary>
            Returns the current dialog action name.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.BeforeSendEventArgs">
            <summary>
            Class for BeforeSend event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforeSendEventArgs.Action">
            <summary>
            Return the name of the AJAX action will be performed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforeSendEventArgs.AjaxSettings">
            <summary>
            Return the AJAX details, which are send to server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforeSendEventArgs.CustomData">
            <summary>
            Defines the custom data to be passed to the service.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforeSendEventArgs.HttpClientInstance">
            <summary>
            HttpClient instance through which http request for the file providers are sent.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforeSendEventArgs.Cancel">
            <summary>
            If you want to cancel this event then, set cancel to true. Otherwise, false.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ErrorDetails">
            <summary>
            Class for Error Details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ErrorDetails.Code">
            <summary>
            Specifies the Error code.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ErrorDetails.Message">
            <summary>
            Specifies the Error Message.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ErrorDetails.FileExists">
            <summary>
            Specifies whether the issue occurs since the file/folder already exist in the current path.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FailureEventArgs">
            <summary>
            Class for Failure event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FailureEventArgs.Action">
            <summary>
            Return the name of the AJAX action will be performed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FailureEventArgs.Error">
            <summary>
            Return the AJAX details, which are send to server.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileDetails">
            <summary>
            Class for File details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDetails.Created">
            <summary>
            Specify the file item created value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDetails.IsFile">
            <summary>
            Specify the file item is file or folder.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDetails.Location">
            <summary>
            Specify the file item location.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDetails.Modified">
            <summary>
            Specify the file item modified.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDetails.MultipleFiles">
            <summary>
            Specify the file items contains more than one value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDetails.Name">
            <summary>
            Specify the file item name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDetails.Permission">
            <summary>
            Specify the file item permission.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDetails.Size">
            <summary>
            Specify the file item size.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileDragEventArgs`1">
            <summary>
            Class for Drag Event arguments.
            </summary>
            <typeparam name="TValue">The generic type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDragEventArgs`1.Cancel">
            <summary>
            If you want to cancel this event then, set cancel to true. Otherwise, false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDragEventArgs`1.Element">
            <summary>
            Specifies the current drag element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDragEventArgs`1.Event">
            <summary>
            Specifies the actual event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDragEventArgs`1.FileDetails">
            <summary>
            Return the current items as an array of JSON object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDragEventArgs`1.Left">
            <summary>
            Return the Client X value of target element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDragEventArgs`1.Top">
            <summary>
            Return the Client Y value of target element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileLoadEventArgs`1">
            <summary>
            Class for FileLoad event arguments.
            </summary>
            <typeparam name="TValue">The generic type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileLoadEventArgs`1.Element">
            <summary>
            Return the current rendering item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileLoadEventArgs`1.FileDetails">
            <summary>
            Return the current rendering item as JSON object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileLoadEventArgs`1.Module">
            <summary>
            Return the name of the rendering module in File Manager.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileOpenEventArgs`1">
            <summary>
            Class for FileOpen event arguments.
            </summary>
            <typeparam name="TValue">The generic type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileOpenEventArgs`1.Cancel">
            <summary>
            If you want to cancel this event then, set cancel to true. Otherwise, false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileOpenEventArgs`1.FileDetails">
            <summary>
            Return the currently selected item as JSON object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileOpenEventArgs`1.Module">
            <summary>
            Returns the name of the target module in file manager.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileSelectEventArgs`1">
            <summary>
            Class for FileSelect event arguments.
            </summary>
            <typeparam name="TValue">The generic type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileSelectEventArgs`1.Action">
            <summary>
            Return the name of action like select or unselect.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileSelectEventArgs`1.FileDetails">
            <summary>
            Return the currently selected item as JSON object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileSelectEventArgs`1.IsInteracted">
            <summary>
            Defines whether event is triggered by interaction or not.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileSelectionEventArgs`1">
            <summary>
            Class for FileSelection event arguments.
            </summary>
            <typeparam name="TValue">TValue.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileSelectionEventArgs`1.Action">
            <summary>
            Return the name of action like select or unselect.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileSelectionEventArgs`1.Cancel">
            <summary>
            Defines the cancel selected file or folder.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileSelectionEventArgs`1.FileDetails">
            <summary>
            Return the currently selected item as JSON object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileSelectionEventArgs`1.IsInteracted">
            <summary>
            Defines whether event is triggered by interaction or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileSelectionEventArgs`1.Event">
            <summary>
            Defines the Mouse Event
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileSelectionEventArgs`1.Target">
            <summary>
            Specifies the actual target.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.MenuClickEventArgs`1">
            <summary>
            Class for MenuClick event arguments.
            </summary>
            <typeparam name="TValue">TValue.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuClickEventArgs`1.Cancel">
            <summary>
            If you want to cancel this event then, set cancel to true. Otherwise, false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuClickEventArgs`1.FileDetails">
            <summary>
            Return the currently selected folder/file items as an array of JSON object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuClickEventArgs`1.Item">
            <summary>
            Return the currently clicked context menu item as JSON object.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.MenuOpenEventArgs`1">
            <summary>
            Class for MenuOpen event arguments.
            </summary>
            <typeparam name="TValue">TValue.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuOpenEventArgs`1.Cancel">
            <summary>
            If you want to cancel this event then, set cancel to true. Otherwise, false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuOpenEventArgs`1.Element">
            <summary>
            Returns the current context menu element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuOpenEventArgs`1.FileDetails">
            <summary>
            Returns the target folder/file item as an array of JSON object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuOpenEventArgs`1.IsSubMenu">
            <summary>
            Returns whether the current context menu is sub-menu or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuOpenEventArgs`1.Items">
            <summary>
            Returns the current context menu items as JSON object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuOpenEventArgs`1.MenuModule">
            <summary>
            Returns the instance of context menu component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuOpenEventArgs`1.MenuType">
            <summary>
            Returns the current context menu type based on current target.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuOpenEventArgs`1.Target">
            <summary>
            Returns the target element of context menu.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.PopupOpenCloseEventArgs">
            <summary>
            Class for PopupOpenClose event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.PopupOpenCloseEventArgs.Element">
            <summary>
            Returns the current dialog element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.PopupOpenCloseEventArgs.PopupModule">
            <summary>
            Returns the current dialog component instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.PopupOpenCloseEventArgs.PopupName">
            <summary>
            Returns the current dialog action name.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.SuccessEventArgs`1">
            <summary>
            Class for Success event arguments.
            </summary>
            <typeparam name="TValue">TValue.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SuccessEventArgs`1.Action">
            <summary>
            Return the name of the AJAX action will be performed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SuccessEventArgs`1.Result">
            <summary>
            Return the AJAX details which are send to server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SuccessEventArgs`1.UploadResult">
            <summary>
            Return the result of the upload operation.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ToolbarClickEventArgs`1">
            <summary>
            Class for ToolbarClick event arguments.
            </summary>
            <typeparam name="TValue">TValue.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolbarClickEventArgs`1.Cancel">
            <summary>
            If you want to cancel this event then, set cancel to true. Otherwise, false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolbarClickEventArgs`1.FileDetails">
            <summary>
            Return the currently selected folder/file items as an array of JSON object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolbarClickEventArgs`1.Item">
            <summary>
            Return the currently clicked toolbar item as JSON object.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ToolBarItemModel">
            <summary>
            Class for a Toolbar item model.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.Click">
            <summary>
            Event triggers when `click` the toolbar item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.Align">
            <summary>
            Specifies the location for aligning Toolbar items on the Toolbar. Each command will be aligned according to the `align` property.
            Possible values are:
            - Left: To align commands to the left side of the Toolbar.
            - Center: To align commands at the center of the Toolbar.
            - Right: To align commands to the right side of the Toolbar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.CssClass">
            <summary>
            Defines single/multiple classes (separated by space) to be used for customization of commands.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.Disabled">
            <summary>
            Specifies whether an item should be disabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.HtmlAttributes">
            <summary>
            Defines htmlAttributes used to add custom attributes to Toolbar command.
            Supports HTML attributes such as style, class, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.Id">
            <summary>
            Specifies the unique ID to be used with button or input element of Toolbar items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.Overflow">
            <summary>
            Specifies the Toolbar command display area when an element's content is too large to fit available space.
            This is applicable only to `popup` mode. Possible values are:
            - Show:  Always shows the item as the primary priority on the Toolbar.
            - Hide: Always shows the item as the secondary priority on the popup.
            - None: No priority for display, and as per normal order moves to popup when content exceeds.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.PrefixIcon">
            <summary>
            Defines single/multiple classes separated by space used to specify an icon for the button.
            The icon will be positioned before the text content if text is available, otherwise the icon alone will be rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.ShowAlwaysInPopup">
            <summary>
            Defines the priority of items to display it in popup always.
            It allows to maintain toolbar item on popup always but it does not work for toolbar priority items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.ShowTextOn">
            <summary>
            Specifies where the button text will be displayed on popup mode of the Toolbar.
            Possible values are:
            - Toolbar:  Text will be displayed on Toolbar only.
            - Overflow: Text will be displayed only when content overflows to popup.
            - Both: Text will be displayed on popup and Toolbar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.SuffixIcon">
            <summary>
            Defines single/multiple classes separated by space used to specify an icon for the button.
            The icon will be positioned after the text content if text is available.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.Template">
            <summary>
            Specifies the HTML element/element ID as a string that can be added as a Toolbar command.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.Text">
            <summary>
            Specifies the text to be displayed on the Toolbar button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.TooltipText">
            <summary>
            Specifies the text to be displayed on hovering the Toolbar button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.Type">
            <summary>
            Specifies the types of command to be rendered in the Toolbar.
            Supported types are:
            - Button: Creates the Button control with its given properties like text, prefixIcon, etc.
            - Separator: Adds a horizontal line that separates the Toolbar commands.
            - Input: Creates an input element that is applicable to template rendering with Syncfusion controls like DropDownList,
            AutoComplete, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.Visible">
            <summary>
            Specifies whether an item should be hidden or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.Width">
            <summary>
            Specifies the width of the Toolbar button commands.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuItemModel.ChildContent">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuItemModel.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the menu Item that is used to include an icon.
            Menu Item can include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuItemModel.Id">
            <summary>
            Specifies the id for menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuItemModel.Items">
            <summary>
            Specifies the sub menu items that is the array of MenuItem.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuItemModel.Separator">
            <summary>
            Specifies separator between the menu items. Separator are either horizontal or vertical lines used to group menu items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuItemModel.Disabled">
            <summary>
            Used to enable or disable the menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuItemModel.Hidden">
            <summary>
            Used to hide or show the menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuItemModel.Text">
            <summary>
            Specifies text for menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuItemModel.Url">
            <summary>
            Specifies URL for menu item that creates the anchor link to navigate to the url provided.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuItemModel.HtmlAttributes">
            <summary>
            You can add the additional HTML attributes such as style, title etc., to the menu item
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ToolbarCreateEventArgs">
            <summary>
            Class for ToolbarCreate event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolbarCreateEventArgs.Items">
            <summary>
            Return an array of items that is used to configure toolbar content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ActionEventArgs">
            <summary>
            Specifies class for denotes the event name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ActionEventArgs.Name">
            <summary>
            Return the Event name.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.UploadListCreateArgs">
            <summary>
            Class for UploadListCreate event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.UploadListCreateArgs.Element">
            <summary>
            Return the current file item element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.UploadListCreateArgs.FileInfo">
            <summary>
            Return the current rendering file item data as file object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.UploadListCreateArgs.Index">
            <summary>
            Return the index of the file item in the file list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.UploadListCreateArgs.IsPreload">
            <summary>
            Return whether the file is preloaded.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ValidationMessages">
            <summary>
            Class for min / max size validation messages.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ValidationMessages.MaxSize">
            <summary>
            Returns the maximum file size validation message, if selected file size is less than specified maxFileSize property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ValidationMessages.MinSize">
            <summary>
            Returns the minimum file size validation message, if selected file size is less than the specified minFileSize property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.Internal.IFileManager">
            <summary>
            Interface for SfFileManager.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.IFileManager.UpdateChildProperties(System.String,System.Object,System.Boolean,System.Boolean)">
            <summary>
            This method updates the child properties of file manager.
            </summary>
            <param name="key">Specifies the key parameter.</param>
            <param name="propValue">Specifies the property value parameter.</param>
            <param name="isDynamicPropUpdate">Specifies the parameter to check dynamic property update.</param>
            <param name="isVisibleChanged">Specifies the paramter to check the visibility.</param>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1">
            <summary>
            This class holds contextmenu operations required functionalities.
            </summary>
            <typeparam name="TValue">Generic TValue parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.CssClass">
            <summary>
            The `CssClass` property is used to add a user-preferred class name in the root element of the context menu.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.ID">
            <summary>
            The `ID` property is used to set id for context menu.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.MenuItemsValue">
            <summary>
            The `MenuItemsValue` property is to set menu item values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.FileManagerContextMenuIsLayout">
            <summary>
            The `isLayout` property is to check the layout of filemanager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.FileManagerContextMenuType">
            <summary>
            The `type` property is to set type for context menu.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.GetMenuID(System.String)">
            <summary>
            Return the id of each menu item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.GetItemPrefixIcon(System.String)">
            <summary>
            Return the prefix icon for the item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.BeforeMenuOpen(Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs{Syncfusion.Blazor.Navigations.MenuItem})">
            <summary>
            Updating the menu items before close.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.OpenContextMenu(System.Double,System.Double,Syncfusion.Blazor.FileManager.Internal.MenuOpenModel)">
            <summary>
            Opening the context menu and updating the menu items based target.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.GetItemLocaleValue(System.String)">
            <summary>
            Return the locale value for each item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.GetMenuItems">
            <summary>
            Returns the menu Items.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.SortByClick(System.String,Syncfusion.Blazor.FileManager.SortOrder)">
            <summary>
            Sortby menu item click handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.OnItemSelect(Syncfusion.Blazor.Navigations.MenuEventArgs{Syncfusion.Blazor.Navigations.MenuItem})">
            <summary>
            Item select event handler.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.Internal.FileManagerDialog`1">
            <summary>
            This class holds filemanager dialog operations.
            </summary>
            <typeparam name="TValue">Generic type paramater.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerDialog`1.DialogName">
            <summary>
            The `DialogName` property is used set dialog name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerDialog`1.ID">
            <summary>
            The `Id` property is used set id.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerDialog`1.CssClass">
            <summary>
            The `CssClass` property is used set custom class in the root element of Dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerDialog`1.ResponseData">
            <summary>
            The `ResponseData` property is used set response data.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1">
            <summary>
            This class contains the methods for breadcrumbar functionalities.
            </summary>
            <typeparam name="TValue">Generic Type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.Parent">
            <summary>
            Specifies the instance object of the parent component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.ID">
            <summary>
            This `ID` property is used to set Id for breadcrumbar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.SearchID">
            <summary>
            This `SearchID` property is used to set search id for input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.CurrentDirectory">
            <summary>
            This `CurrentDirectory` property is used to set current directory.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.RootDirectoryName">
            <summary>
            This `RootDirectoryName` property is used to root directory name.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.OnParametersSetAsync">
            <summary>
            Method invoked when any changes in component state occurs.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.GetSearchAttributes">
            <summary>
            Adds attribute for search textbox in FileManager component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.GetRootAttribute(System.String,System.Boolean)">
            <summary>
            Adds attribute for each li in bread crumb bar.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.GetFileList">
            <summary>
            Obtains the files list from the response data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.OnChange(Syncfusion.Blazor.Inputs.InputEventArgs)">
            <summary>
            Search input change event handler to perform search operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.GetSearchString(System.String)">
            <summary>
            Get string for search settings.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.BreadCrumbRootClick">
            <summary>
            Root li element click handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.BreadCrumbClick(System.String)">
            <summary>
            Breadcrumb click handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.BreadCrumbKeyDown(System.String,Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Bread crumb keyboard interaction handler.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1">
            <summary>
            This class contains file items operations functionalities.
            </summary>
            <typeparam name="TValue">Specifies the TValue parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.FileManager">
            <summary>
            Instance object of the FileManager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.FileName">
            <summary>
            This `FileName` property is used to file name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.IconClass">
            <summary>
            This `IconClass` property is used set icon class for file items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.IsFile">
            <summary>
            This `IsFile` property is used to check the file or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.IsSelected">
            <summary>
            This `IsSelected` property is used to set a file in selected state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.DataUId">
            <summary>
            This `DataUId` property is used to set data UID for file item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.Data">
            <summary>
            This `Data` property is used to set data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.GetClass">
            <summary>
            Returns the class to be added for each file item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.IsImage">
            <summary>
            Returns whether the current file item is an image or not.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.MouseMove">
            <summary>
            Mouse move event handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.GetAttributes">
            <summary>
            Returns the attributes to be added for each file item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.GetSrcLink(`0)">
            <summary>
            Returns the image source link for image files.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.OnDoubleClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Double click event hander to perform folder navigation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.CheckBoxClicked(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Click event handler for checkbox.
            </summary>.
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.UpdateSelected(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Click event handler for updating the selected item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1">
            <summary>
            This class contains file manager's grid functionalities.
            </summary>
            <typeparam name="TValue">Specifies the TValue parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.Data">
            <summary>
            This `Data` property is used to set data to details view.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.GetIconClass(`0)">
            <summary>
            Returns the icon class for the record.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.GetTextValue(System.String)">
            <summary>
            Returns the file text value (with or without extension).
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.GetDirection">
            <summary>
            Returns sorting direction.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.OnRecordClick(Syncfusion.Blazor.Grids.RecordClickEventArgs{`0})">
            <summary>
            Record click event handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.OnRowSelected(Syncfusion.Blazor.Grids.RowSelectEventArgs{`0})">
            <summary>
            Row selected event handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.OnRowDeselect(Syncfusion.Blazor.Grids.RowDeselectEventArgs{`0})">
            <summary>
            Row Deselect event handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.SortData(System.String)">
            <summary>
            Sorts Grid data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.OnRecordDoubleClick(Syncfusion.Blazor.Grids.RecordDoubleClickEventArgs{`0})">
            <summary>
            Grid double click event handler for folder navigation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.RemoveSelection(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Boolean)">
            <summary>
            Removes the selection of files.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.OnUnSelection(Syncfusion.Blazor.Grids.RowDeselectEventArgs{`0})">
            <summary>
            Trigger FileSelect Event.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.OnSelection(Syncfusion.Blazor.Grids.RowSelectingEventArgs{`0})">
            <summary>
            Trigger FileSelect Event.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.GetRowDataByIndex(System.Double)">
            <summary>
            Returns the selected row data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.UpdateSelection">
            <summary>
            Updates the grid selection based on the selected items.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.RowDataBound(Syncfusion.Blazor.Grids.RowDataBoundEventArgs{`0})">
            <summary>
            Row Data bound event handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.Created">
            <summary>
            Created event handler to update the seleted rows.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1">
            <summary>
            This class contains the treeview in filemanager functionalities.
            </summary>
            <typeparam name="TValue">TValue.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.ResponseData">
            <summary>
            This `ResponseData` property is used to set response data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.SetRootLevelData">
            <summary>
            Constructs data for tree view based on file manager response data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.UpdatePathDetails">
            <summary>
            Updates the path details.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.SetSortOrder(Syncfusion.Blazor.FileManager.SortOrder)">
            <summary>
            Updates the sort order property of navigation pane.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.GetAttributes(`0)">
            <summary>
            Returns the attributes for tree view.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.RemoveSelection">
            <summary>
            Updated selection in the grid control.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.NodeSelecting(Syncfusion.Blazor.Navigations.NodeSelectEventArgs)">
            <summary>
            Node selection event handler to navigate folder.
            </summary>
            <param name="args">Specifies node select event arguments.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.OnNodeExpanding(Syncfusion.Blazor.Navigations.NodeExpandEventArgs)">
            <summary>
            Node expanding event handler to expand tree node.
            </summary>
            <param name="args">Specifies the node expanding arguments.</param>
            <returns>Tasks.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.UpdateSelectedNode(`0,System.Boolean)">
            <summary>
            Updated the selected of treeview based on folder navigation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.OnRender(Syncfusion.Blazor.Navigations.NodeRenderEventArgs{Syncfusion.Blazor.FileManager.Internal.InternalData})">
            <summary>
            Triggers on each node renders in treeview.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.RemoveTreeData(System.Collections.Generic.List{`0})">
            <summary>
            Removes the data from data source on folder delete.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.UpdateHasChild(System.String)">
            <summary>
            Updates the has child property for each node.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.RenameTreeData(`0,System.String)">
            <summary>
            Renames the node text on folder rename.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.AddTreeData(System.Collections.Generic.List{`0},System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Adds new data on creating a new folder.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.Internal.PersistenceValues">
            <summary>
            Interface for persistence values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.PersistenceValues.View">
            <summary>
            Gets or sets the view of the File Manager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.PersistenceValues.Path">
            <summary>
            Gets or sets the path of the File Manager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.PersistenceValues.SelectedItems">
            <summary>
            Gets or sets the selected items of the File Manager.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.Internal.InternalData">
            <summary>
            Interface for Internal data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.InternalData.Id">
            <summary>
            Gets or sets the id of file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.InternalData.ParentId">
            <summary>
            Gets or sets the parent id of file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.InternalData.Attributes">
            <summary>
            Gets or sets the attributes of file or folder.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.InternalData.HasChild">
            <summary>
            Gets or sets the haschild field for folder.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.InternalData.Selected">
            <summary>
            Gets or sets the selection for file or folder.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.InternalData.IconCSS">
            <summary>
            Gets or sets the icon css for file or folder.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.InternalData.Expanded">
            <summary>
            Gets or sets the expanded field for file or folder.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.InternalData.Text">
            <summary>
            Gets or sets the text for file or folder.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.Internal.RequestData`1">
            <summary>
            Interface for request data.
            </summary>
            <typeparam name="T">Type param.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.Action">
            <summary>
            Gets or sets the file action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.Names">
            <summary>
            Gets or sets the file or folder names.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.Name">
            <summary>
            Gets or sets the file or folder name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.NewName">
            <summary>
            Gets or sets the file or folder new name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.RenameFiles">
            <summary>
            Gets or sets the rename for file or folder.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.SearchString">
            <summary>
            Gets or sets the search string to find files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.CaseSensitive">
            <summary>
            Gets or sets the search case sensitive.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.Data">
            <summary>
            Gets or sets the file or folder data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.TargetData">
            <summary>
            Gets or sets the target data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.Path">
            <summary>
            Gets or sets the path.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.TargetPath">
            <summary>
            Gets or sets the target path.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.ShowHiddenItems">
            <summary>
            Gets or sets the show hidden items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.CustomData">
            <summary>
            Gets or sets the custom data.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.Internal.MenuOpenModel">
            <summary>
            Interface for MenuOpenModel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.MenuOpenModel.IsFile">
            <summary>
            It is used to check Menu open option for file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.MenuOpenModel.IsFolder">
            <summary>
            It is used to check Menu open option for folder.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.MenuOpenModel.IsLayout">
            <summary>
            It is used to check Menu open option for layout.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.MenuOpenModel.IsTree">
            <summary>
            It is used to check Menu open option for tree.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.MenuOpenModel.RowIndex">
            <summary>
            It is used to check Menu open option for grid row.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ClipMode">
            <summary>
            Defines the cell content's overflow mode. The available modes are.
            <list type="bullet">
            <item>
            <term>Clip</term>
            <description>Truncates the cell content when it overflows its area.</description>
            </item>
            <item>
            <term>Ellipsis</term>
            <description>Displays ellipsis when the cell content overflows its area.</description>
            </item>
            <item>
            <term>EllipsisWithTooltip</term>
            <description>Displays ellipsis when the cell content overflows its area also it will display tooltip while hover on ellipsis applied cell.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ClipMode.Clip">
            <summary>
             Truncates the cell content when it overflows its area.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ClipMode.Ellipsis">
            <summary>
             Displays ellipsis when the cell content overflows its area.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ClipMode.EllipsisWithTooltip">
            <summary>
            Displays ellipsis when the cell content overflows its area
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ColumnQueryModeType">
            <summary>
            <c>ColumnQueryMode</c> provides options to retrive data from the datasource.
            <list type="bullet">
            <item>
            <term>All</term>
            <description>It retrives whole data source</description>
            </item>
            <item>
            <term>Schema</term>
            <description>Retrives data for all the defined columns in grid from the data source.</description>
            </item>
            <item>
            <term>ExcludeHidden</term>
            <description>Retrives data only for visible columns of grid from the data source.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ColumnQueryModeType.All">
            <summary>
            Specifies that all columns should be queried from data source.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ColumnQueryModeType.Schema">
            <summary>
            Specifies that only columns specified in the <c>GridColumns</c> component
            should be queried from data source.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ColumnQueryModeType.ExcludeHidden">
            <summary>
            Specifies that exclude hidden columns specified in the <c>GridColumns</c> should be queried from data source.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridLine">
            <summary>
            Defines modes of GridLine, They are.
            <list type="bullet">
            <item>
            <term>Both</term>
            <description>Displays both the horizontal and vertical grid lines.</description>
            </item>
            <item>
            <term>None</term>
            <description>No grid lines are displayed.</description>
            </item>
            <item>
            <term>Horizontal</term>
            <description>Displays the horizontal grid lines only.</description>
            </item>
            <item>
            <term>Vertical</term>
            <description>Displays grid lines based on the theme.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.GridLine.Both">
            <summary>
            Displays both the horizontal and vertical grid lines.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.GridLine.None">
            <summary>
            No grid lines are displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.GridLine.Horizontal">
            <summary>
            Displays the horizontal grid lines only.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.GridLine.Vertical">
            <summary>
            Displays the vertical grid lines only
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.GridLine.Default">
            <summary>
            Displays grid lines based on the theme.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.HierarchyGridPrintMode">
            <summary>
            Hierarchy Grid Print modes are.
            <list type="bullet">
            <item>
            <term>Expanded</term>
            <description>Prints the master grid with expanded child grids.</description>
            </item>
            <item>
            <term>All</term>
            <description>Prints the master grid with all the child grids.</description>
            </item>
            <item>
            <term>None</term>
            <description>Prints the master grid alone.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.HierarchyGridPrintMode.Expanded">
            <summary>
            Prints the master grid with expanded child grids.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.HierarchyGridPrintMode.All">
            <summary>
            Prints the master grid with all the child grids.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.HierarchyGridPrintMode.None">
            <summary>
            Prints the master grid alone.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PrintMode">
            <summary>
            Print mode options are.
            <list type="bullet">
            <item>
            <term>AllPages</term>
            <description>Print all pages records of the Grid.</description>
            </item>
            <item>
            <term>CurrentPage</term>
            <description>Print current page records of the Grid.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PrintMode.AllPages">
            <summary>
            Print all pages records of the Grid
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PrintMode.CurrentPage">
            <summary>
            Print current page records of the Grid
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.TextAlign">
            <summary>
            Defines alignments of text.
            <list type="bullet">
            <item>
            <term>Left</term>
            <description>Default. Text is left aligned.</description>
            </item>
            <item>
            <term>Right</term>
            <description>Text is right aligned.</description>
            </item>
            <item>
            <term>Center</term>
            <description>Text is centered.</description>
            </item>
            <item>
            <term>Justify</term>
            <description>Text is justified.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.TextAlign.Left">
            <summary>
            Default. Text is left aligned.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.TextAlign.Right">
            <summary>
            Text is right aligned.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.TextAlign.Center">
            <summary>
            Text is centered.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.TextAlign.Justify">
            <summary>
            Text is justified.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.FreezeDirection">
            <summary>
            Defines direction  of freeze column.
            <list type="bullet">
            <item>
            <term>None</term>
            <description>Column will not freeze.</description>
            </item>
            <item>
            <term>Left</term>
            <description>Freeze the column at left side.</description>
            </item>
            <item>
            <term>Right</term>
            <description>Freeze the column at right side.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.FreezeDirection.Left">
            <summary>
            Freeze the column at left side.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.FreezeDirection.Right">
            <summary>
            Freeze the column at right side.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.RowDirection">
            <summary>
            Defines data row rendering direction of the grid that helps to view the grid in a compact way which is suitable for small screen.
            <list type="bullet">    
            <item>
            <term>Horizontal</term>
            <description>Display the data rows in Horizontal direction.</description>
            </item>
            <item>
            <term>Vertical</term>
            <description>Display the data rows in Vertical direction..</description>
            </item>    
            </list>
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.RowDirection.Horizontal">
            <summary>
            Default. Display the data rows in Horizontal direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.RowDirection.Vertical">
            <summary>
            Display data rows in Vertical direction.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.FreezeTable">
            <summary>
            Defines direction  of freeze table.
            <list type="bullet">
            <item>
            <term>None</term>
            <description>Column will not freeze.</description>
            </item>
            <item>
            <term>Left</term>
            <description>Freeze the column at left side.</description>
            </item>
            <item>
            <term>Right</term>
            <description>Freeze the column at right side.</description>
            </item>
            <item>
            <term>Left-Right</term>
            <description>Freeze the column at left and right side.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.FreezeTable.None">
            <summary>
            I does not freeze the column.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.FreezeTable.Left">
            <summary>
            Freeze the column at left side.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.FreezeTable.Right">
            <summary>
            Freeze the column at right side.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.FreezeTable.LeftRight">
            <summary>
            Freeze the column at left and right side.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.CommandButtonType">
            <summary>
            Defines the Command Buttons type.
            <list type="bullet">
            <item>
            <term>None</term>
            <description>Default. A command button with no default action. Use this for custom command actions.</description>
            </item>
            <item>
            <term>Edit</term>
            <description>A edit command button that edit current record.</description>
            </item>
            <item>
            <term>Delete</term>
            <description>A delete command button that delete current record.</description>
            </item>
            <item>
            <term>Save</term>
            <description>A save command button that saves the current edited record.</description>
            </item>
            <item>
            <term>Cancel</term>
            <description>A cancel command button that cancels the edit state.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.CommandButtonType.None">
            <summary>
            Default. A command button with no default action. Use this for custom command actions.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.CommandButtonType.Edit">
            <summary>
            A edit command button that edit current record.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.CommandButtonType.Delete">
            <summary>
            A delete command button that delete current record.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.CommandButtonType.Save">
            <summary>
            A save command button that saves the current edited record.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.CommandButtonType.Cancel">
            <summary>
            A cancel command button that cancels the edit state.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.FilterBarMode">
            <summary>
            Specified the Filter bar mode.
            <list type="bullet">
            <item>
            <term>OnEnter</term>
            <description>Initiate filter operation after Enter key is pressed.</description>
            </item>
            <item>
            <term>Immediate</term>
            <description>Initiate filter operation after certain time interval. By default time interval is 1500ms.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.FilterBarMode.OnEnter">
            <summary>
            Initiate filter operation after Enter key is pressed.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.FilterBarMode.Immediate">
            <summary>
            Initiate filter operation after certain time interval. By default time interval is 1500ms.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.FilterType">
            <summary>
            Defines types of Filter.
            <list type="bullet">
            <item>
            <term>FilterBar</term>
            <description>Default. Specifies the filter type as filter bar.</description>
            </item>
            <item>
            <term>Menu</term>
            <description>Specifies the filter type as menu.</description>
            </item>
            <item>
            <term>CheckBox</term>
            <description>Specifies the filter type as check box.</description>
            </item>
            <item>
            <term>Excel</term>
            <description>Specifies the filter type as excel.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.FilterType.FilterBar">
            <summary>
            Default. Specifies the filter type as filter bar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.FilterType.Excel">
            <summary>
            Specifies the filter type as excel.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.FilterType.Menu">
            <summary>
            Specifies the filter type as menu.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.FilterType.CheckBox">
            <summary>
            Specifies the filter type as check box.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.SortDirection">
            <summary>
            Defines the sort direction.
            <list type="bullet">
            <item>
            <term>Ascending</term>
            <description>Default. Sorts records in ascending order.</description>
            </item>
            <item>
            <term>Descending</term>
            <description>Sorts records in descending order.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.SortDirection.Ascending">
            <summary>
            Default. Sorts records in ascending order.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.SortDirection.Descending">
            <summary>
            Sorts records in descending order.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.EditMode">
            <summary>
            Defines modes of editing.
            <list type="bullet">
            <item>
            <term>Normal</term>
            <description>Default. Editing is done in an inline form. Edit form is rendered inline as one of the table rows.</description>
            </item>
            <item>
            <term>Dialog</term>
            <description>Editing is done in a Dialog/Pop component.</description>
            </item>
            <item>
            <term>Batch</term>
            <description>Enables cell editing. Multiple cells can be edited, added or deleted and saved.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.EditMode.Normal">
            <summary>
            Default. Editing is done in an inline form. Edit form is rendered inline as one of the table rows.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.EditMode.Dialog">
            <summary>
            Editing is done in a Dialog/Pop component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.EditMode.Batch">
            <summary>
            Enables cell editing. Multiple cells can be edited, added or deleted and saved.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.NewRowPosition">
            <summary>
            Defines add new row position.
            <list type="bullet">
            <item>
            <term>Top</term>
            <description>Default. Add form is placed at the first row of the grid.</description>
            </item>
            <item>
            <term>Bottom</term>
            <description>Add form is placed at the last row of the grid</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.NewRowPosition.Top">
            <summary>
            Default. Add form is placed at the first row of the grid.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.NewRowPosition.Bottom">
            <summary>
            Add form is placed at the last row of the grid
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.CellSelectionMode">
            <summary>
            Defines mode of cell selection.
            <list type="bullet">
            <item>
            <term>Flow</term>
            <description>Default. Selects the range of cells between start index and end index that also includes the other cells of the selected rows..</description>
            </item>
            <item>
            <term>Box</term>
            <description>Selects the range of cells within the start and end column indexes that includes in between cells of rows within the range</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.CellSelectionMode.Flow">
            <summary>
            Default. All the cells between start and end cell will be selected.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.CellSelectionMode.Box">
            <summary>
            Range of cells that match the index of start and end cell will be selected
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.CellSelectionMode.BoxWithBorder">
            <summary>
            Same as <c>Box</c>, but shows border during selection.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.CheckboxSelectionType">
            <summary>
            Defines type of checkbox selection.
            This helps to reset selection when <c>CheckboxOnly</c> property is enabled.
            <list type="bullet">
            <item>
            <term>Default</term>
            <description>Default. In this mode, user can select multiple rows by clicking rows one by one.</description>
            </item>
            <item>
            <term>ResetOnRowClick</term>
            <description>In ResetOnRowClick mode, on clicking a row it will reset previously selected row and also multiple
             rows can be selected by using CTRL or SHIFT key.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.CheckboxSelectionType.Default">
            <summary>
            Default. Clicking row will not clear selection selection of the row.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.CheckboxSelectionType.ResetOnRowClick">
            <summary>
            Clicking row will reset the row selection.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.SelectionMode">
            <summary>
            Defines modes of Selection.
            <list type="bullet">
            <item>
            <term>Row</term>
            <description>Default. Row selection is enabled</description>
            </item>
            <item>
            <term>Cell</term>
            <description>Cell selection is enabled.</description>
            </item>
            <item>
            <term>Both</term>
            <description>Both Row and Cell selection is enabled.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.SelectionMode.Cell">
            <summary>
            Cell selection is enabled.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.SelectionMode.Row">
            <summary>
            Default. Row selection is enabled.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.SelectionMode.Both">
            <summary>
            Both row and cell selection is enabled.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.SelectionType">
            <summary>
            Defines types of Selection.
            <list type="bullet">
            <item>
            <term>Single</term>
            <description>Default. Allows user to select a row or cell.</description>
            </item>
            <item>
            <term>Multiple</term>
            <description>Allows user to select a multiple rows or cells.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.SelectionType.Single">
            <summary>
            Default. Allows user to select a row or cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.SelectionType.Multiple">
            <summary>
            Allows user to select a multiple rows or cells.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.WrapMode">
            <summary>
            Defines the wrap mode.
            <list type="bullet">
            <item>
            <term>Both</term>
            <description>Default. Wraps both header and content.</description>
            </item>
            <item>
            <term>Header</term>
            <description>Wraps header alone.</description>
            </item>
            <item>
            <term>Content</term>
            <description>Wraps content alone.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.WrapMode.Both">
            <summary>
            Default. Wraps both header and content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.WrapMode.Header">
            <summary>
            Wraps header alone.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.WrapMode.Content">
            <summary>
            Wraps content alone.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Action">
            <summary>
            Defines Actions of the Grid.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.Paging">
            <summary>
            Specifies paging action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.Refresh">
            <summary>
            Specifies grid refresh.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.Sorting">
            <summary>
            Specifies sorting action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.Selection">
            <summary>
            Specifies selection action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.Filtering">
            <summary>
            Specifies filtering action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.ClearFiltering">
            <summary>
            Specifies clear filtering action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.Searching">
            <summary>
            Specifies searching action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.RowDragAndDrop">
            <summary>
            Specifies row drag and drop action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.Reorder">
            <summary>
            Specifies reorder action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.Grouping">
            <summary>
            Specifies grouping action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.UnGrouping">
            <summary>
            Specifies ungrouping action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.BatchSave">
            <summary>
            Specifies batch save action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.VirtualScroll">
            <summary>
            Specifies virtual scrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.Print">
            <summary>
            Specifies print action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.BeginEdit">
            <summary>
            Specifies edit begin action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.Save">
            <summary>
            Specifies save action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.Delete">
            <summary>
            Specifies delete action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.Cancel">
            <summary>
            Specifies cancel action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.Add">
            <summary>
            Specifies add action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.FilterBeforeOpen">
            <summary>
            Specifies filter pop opening.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.FilterChoiceRequest">
            <summary>
            Specifies filter choice request action is initiated in checkbox and excel filter.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.FilterAfterOpen">
            <summary>
            Specifies filter pop is opened.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.FilterSearchBegin">
            <summary>
            Specifies search action in checkbox and excel filter search textbox.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.ColumnState">
            <summary>
            Specifies column visibility changed.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.ExpandAllComplete">
            <summary>
            Specifies expand all action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.CollapseAllComplete">
            <summary>
            Specifies collapse all action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Action.BeforeOpenColumnChooser">
            <summary>
            Specifies column chooser is opening.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.AggregateType">
            <summary>
            Defines the aggregate types.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.AggregateType.Sum">
            <summary>
            Performs sum aggregation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.AggregateType.Average">
            <summary>
            Performs average aggregation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.AggregateType.Max">
            <summary>
            Performs max aggregation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.AggregateType.Min">
            <summary>
            Performs min aggregation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.AggregateType.Count">
            <summary>
            Performs count aggregation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.AggregateType.TrueCount">
            <summary>
            Performs true count aggregation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.AggregateType.FalseCount">
            <summary>
            Performs false count aggregation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.AggregateType.Custom">
            <summary>
            Performs custom aggregation.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.BorderLineStyle">
            <summary>
            Defines border line style.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.BorderLineStyle.Thin">
            <summary>
            Border line is thin.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.BorderLineStyle.Thick">
            <summary>
            Border line is thick.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.CheckState">
            <summary>
            Defines the header checkbox state.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.CheckState.None">
            <summary>
            Default.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.CheckState.Check">
            <summary>
            Header is checked
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.CheckState.UnCheck">
            <summary>
            Header is unchecked.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.CheckState.Intermediate">
            <summary>
            Header is in intermediate.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.EditAction">
            <summary>
            Defines the EditActions.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.EditAction.None">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.EditAction.Edited">
            <summary>
            Holds the edited records.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.EditAction.Deleted">
            <summary>
            Holds the deleted records.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.EditAction.Added">
            <summary>
            Holds the Added records.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ColumnType">
            <summary>
            Defines the Column Type.
            <list type="bullet">
            <item>
            <term>String</term>
            <description>A string type column.</description>
            </item>
            <item>
            <term>Number</term>
            <description>A number type column. Primitive types such as int, int?, floar, double, decimal etc. are consider
            as number type column.</description>
            </item>
            <item>
            <term>Boolean</term>
            <description>A boolean type column.</description>
            </item>
            <item>
            <term>Date</term>
            <description>A date type column. Primitive types such as datetime and datetimeoffset are consider
            as date type column.</description>
            </item>
            <item>
            <term>DateTime</term>
            <description>A datetime type column. Primitive types such as datetime and datetimeoffset are consider
            as date type column.</description>
            </item>
            <item>
            <term>CheckBox</term>
            <description>Enables checkbox column for selection purpose. No data operation is assosiated with this column.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ColumnType.None">
            <summary>
            No column type is specified.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ColumnType.String">
            <summary>
            A string type column.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ColumnType.Number">
            <summary>
            A number type column. Primitive types such as int, int?, floar, double, decimal etc. are consider
            as number type column.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ColumnType.Boolean">
            <summary>
            A boolean type column.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ColumnType.Date">
            <summary>
            A date type column. Primitive types such as datetime and datetimeoffset are consider
            as date type column.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ColumnType.DateTime">
            <summary>
            A datetime type column. Primitive types such as datetime and datetimeoffset are consider
            as date type column.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ColumnType.CheckBox">
            <summary>
            Enables checkbox column for selection purpose. No data operation is assosiated with this column.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ContentType">
            <summary>
            Defines the content type.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ContentType.Image">
            <summary>
            Content type is image.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ContentType.Line">
            <summary>
            Content type is line.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ContentType.PageNumber">
            <summary>
            Content type is page number.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ContentType.Text">
            <summary>
            Content type is text.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.EditType">
            <summary>
            Defines the Edit Type of the column.
            <list type="bullet">
            <item>
            <term>DefaultEdit</term>
            <description>Default. Text box is used for editing.</description>
            </item>
            <item>
            <term>DropDownEdit</term>
            <description>DropDownList is used for editing.</description>
            </item>
            <item>
            <term>BooleanEdit</term>
            <description>Checkbox is used for editing.</description>
            </item>
            <item>
            <term>DatePickerEdit</term>
            <description>Date picker is used for editing.</description>
            </item>
            <item>
            <term>DateTimePickerEdit</term>
            <description>Datetime picker is used for editing.</description>
            </item>
            <item>
            <term>NumericEdit</term>
            <description>Numeric textbox is used for editing.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.EditType.DefaultEdit">
            <summary>
            Default. Text box is used for editing.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.EditType.DropDownEdit">
            <summary>
            DropDownList is used for editing.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.EditType.BooleanEdit">
            <summary>
            Checkbox is used for editing.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.EditType.DatePickerEdit">
            <summary>
            Date picker is used for editing.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.EditType.DateTimePickerEdit">
            <summary>
            Date time picker is used for editing.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.EditType.NumericEdit">
            <summary>
            Numeric textbox is used for editing.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ExcelHorizontalAlign">
            <summary>
            Defines Excel horizontal alignment.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ExcelHorizontalAlign.Left">
            <summary>
            Horizontal align is left
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ExcelHorizontalAlign.Right">
            <summary>
            Horizontal align is right
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ExcelHorizontalAlign.Center">
            <summary>
            Horizontal align is center
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ExcelHorizontalAlign.Fill">
            <summary>
            Horizontal align is fill
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ExcelVerticalAlign">
            <summary>
            Defines Excel vertical alignment.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ExcelVerticalAlign.Top">
            <summary>
            Vertical align is top
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ExcelVerticalAlign.Bottom">
            <summary>
            Vertical align is bottom
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ExcelVerticalAlign.Center">
            <summary>
            Vertical align is center
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ExcelVerticalAlign.Justify">
            <summary>
            Vertical align is justify
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ExportType">
            <summary>
            Defines Export Type.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ExportType.AllPages">
            <summary>
            Exports all page of the grid.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ExportType.CurrentPage">
            <summary>
            Exports only the current page records of the grid.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.MultipleExportType">
            <summary>
            Defines Multiple Export Type.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.MultipleExportType.AppendToSheet">
            <summary>
            Append exported data as additional sheet.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.MultipleExportType.NewSheet">
            <summary>
            Append exported data in new sheet.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PageOrientation">
            <summary>
            Defines the PDF page orientation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PageOrientation.Portrait">
            <summary>
            Pdf page is oriented in portrait.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PageOrientation.Landscape">
            <summary>
            Pdf page is oriented in landscape.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PdfDashStyle">
            <summary>
            Defines the PDF dash style.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfDashStyle.Solid">
            <summary>
            Specifies the PDF dash style as solid.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfDashStyle.Dash">
            <summary>
            Specifies the PDF dash style as dash.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfDashStyle.Dot">
            <summary>
            Specifies the PDF dash style as dot.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfDashStyle.DashDot">
            <summary>
            Specifies the PDF dash style as dashed dot.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfDashStyle.DashDotDot">
            <summary>
            Specifies the PDF dash style as dashed dot dot.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PdfHorizontalAlign">
            <summary>
            Defines PDF horizontal alignment.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfHorizontalAlign.Left">
            <summary>
            Horizontal align is left
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfHorizontalAlign.Right">
            <summary>
            Horizontal align is right
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfHorizontalAlign.Center">
            <summary>
            Horizontal align is center
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfHorizontalAlign.Justify">
            <summary>
            Horizontal align is justify.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PdfPageNumberType">
            <summary>
            Defines the pdf page number type.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageNumberType.LowerLatin">
            <summary>
            Defines the pdf page number type as lower latin.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageNumberType.LowerRoman">
            <summary>
            Defines the pdf page number type as lower roman.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageNumberType.UpperLatin">
            <summary>
            Defines the pdf page number type as upper latin.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageNumberType.UpperRoman">
            <summary>
            Defines the pdf page number type as upper roman.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageNumberType.Numeric">
            <summary>
            Defines the pdf page number type as numeric.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageNumberType.Arabic">
            <summary>
            Defines the pdf page number type as arabic.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PdfPageSize">
            <summary>
            Defined the PDF page size.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.Letter">
            <summary>
            Defined the PDF page size as letter.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.Note">
            <summary>
            Defined the PDF page size as note.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.Legal">
            <summary>
            Defined the PDF page size as legal.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.A0">
            <summary>
            Defined the PDF page size as A0.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.A1">
            <summary>
            Defined the PDF page size as A1.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.A2">
            <summary>
            Defined the PDF page size as A2.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.A3">
            <summary>
            Defined the PDF page size as A3.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.A4">
            <summary>
            Defined the PDF page size as A4.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.A5">
            <summary>
            Defined the PDF page size as A5.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.A6">
            <summary>
            Defined the PDF page size as A6.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.A7">
            <summary>
            Defined the PDF page size as A7.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.A8">
            <summary>
            Defined the PDF page size as A8.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.A9">
            <summary>
            Defined the PDF page size as A9.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.B0">
            <summary>
            Defined the PDF page size as B0.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.B1">
            <summary>
            Defined the PDF page size as B1.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.B2">
            <summary>
            Defined the PDF page size as B2.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.B3">
            <summary>
            Defined the PDF page size as B3.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.B4">
            <summary>
            Defined the PDF page size as B4.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.B5">
            <summary>
            Defined the PDF page size as B5.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.Archa">
            <summary>
            Defined the PDF page size as Archa.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.Archb">
            <summary>
            Defined the PDF page size as Archb.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.Archc">
            <summary>
            Defined the PDF page size as Archc.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.Archd">
            <summary>
            Defined the PDF page size as Archd.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.Arche">
            <summary>
            Defined the PDF page size as Arche.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.Flsa">
            <summary>
            Defined the PDF page size as Flsa.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.HalfLetter">
            <summary>
            Defined the PDF page size as HalfLetter.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.Letter11x17">
            <summary>
            Defined the PDF page size as Letter11*17.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfPageSize.Ledger">
            <summary>
            Defined the PDF page size as Ledger.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PdfVerticalAlign">
            <summary>
            Defines PDF vertical alignment.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfVerticalAlign.Top">
            <summary>
            Defines PDF vertical alignment as Top.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfVerticalAlign.Bottom">
            <summary>
            Defines PDF vertical alignment as Bottom.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.PdfVerticalAlign.Middle">
            <summary>
            Defines PDF vertical alignment as Middle.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ValueType">
            <summary>
            Exports types used by Grid.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ScrollDirection">
            <summary>
            Defines the scroll direction.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.HierarchyExportMode">
            <summary>
            Defines the hierarchy export mode for the pdf and excel.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ContextMenuTarget.None">
            <summary>
            Default.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ContextMenuTarget.Header">
            <summary>
            Header is clicked.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ContextMenuTarget.Content">
            <summary>
            Content is clicked.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ContextMenuTarget.Pager">
            <summary>
            Pager is clicked.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.ContextMenuTarget.EditForm">
            <summary>
            Edit is clicked.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PredicateModel`1">
            <summary>
            Defines predicate model class for generating filter criteria.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PredicateModel`1.Field">
            <summary>
            Defines the field name of the filter column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PredicateModel`1.IgnoreAccent">
            <summary>
            If IgnoreAccent is set to true, then filter ignores the diacritic characters or accents while filtering.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PredicateModel`1.MatchCase">
            <summary>
            If match case set to true, then filter records with exact match or else
            filter records with case insensitive(uppercase and lowercase letters treated as same).
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PredicateModel`1.Operator">
            <summary>
            Defines the operator to filter records.
            <seealso cref="T:Syncfusion.Blazor.Operator"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PredicateModel`1.Predicate">
            <summary>
            Defines the relationship between one filter query and another by using AND or OR predicate.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PredicateModel`1.Uid">
            <summary>
            Defines the UID of filter column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PredicateModel`1.Value">
            <summary>
            Defines the value used to filter records.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PredicateModel`1.ActualValue">
            <summary>
            Defines the Collection/Original value used to filter records.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PredicateModel">
            <summary>
            Defines predicate model class for generating filter criteria.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ExportRowDataBound`1">
            <summary>
            This model used for Tree grid internal event support for Excel export row data bound.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExportRowDataBound`1.RowData">
            <summary>
            Defines the grid Row data while processing the records.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExportRowDataBound`1.OutlineLevel">
            <summary>
            Grouping Outline level.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExportRowDataBound`1.SheetRow">
            <summary>
            export sheet row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExportRowDataBound`1.IsHidden">
            <summary>
            Excel Grouping row property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExportRowDataBound`1.IsCollapsed">
            <summary>
            Collapse/Expand the Grouping row.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.FilterSettings">
            <summary>
            Defines the filter param class which provides column level filter operator and read method to get data
            from Filter bar template.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.FilterSettings.Operator">
            <summary>
            Change the default filter operator for a column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.FilterSettings.Type">
            <summary>
            Change the filter type for particular column.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ValidationRules">
            <summary>
            Defines the column validation rules.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ActionArgs">
            <summary>
            Internal Action args.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.EmptyRecordTemplateContext">
            <summary>
            Class that defines template context detail of EmptyRecordTemplate.
            <seealso cref="P:Syncfusion.Blazor.Grids.GridTemplates.EmptyRecordTemplate"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.EmptyRecordTemplateContext.IsDataLoaded">
            <summary>
            Specifies whether data is loaded in the grid.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.AggregateTemplateContext">
            <summary>
            Class that defines template context detail of FooterTemplate, GroupFooterTemplate and GroupCaptionTemplate.
            <seealso cref="P:Syncfusion.Blazor.Grids.GridAggregateColumn.FooterTemplate"/>
            <seealso cref="P:Syncfusion.Blazor.Grids.GridAggregateColumn.GroupCaptionTemplate"/>
            <seealso cref="P:Syncfusion.Blazor.Grids.GridAggregateColumn.GroupFooterTemplate"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.AggregateTemplateContext.Average">
            <summary>
            Gets average aggregate value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.AggregateTemplateContext.Count">
            <summary>
            Gets count aggregate value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.AggregateTemplateContext.Custom">
            <summary>
            Gets custom aggregate value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.AggregateTemplateContext.FalseCount">
            <summary>
            Specifies false count aggregate value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.AggregateTemplateContext.Field">
            <summary>
            Gets the current group field name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.AggregateTemplateContext.ForeignKey">
            <summary>
            Gets corresponding grouped foreign key value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.AggregateTemplateContext.HeaderText">
            <summary>
            Gets header text of the grouped column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.AggregateTemplateContext.Key">
            <summary>
            Gets grouped data key value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.AggregateTemplateContext.Max">
            <summary>
            Gets maximum aggregate value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.AggregateTemplateContext.Min">
            <summary>
            Gets minimum aggregate value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.AggregateTemplateContext.Sum">
            <summary>
            Gets sum aggregate value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.AggregateTemplateContext.TrueCount">
            <summary>
            Gets true count aggregate value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.BeforeBatchAddArgs`1">
            <summary>
            Defines the event argument of before batch add action.
            </summary>
            <typeparam name="T">TValue of the grid component.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BeforeBatchAddArgs`1.Cancel">
            <summary>
            Defines the cancel option value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BeforeBatchAddArgs`1.DefaultData">
            <summary>
            Defines the default data object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BeforeBatchAddArgs`1.PrimaryKey">
            <summary>
            Defines the primaryKey.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BeforeBatchAddArgs`1.Index">
            <summary>
            Defines the index to add.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BeforeBatchAddArgs`1.EditContext">
            <summary>
            Defines the current <c>EditContext</c> instance.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.BeforeBatchDeleteArgs`1">
            <summary>
            Defines the event argument of before batch delete action.
            </summary>
            <typeparam name="T">TValue of the grid component.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BeforeBatchDeleteArgs`1.Cancel">
            <summary>
            Defines the cancel option value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BeforeBatchDeleteArgs`1.PrimaryKey">
            <summary>
            Defines the primaryKey.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BeforeBatchDeleteArgs`1.Row">
            <summary>
            Defines the row element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BeforeBatchDeleteArgs`1.RowData">
            <summary>
            Defines the deleted data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BeforeBatchDeleteArgs`1.RowIndex">
            <summary>
            Defines the row index.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.BeforeBatchSaveArgs`1">
            <summary>
            Defines the event argument of before batch save action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BeforeBatchSaveArgs`1.BatchChanges">
            <summary>
            Defines the changed record object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BeforeBatchSaveArgs`1.Cancel">
            <summary>
            Defines the cancel option value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.BeforeBatchCancelArgs`1">
            <summary>
            Defines the event argument of  batch cancel action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BeforeBatchCancelArgs`1.BatchChanges">
            <summary>
            Defines the changed record object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BeforeBatchCancelArgs`1.Cancel">
            <summary>
            Defines the cancel button status.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.BeforeDataBoundArgs`1">
            <summary>
            Defines the event argument of before data bound action.
            </summary>
            <typeparam name="T">TValue of the grid component.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BeforeDataBoundArgs`1.Cancel">
            <summary>
            Defines the cancel option value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BeforeDataBoundArgs`1.Count">
            <summary>
            Defines the data count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BeforeDataBoundArgs`1.Result">
            <summary>
            Defines the current view data.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.BeginEditArgs`1">
            <summary>
            Defines the event argument of begin edit action.
            </summary>
            <typeparam name="T">TValue of the grid component.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BeginEditArgs`1.Cancel">
            <summary>
            Defines the cancel option value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BeginEditArgs`1.PrimaryKey">
            <summary>
            Defines the primary key names.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BeginEditArgs`1.PrimaryKeyValue">
            <summary>
            Defines the primary key values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BeginEditArgs`1.Row">
            <summary>
            Defines the current edited row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BeginEditArgs`1.RowData">
            <summary>
            Defines the edited data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BeginEditArgs`1.RowIndex">
            <summary>
            Defines the edited row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BeginEditArgs`1.Type">
            <summary>
            Defines the name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Border">
            <summary>
            Class that defines the cell border details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Border.Color">
            <summary>
            Defines the color of border.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Border.LineStyle">
            <summary>
            Defines the line style of border.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.CaptionTemplateContext">
            <summary>
            Class that defines template context detail of CaptionTemplate.
            <seealso cref="P:Syncfusion.Blazor.Grids.GridGroupSettings.CaptionTemplate"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CaptionTemplateContext.GroupGuid">
            <summary>
            Gets the group GUID.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CaptionTemplateContext.Count">
            <summary>
            Gets count value which specified the number of records in the group.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CaptionTemplateContext.Field">
            <summary>
            Gets the current group field name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CaptionTemplateContext.ForeignKeyValue">
            <summary>
            Gets the current foreign key value name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CaptionTemplateContext.ForeignKey">
            <summary>
            Gets corresponding grouped foreign key value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CaptionTemplateContext.HeaderText">
            <summary>
            Gets header text of the grouped column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CaptionTemplateContext.Key">
            <summary>
            Gets grouped data key value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CaptionTemplateContext.Level">
            <summary>
            Gets depth or level in which the group caption is present.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.CellDeselectEventArgs`1">
            <summary>
            Class that defines event argument of the cell deselection operation.
            </summary>
            <typeparam name="T">TValue of the grid component.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellDeselectEventArgs`1.Cancel">
            <summary>
            Defines the cancel option value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellDeselectEventArgs`1.CellIndex">
            <summary>
            Defines the index of the current selected/deselected cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellDeselectEventArgs`1.IsCtrlPressed">
            <summary>
            Defines whether the CTRL key is pressed or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellDeselectEventArgs`1.IsShiftPressed">
            <summary>
            Defines whether the SHIFT key is pressed or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellDeselectEventArgs`1.RowIndex">
            <summary>
            Defines the row index of the current selected/deselected cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellDeselectEventArgs`1.Cells">
            <summary>
            Defines the currently selected/deselected cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellDeselectEventArgs`1.Data">
            <summary>
            Defines the currently selected/deselected row data.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.CellEditArgs`1">
            <summary>
            Class that defines event argument of the cell edit.
            </summary>
            <typeparam name="T">TValue of the grid component.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellEditArgs`1.Cancel">
            <summary>
            Defines the cancel option value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellEditArgs`1.Cell">
            <summary>
            Defines the cell object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellEditArgs`1.ColumnName">
            <summary>
            Defines the column name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellEditArgs`1.ColumnObject">
            <summary>
            Defines the column object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellEditArgs`1.ForeignKeyData">
            <summary>
            Defines foreign data object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellEditArgs`1.IsForeignKey">
            <summary>
            Defines isForeignKey option value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellEditArgs`1.PrimaryKey">
            <summary>
            Defines the primaryKey.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellEditArgs`1.Row">
            <summary>
            Defines the current row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellEditArgs`1.RowData">
            <summary>
            Defines the original row data object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellEditArgs`1.Data">
            <summary>
            Defines the data object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellEditArgs`1.Type">
            <summary>
            Defines the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellEditArgs`1.ValidationRules">
            <summary>
            Defines the validation rules.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellEditArgs`1.Value">
            <summary>
            Defines the cell value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellEditArgs`1.EditContext">
            <summary>
            Defines the current <c>EditContext</c> instance.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.CellSaveArgs`1">
            <summary>
            Class that defines event argument of the cell save operation.
            </summary>
            <typeparam name="T">TValue of the grid component.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSaveArgs`1.Cancel">
            <summary>
            Defines the cancel option value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSaveArgs`1.Cell">
            <summary>
            Defines the cell object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSaveArgs`1.ColumnName">
            <summary>
            Defines the column name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSaveArgs`1.ColumnObject">
            <summary>
            Defines the column object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSaveArgs`1.IsForeignKey">
            <summary>
            Defines isForeignKey option value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSaveArgs`1.PreviousValue">
            <summary>
            Defines the previous value of the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSaveArgs`1.RowData">
            <summary>
            Defines the row data object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSaveArgs`1.Data">
            <summary>
            Defines the row data clone object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSaveArgs`1.Value">
            <summary>
            Defines the cell value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.CellSelectEventArgs`1">
            <summary>
            Class that defines event argument of the cell selection operation.
            </summary>
            <typeparam name="T">TValue of the grid component.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSelectEventArgs`1.Cancel">
            <summary>
            Defines the cancel option value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSelectEventArgs`1.CellIndex">
            <summary>
            Defines the index of the current selected cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSelectEventArgs`1.RowIndex">
            <summary>
            Defines the row index of the current selected cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSelectEventArgs`1.IsCtrlPressed">
            <summary>
            Defines whether the CTRL key is pressed or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSelectEventArgs`1.IsShiftPressed">
            <summary>
            Defines whether the SHIFT key is pressed or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSelectEventArgs`1.Cells">
            <summary>
            Defines the currently selected/deselected cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSelectEventArgs`1.CurrentCell">
            <summary>
            Defines the element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSelectEventArgs`1.Data">
            <summary>
            Defines the currently selected/deselected row data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSelectEventArgs`1.PreviousRowCell">
            <summary>
            Defines the previously selected cell element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSelectEventArgs`1.PreviousRowCellIndex">
            <summary>
            Defines the previously selected cell index.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.CellSelectingEventArgs`1">
            <summary>
            Class that defines event argument of the cell selection operation.
            </summary>
            <typeparam name="T">TValue of the grid component.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSelectingEventArgs`1.Cancel">
            <summary>
            Defines the cancel option value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSelectingEventArgs`1.CellIndex">
            <summary>
            Defines the index of the current selected cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSelectingEventArgs`1.RowIndex">
            <summary>
            Defines the row index of the current selected cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSelectingEventArgs`1.Cells">
            <summary>
            Defines the currently selected/deselected cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSelectingEventArgs`1.CurrentCell">
            <summary>
            Defines the element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSelectingEventArgs`1.Data">
            <summary>
            Defines the currently selected/deselected row data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSelectingEventArgs`1.IsCtrlPressed">
            <summary>
            Defines whether the CTRL key is pressed or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSelectingEventArgs`1.IsShiftPressed">
            <summary>
            Defines whether the SHIFT key is pressed or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSelectingEventArgs`1.PreviousRowCell">
            <summary>
            Defines the previously selected cell element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CellSelectingEventArgs`1.PreviousRowCellIndex">
            <summary>
            Defines the previously selected cell index.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ColumnChooserTemplateContext">
            <summary>
            Defines members of the column chooser template context.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnChooserTemplateContext.Columns">
            <summary>
            Gets the columns list. If there is any search criteria applied then the columns which matches the search criteria will be provied.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ColumnChooserFooterTemplateContext">
            <summary>
            Defines members of the ColumnChooser FooterTemplate context.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnChooserFooterTemplateContext.Columns">
            <summary>
            Gets the columns list. If there is any search criteria applied then the columns which matches the search criteria will be provied.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnChooserFooterTemplateContext.CancelAsync">
            <summary>
            Cancels the column chooser operation and closes the dialog.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ColumnChooserEventArgs">
            <summary>
            Defines the event arguments of the column chooser actions.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnChooserEventArgs.RequestType">
            <summary>
            Defines the current action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnChooserEventArgs.Cancel">
            <summary>
            Cancel the action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnChooserEventArgs.Columns">
            <summary>
            Defines the display columns of column chooser.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnChooserEventArgs.DialogInstance">
            <summary>
            Specifies the instance of column chooser dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnChooserEventArgs.Element">
            <summary>
            Defines the parent element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnChooserEventArgs.SearchOperator">
            <summary>
            Defines the operator for column chooser search request.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ColumnMenuClickEventArgs">
            <summary>
            Class that defines event argument of the column menu item click.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnMenuClickEventArgs.Column">
            <summary>
            Gets the current column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnMenuClickEventArgs.Element">
            <summary>
            Gets the current target.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnMenuClickEventArgs.Event">
            <summary>
            Gets the original event details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnMenuClickEventArgs.Item">
            <summary>
            Gets the current clicked item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnMenuClickEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ColumnMenuItemModel">
            <summary>
            Class that defines column menu item model.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnMenuItemModel.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the menu Item that is used to include an icon.
            Menu Item can include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnMenuItemModel.Id">
            <summary>
            Specifies the id for menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnMenuItemModel.Items">
            <summary>
            Specifies the sub menu items that is the array of MenuItem model.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnMenuItemModel.Separator">
            <summary>
            Specifies separator between the menu items. Separator are either horizontal or vertical lines used to group menu items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnMenuItemModel.Text">
            <summary>
            Specifies text for menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnMenuItemModel.Url">
            <summary>
            Specifies url for menu item that creates the anchor link to navigate to the url provided.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ColumnMenuOpenEventArgs">
            <summary>
            Class that defines event argument of the column menu open.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnMenuOpenEventArgs.Cancel">
            <summary>
            Specifies the event cancel flag. Setting this as true will cancel the column menu open operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnMenuOpenEventArgs.Column">
            <summary>
            Gets the current column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnMenuOpenEventArgs.Element">
            <summary>
            Gets the current target.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnMenuOpenEventArgs.Event">
            <summary>
            Gets the original event. It can be either mouse click event or keyboard event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnMenuOpenEventArgs.Items">
            <summary>
            Gets the list of available items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnMenuOpenEventArgs.Left">
            <summary>
            Gets the left position value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnMenuOpenEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnMenuOpenEventArgs.ParentItem">
            <summary>
            Gets the parent item model. Value is null if current item is not a submenu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnMenuOpenEventArgs.Top">
            <summary>
            Gets the top position value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.CommandButtonOptions">
            <summary>
            Defines options for command buttons.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CommandButtonOptions.Content">
            <summary>
            Defines the text content of the Button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CommandButtonOptions.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the Button element.
            The Button types, styles, and size can be defined.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CommandButtonOptions.Disabled">
            <summary>
            Specifies a value that indicates whether the Button is disabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CommandButtonOptions.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CommandButtonOptions.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the Button that is used to include an icon.
            Buttons can also include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CommandButtonOptions.IconPosition">
            <summary>
            Positions the icon before/after the text content in the Button.
            The possible values are:
             Left: The icon will be positioned to the left of the text content.
             Right: The icon will be positioned to the right of the text content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CommandButtonOptions.IsPrimary">
            <summary>
            Allows the appearance of the Button to be enhanced and visually appealing when set to true.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CommandButtonOptions.IsToggle">
            <summary>
            Makes the Button toggle, when set to true. When you click it, the state changes from normal to active.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.CommandClickEventArgs`1">
            <summary>
            Class that defines event argument of the command button click.
            </summary>
            <typeparam name="T">TValue of the grid component.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CommandClickEventArgs`1.Cancel">
            <summary>
            cancel the CRUD action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CommandClickEventArgs`1.CommandColumn">
            <summary>
            Defines the current command column .
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CommandClickEventArgs`1.RowData">
            <summary>
            returns particular row data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CommandClickEventArgs`1.Target">
            <summary>
            Defines the current target element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.CommandModel">
            <summary>
            Define options for command buttons.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CommandModel.ButtonOption">
            <summary>
            Define the button model.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CommandModel.Title">
            <summary>
            Define the command Button tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CommandModel.Type">
            <summary>
            Define the command Button type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CommandModel.ID">
            <summary>
            Define the command button ID.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.CommandModel.Uid">
            <summary>
             Defines the command button Uid.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ContextMenuClickEventArgs`1">
            <summary>
            Defines the context menu click event argument.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ContextMenuClickEventArgs`1.Column">
            <summary>
            Gets the current column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ContextMenuClickEventArgs`1.Element">
            <summary>
            Gets the target element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ContextMenuClickEventArgs`1.Event">
            <summary>
            Gets the original event. It can be either mouse event or keyboard event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ContextMenuClickEventArgs`1.Item">
            <summary>
            Gets the currently clicked context menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ContextMenuClickEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ContextMenuClickEventArgs`1.RowInfo">
            <summary>
            Gets the row detail.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ContextMenuItemModel">
            <summary>
            Defines the context menu item model.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ContextMenuItemModel.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the menu Item that is used to include an icon.
            Menu Item can include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ContextMenuItemModel.Id">
            <summary>
            Specifies the id for menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ContextMenuItemModel.Items">
            <summary>
            Specifies the sub menu items that is the array of MenuItem model.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ContextMenuItemModel.Separator">
            <summary>
            Specifies separator between the menu items. Separator are either horizontal or vertical lines used to group menu items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ContextMenuItemModel.Target">
            <summary>
            Define the target to show the menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ContextMenuItemModel.Text">
            <summary>
            Specifies text for menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ContextMenuItemModel.Url">
            <summary>
            Specifies url for menu item that creates the anchor link to navigate to the url provided.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ContextMenuOpenEventArgs`1">
            <summary>
            Class that defines event argument of the context menu open.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ContextMenuOpenEventArgs`1.ContextMenuObj">
            <summary>
            Gets the context menu component instance(<c>ref</c>).
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ContextMenuOpenEventArgs`1.Cancel">
            <summary>
            Cancels the open event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ContextMenuOpenEventArgs`1.Column">
            <summary>
            Specifies the current column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ContextMenuOpenEventArgs`1.Element">
            <summary>
            Specifies the DOM details of current target.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ContextMenuOpenEventArgs`1.Event">
            <summary>
            Specifies the original event. It can be either mouse event or keyboard event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ContextMenuOpenEventArgs`1.Items">
            <summary>
            Specifies the current items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ContextMenuOpenEventArgs`1.Left">
            <summary>
            Specifies the left position.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ContextMenuOpenEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ContextMenuOpenEventArgs`1.ParentItem">
            <summary>
            Specifies the parent item model when clicking sub item. For item with no parent item, this will be null.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ContextMenuOpenEventArgs`1.RowInfo">
            <summary>
            Gets the row details when menu is opened in content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ContextMenuOpenEventArgs`1.Top">
            <summary>
            Specifies the top position.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.DetailDataBoundEventArgs`1">
            <summary>
            Defines thee event arguments of detail template open.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.DetailDataBoundEventArgs`1.Data">
            <summary>
            Defines the selected row data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.DetailDataBoundEventArgs`1.DetailElement">
            <summary>
            Defines the details row element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ExcelCell">
            <summary>
            Defines the cell of exported excel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelCell.ColSpan">
            <summary>
            Defines the column span for the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelCell.Hyperlink">
            <summary>
            Defines the hyperlink of the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelCell.Index">
            <summary>
            Defines the index for the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelCell.RowSpan">
            <summary>
            Defines the row span for the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelCell.Style">
            <summary>
            Defines the style of the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelCell.Value">
            <summary>
            Defines the value of the cell.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ExcelExportCompleteArgs">
            <summary>
            Defines the event argument of excel export complete.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ExcelExportProperties">
            <summary>
            Defines the options for customizing the excel document during export.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelExportProperties.Columns">
            <summary>
            Defines the columns which are to be customized for Export alone.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelExportProperties.DataSource">
            <summary>
            Defines the data source dynamically before exporting.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelExportProperties.ExportType">
            <summary>
            Indicates to export current page or all page.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelExportProperties.FileName">
            <summary>
            Defines the file name for the exported file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelExportProperties.Footer">
            <summary>
            Defines the footer content for exported document.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelExportProperties.Header">
            <summary>
            Defines the header content for exported document.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelExportProperties.HierarchyExportMode">
            <summary>
            Defines the hierarchy export mode for the pdf grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelExportProperties.IncludeHiddenColumn">
            <summary>
            Indicates whether to show the hidden columns in exported excel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelExportProperties.IncludeCommandColumn">
            <summary>
            Indicates whether to show/hide the command columns in exported excel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelExportProperties.IncludeTemplateColumn">
            <summary>
            Indicates whether to show/hide the Template columns in exported excel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelExportProperties.MultipleExport">
            <summary>
            Exports multiple grid into the excel document.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelExportProperties.Theme">
            <summary>
            Defines the theme for exported data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelExportProperties.Workbook">
            <summary>
            Defines the additional workbook sheets for export.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelExportProperties.GridSheetIndex">
            <summary>
            Defines the Grid sheet index. Based on index Grid sheet will append.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelExportProperties.IncludeHeaderRow">
            <summary>
            Enable/disable the property to export the Grid column header row.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ExcelFooter">
            <summary>
            Defines the excel footer option class.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelFooter.FooterRows">
            <summary>
            Defines the number of rows between the grid data and footer.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelFooter.Rows">
            <summary>
            Defines the rows in footer content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ExcelHeader">
            <summary>
            Defines the excel header options.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelHeader.HeaderRows">
            <summary>
            Defines the number of rows between the header and grid data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelHeader.Rows">
            <summary>
            Defines the rows in header content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ExcelCaptionTemplateArgs">
            <summary>
            Defines event argument of group caption template event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelCaptionTemplateArgs.Cell">
            <summary>
            Defines the cell data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelCaptionTemplateArgs.Column">
            <summary>
            Defines the Grouped Column  of the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelCaptionTemplateArgs.Style">
            <summary>
            Defines the style of the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelCaptionTemplateArgs.Value">
            <summary>
            Defines the value of the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelCaptionTemplateArgs.Count">
            <summary>
            Gets count value which specified the number of records in the group.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelCaptionTemplateArgs.Field">
            <summary>
            Gets the current group field name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelCaptionTemplateArgs.ForeignKeyValue">
            <summary>
            Gets the current foreign key value name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelCaptionTemplateArgs.ForeignKey">
            <summary>
            Gets corresponding grouped foreign key value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelCaptionTemplateArgs.HeaderText">
            <summary>
            Gets header text of the grouped column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelCaptionTemplateArgs.Key">
            <summary>
            Gets grouped data key value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ExcelAggregateEventArgs">
            <summary>
            Defines event argument of excel aggregate event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelAggregateEventArgs.Cell">
            <summary>
            Defines the cell data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelAggregateEventArgs.Column">
            <summary>
            Defines the aggregate column of the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelAggregateEventArgs.Style">
            <summary>
            Defines the style of the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelAggregateEventArgs.Value">
            <summary>
            Defines the value of the current cell.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ExcelQueryCellInfoEventArgs`1">
            <summary>
            Defines event argument of excel query cell event.
            </summary>
            <typeparam name="T">TValue of grid component.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelQueryCellInfoEventArgs`1.Cell">
            <summary>
            Defines the cell data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelQueryCellInfoEventArgs`1.ColSpan">
            <summary>
            Defines the number of columns to be spanned.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelQueryCellInfoEventArgs`1.Column">
            <summary>
            Defines the column of the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelQueryCellInfoEventArgs`1.Data">
            <summary>
            Defines the row data associated with this cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelQueryCellInfoEventArgs`1.Style">
            <summary>
            Defines the style of the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelQueryCellInfoEventArgs`1.Value">
            <summary>
            Defines the value of the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelQueryCellInfoEventArgs`1.RowIndex">
            <summary>
            Defines the current cell row index of the Excel Grid column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelQueryCellInfoEventArgs`1.ColumnIndex">
            <summary>
            Defines the current cell column index of the Excel Grid column.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ExcelHeaderQueryCellInfoEventArgs">
            <summary>
            Defines event argument of excel header query cell event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelHeaderQueryCellInfoEventArgs.Cell">
            <summary>
            Defines the cell that contains colspan.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelHeaderQueryCellInfoEventArgs.Column">
            <summary>
            Defines the Grid cell instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelHeaderQueryCellInfoEventArgs.Style">
            <summary>
            Defines the style of the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelHeaderQueryCellInfoEventArgs.Colspan">
            <summary>
            Defines the style of the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelHeaderQueryCellInfoEventArgs.Value">
            <summary>
            Defines the value of the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelHeaderQueryCellInfoEventArgs.RowIndex">
            <summary>
            Defines the current cell row index of the Excel Grid column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelHeaderQueryCellInfoEventArgs.ColumnIndex">
            <summary>
            Defines the current cell column index of the Excel Grid column.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PdfCaptionTemplateArgs">
            <summary>
            Defines event argument of group caption template event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfCaptionTemplateArgs.Cell">
            <summary>
            Defines the cell data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfCaptionTemplateArgs.Column">
            <summary>
            Defines the Grouped Column  of the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfCaptionTemplateArgs.Style">
            <summary>
            Defines the style of the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfCaptionTemplateArgs.Value">
            <summary>
            Defines the value of the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfCaptionTemplateArgs.Count">
            <summary>
            Gets count value which specified the number of records in the group.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfCaptionTemplateArgs.Field">
            <summary>
            Gets the current group field name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfCaptionTemplateArgs.ForeignKeyValue">
            <summary>
            Gets the current foreign key value name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfCaptionTemplateArgs.ForeignKey">
            <summary>
            Gets corresponding grouped foreign key value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfCaptionTemplateArgs.HeaderText">
            <summary>
            Gets header text of the grouped column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfCaptionTemplateArgs.Key">
            <summary>
            Gets grouped data key value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PdfAggregateEventArgs">
            <summary>
            Defines event argument of pdf aggregate event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfAggregateEventArgs.Cell">
             <summary>
             Defines the cell data.
             </summary>
            
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfAggregateEventArgs.Column">
            <summary>
            Defines the aggregate column of the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfAggregateEventArgs.Style">
            <summary>
            Defines the style of the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfAggregateEventArgs.Value">
            <summary>
            Defines the value of the current cell.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ExcelRow">
            <summary>
            Defines excel export row of grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelRow.Cells">
            <summary>
            Defines the cells in a row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelRow.Index">
            <summary>
            Defines the index for cells.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ExcelStyle">
            <summary>
            Defines option for styling excel cell/row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelStyle.BackColor">
            <summary>
            Defines the background color for cell style.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelStyle.Bold">
            <summary>
            Defines the bold style for fonts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelStyle.Borders">
            <summary>
            Defines the borders for cell style.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelStyle.FontColor">
            <summary>
            Defines the color of font.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelStyle.FontName">
            <summary>
            Defines the name of font.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelStyle.FontSize">
            <summary>
            Defines the size of font.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelStyle.HAlign">
            <summary>
            Defines the horizontal alignment for cell style.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelStyle.Indent">
            <summary>
            Defines the indent for cell style.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelStyle.Italic">
            <summary>
            Defines the italic style for fonts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelStyle.NumberFormat">
            <summary>
            Defines the format of the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelStyle.Type">
            <summary>
            Defines the type of the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelStyle.Underline">
            <summary>
            Defines the underline style for fonts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelStyle.VAlign">
            <summary>
            Defines the vertical alignment for cell style.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelStyle.WrapText">
            <summary>
            Defines the wrapText for cell style.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ExcelTheme">
            <summary>
            Defines options for customizing theme during excel export.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelTheme.Caption">
            <summary>
            Defines the theme style of caption content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelTheme.Header">
            <summary>
            Defines the style of header content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExcelTheme.Record">
            <summary>
            Defines the theme style of record content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ExportGroupCaptionEventArgs">
            <summary>
            Defines event argument of excel group caption event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ExportGroupCaptionEventArgs.CaptionText">
            <summary>
            Defines the group caption text.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.FailureEventArgs">
            <summary>
            Defines event argument of grid action failure event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.FailureEventArgs.Error">
            <summary>
            Defines the error information.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.FilterUI">
            <summary>
            Defines the filter UI option that can be used to get filter menu details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.FilterUI.Field">
            <summary>
            Defines the field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.FilterUI.FirstOperator">
            <summary>
            Defines the first operator for excel filter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.FilterUI.Operator">
            <summary>
            Defines the Operator.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.FilterUI.SecondOperator">
            <summary>
            Defines the second Operator for excel filter.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.HeaderCellInfoEventArgs">
            <summary>
            Defines event argument of header query cell event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.HeaderCellInfoEventArgs.Cell">
            <summary>
            Defines the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.HeaderCellInfoEventArgs.Node">
            <summary>
            Defines the cell element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Hyperlink">
            <summary>
            Defines hyper link options for exporting.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Hyperlink.DisplayText">
            <summary>
            Defines the display text for hyperlink.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Hyperlink.Target">
            <summary>
            Defines the Url for hyperlink.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.MultipleExport">
            <summary>
            Defines multi-export options.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.MultipleExport.BlankRows">
            <summary>
            Defines the number of blank rows between the multiple grid data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.MultipleExport.Type">
            <summary>
            Indicates whether to append the multiple grid in same sheet or different sheet.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PdfBorder">
            <summary>
            Defines pdf cell border options.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfBorder.Color">
            <summary>
            Defines the border color.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfBorder.DashStyle">
            <summary>
            Defines the border dash style.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfBorder.LineStyle">
            <summary>
            Defines the line style of border.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfBorder.Width">
            <summary>
            Defines the border width.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PdfContentStyle">
            <summary>
            Defines pdf cell style options.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfContentStyle.DashStyle">
            <summary>
            Defines the dash style.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfContentStyle.FontSize">
            <summary>
            Defines the font size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfContentStyle.HAlign">
            <summary>
            Defines the horizontal alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfContentStyle.PenColor">
            <summary>
            Defines the pen color.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfContentStyle.PenSize">
            <summary>
            Defines the pen size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfContentStyle.TextBrushColor">
            <summary>
            Defines the text brush color.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfContentStyle.TextPenColor">
            <summary>
            Defines the text pen color.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfContentStyle.VAlign">
            <summary>
            Defines the vertical alignment.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PdfExportCompleteArgs">
            <summary>
            Defines pdf export completion event arguments.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PdfExportProperties">
            <summary>
            Defines pdf export customization options.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfExportProperties.AllowHorizontalOverflow">
            <summary>
            Defines the overflow of columns for the pdf grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfExportProperties.Columns">
            <summary>
            Defines the columns which are to be customized for Export alone.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfExportProperties.DataSource">
            <summary>
            Defines the data source dynamically before exporting.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfExportProperties.ExportType">
            <summary>
            Indicates to export current page or all page.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfExportProperties.FileName">
            <summary>
            Defines the file name for the exported file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfExportProperties.IsRepeatHeader">
            <summary>
            Enable/disbale the PDF header repeats every page.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfExportProperties.IncludeCommandColumn">
            <summary>
            Indicates whether to show/hide the command columns in exported excel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfExportProperties.IncludeTemplateColumn">
            <summary>
            Indicates whether to show/hide the Template columns in exported excel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfExportProperties.Footer">
            <summary>
            Defines the Pdf footer.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfExportProperties.Header">
            <summary>
            Defines the Pdf header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfExportProperties.IsThemeEnabled">
            <summary>
            Enable/Disable the PDF style. If increasing the performance while using large records then disable this property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfExportProperties.HierarchyExportMode">
            <summary>
            Defines the hierarchy export mode for the pdf grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfExportProperties.IncludeHiddenColumn">
            <summary>
            Indicates whether to show the hidden columns in exported Pdf.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfExportProperties.PageOrientation">
            <summary>
            Defines the Pdf orientation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfExportProperties.PageSize">
            <summary>
            Defines the Pdf page size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfExportProperties.Theme">
            <summary>
            Defines the theme for exported data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfExportProperties.DisableAutoFitWidth">
            <summary>
            Defines the Grid's Column width to Pdf Column width. This can be also enables AllowHorizontalOverflow API internally.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfExportProperties.IncludeHeaderRow">
            <summary>
            Enable/disable the property to export the Grid column header row.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PdfFooter">
            <summary>
            Defines pdf footer options.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfFooter.Contents">
            <summary>
            Defines the footer contents.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfFooter.FromBottom">
            <summary>
            Defines the footer content distance from bottom.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfFooter.Height">
            <summary>
            Defines the height of footer content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PdfGridFont">
            <summary>
            Defines pdf grid font options.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfGridFont.FontFamily">
            <summary>
            Defines the  fontFamily of font content. Value can be either PdfStandardFont or TrueTypeFont.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfGridFont.FontSize">
            <summary>
            Defines the fontSize of font content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfGridFont.FontStyle">
            <summary>
            Defines the fontStyle of font content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfGridFont.IsTrueType">
            <summary>
            Defines the trueTypeFont is enabled or not for font content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PdfHeader">
            <summary>
            Defines pdf header options.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfHeader.Contents">
            <summary>
            Defines the header contents.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfHeader.FromTop">
            <summary>
            Defines the header content distance from top.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfHeader.Height">
            <summary>
            Defines the height of header content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PdfHeaderFooterContent">
            <summary>
            Defines pdf header footer options.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfHeaderFooterContent.Font">
            <summary>
            Defines the font for the content. Value can be either PdfStandardFont or TrueTypeFont.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfHeaderFooterContent.Format">
            <summary>
            Defines the format for customizing page number.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfHeaderFooterContent.PageNumberType">
            <summary>
            Defines the page number type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfHeaderFooterContent.Points">
            <summary>
            Defines the pdf points for drawing line.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfHeaderFooterContent.Position">
            <summary>
            Defines the position of the content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfHeaderFooterContent.Size">
            <summary>
            Defines the size of content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfHeaderFooterContent.Src">
            <summary>
            Defines the base64 string for image content type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfHeaderFooterContent.Style">
            <summary>
            Defines the style of content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfHeaderFooterContent.Type">
            <summary>
            Defines the content type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfHeaderFooterContent.Value">
            <summary>
            Defines the value for content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfHeaderFooterContent.IsTrueType">
            <summary>
            Defines the trueTypeFont is enabled or not for font content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PdfHeaderQueryCellInfoEventArgs">
            <summary>
            Defines pdf header query cell event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfHeaderQueryCellInfoEventArgs.Cell">
            <summary>
            Defines the PDF grid current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfHeaderQueryCellInfoEventArgs.Column">
            <summary>
            Defines the current cell of the Grid column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfHeaderQueryCellInfoEventArgs.PdfGridColumn">
            <summary>
            Defines the current cell of the Pdf Grid column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfHeaderQueryCellInfoEventArgs.RowIndex">
            <summary>
            Defines the current cell row index of the Pdf Grid column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfHeaderQueryCellInfoEventArgs.ColumnIndex">
            <summary>
            Defines the current cell column index of the Pdf Grid column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfHeaderQueryCellInfoEventArgs.Style">
            <summary>
            Defines the style of the current cell.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PdfPoints">
            <summary>
            Defines pdf points.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfPoints.X1">
            <summary>
            Defines the x1 position.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfPoints.X2">
            <summary>
            Defines the x2 position.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfPoints.Y1">
            <summary>
            Defines the y1 position.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfPoints.Y2">
            <summary>
            Defines the y2 position.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PdfPosition">
            <summary>
            Defines pdf position.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfPosition.X">
            <summary>
            Defines the x position.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfPosition.Y">
            <summary>
            Defines the y position.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PdfQueryCellInfoEventArgs`1">
            <summary>
            Defines pdf query cell event argument.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfQueryCellInfoEventArgs`1.Cell">
            <summary>
            Defines the current PDF cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfQueryCellInfoEventArgs`1.ColSpan">
            <summary>
            Defines the no. of columns to be spanned.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfQueryCellInfoEventArgs`1.Column">
            <summary>
            Defines the column of the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfQueryCellInfoEventArgs`1.Data">
            <summary>
            Defines the data of the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfQueryCellInfoEventArgs`1.Style">
            <summary>
            Defines the style of the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfQueryCellInfoEventArgs`1.Value">
            <summary>
            Defines the value of the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfQueryCellInfoEventArgs`1.RowIndex">
            <summary>
            Defines the current cell row index of the Pdf Grid column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfQueryCellInfoEventArgs`1.ColumnIndex">
            <summary>
            Defines the current cell column index of the Pdf Grid column.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PdfSize">
            <summary>
            Defines pdf size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfSize.Height">
            <summary>
            Defines the height.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfSize.Width">
            <summary>
            Defines the width.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PdfStyle">
            <summary>
            Defines pdf cell style.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfStyle.BackgroundColor">
            <summary>
            Defines the background color.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfStyle.Bold">
            <summary>
            Defines the font bold.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfStyle.Border">
            <summary>
            Defines the grid border.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfStyle.FontFamily">
            <summary>
            Defines the font family.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfStyle.FontSize">
            <summary>
            Defines the font size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfStyle.Indent">
            <summary>
            Defines the indent alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfStyle.Italic">
            <summary>
            Defines the italic font.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfStyle.ParagraphIndent">
            <summary>
            Defines the cell indent.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfStyle.Strikeout">
            <summary>
            Defines the strike-out font.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfStyle.TextAlignment">
            <summary>
            Defines the horizontal alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfStyle.TextBrushColor">
            <summary>
            Defines the brush color of font.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfStyle.TextPenColor">
            <summary>
            Defines the pen color of font.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfStyle.Underline">
            <summary>
            Defines the underlined font.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfStyle.VerticalAlignment">
            <summary>
            Defines the horizontal alignment.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PdfTheme">
            <summary>
            Defines pdf export theme.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfTheme.Caption">
            <summary>
            Defines the theme style of caption content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfTheme.Header">
            <summary>
            Defines the style of header content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfTheme.Record">
            <summary>
            Defines the theme style of record content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PdfThemeStyle">
            <summary>
            Defines pdf export theme.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfThemeStyle.Bold">
            <summary>
            Defines the bold of theme style.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfThemeStyle.Border">
            <summary>
            Defines the borders of theme style.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfThemeStyle.Font">
            <summary>
            Defines the font of the theme.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfThemeStyle.FontColor">
            <summary>
            Defines the font color of theme style.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfThemeStyle.FontName">
            <summary>
            Defines the font name of theme style.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfThemeStyle.FontSize">
            <summary>
            Defines the font size of theme style.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfThemeStyle.Italic">
            <summary>
            Defines the italic of theme style.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfThemeStyle.Strikeout">
            <summary>
            Defines the strikeout of theme style.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PdfThemeStyle.Underline">
            <summary>
            Defines the underline of theme style.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.QueryCellInfoEventArgs`1">
            <summary>
            Defines event argument of query cell event.
            </summary>
            <typeparam name="T">TValue of grid component.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.QueryCellInfoEventArgs`1.Cell">
            <summary>
            Defines the cell element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.QueryCellInfoEventArgs`1.ColSpan">
            <summary>
            Defines the no. of columns to be spanned.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.QueryCellInfoEventArgs`1.Column">
            <summary>
            Defines the column object associated with this cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.QueryCellInfoEventArgs`1.Data">
            <summary>
            Defines the row data associated with this cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.QueryCellInfoEventArgs`1.ForeignKeyData">
            <summary>
            Define the foreignKey row data associated with this column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.QueryCellInfoEventArgs`1.RequestType">
            <summary>
            Defines the current action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.QueryCellInfoEventArgs`1.RowSpan">
            <summary>
            Defines the no. of rows to be spanned.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.RecordClickEventArgs`1">
            <summary>
            Defines the event arguments of record click event.
            </summary>
            <typeparam name="T">TValue of the grid component.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RecordClickEventArgs`1.Cell">
            <summary>
            Defines the cell element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RecordClickEventArgs`1.CellIndex">
            <summary>
            Defines the cell index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RecordClickEventArgs`1.Column">
            <summary>
            Defines the column object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RecordClickEventArgs`1.ForeignKeyData">
            <summary>
            Define the foreignKey row data associated with this column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RecordClickEventArgs`1.Name">
            <summary>
            Defines the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RecordClickEventArgs`1.Row">
            <summary>
            Defines the row element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RecordClickEventArgs`1.RowData">
            <summary>
            Defines the current row data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RecordClickEventArgs`1.RowIndex">
            <summary>
            Defines the row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RecordClickEventArgs`1.Target">
            <summary>
            Defines the target element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.RecordDoubleClickEventArgs`1">
            <summary>
            Defines the event arguments of record double click event.
            </summary>
            <typeparam name="T">TValue of the grid component.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RecordDoubleClickEventArgs`1.Cell">
            <summary>
            Defines the cell element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RecordDoubleClickEventArgs`1.CellIndex">
            <summary>
            Defines the cell index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RecordDoubleClickEventArgs`1.Column">
            <summary>
            Defines the column object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RecordDoubleClickEventArgs`1.ForeignKeyData">
            <summary>
            Define the foreignKey row data associated with this column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RecordDoubleClickEventArgs`1.Name">
            <summary>
            Defines the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RecordDoubleClickEventArgs`1.Row">
            <summary>
            Defines the row element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RecordDoubleClickEventArgs`1.RowData">
            <summary>
            Defines the current row data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RecordDoubleClickEventArgs`1.RowIndex">
            <summary>
            Defines the row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RecordDoubleClickEventArgs`1.Target">
            <summary>
            Defines the target element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ResizeArgs">
            <summary>
            Defines the event arguments of resize action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ResizeArgs.Cancel">
            <summary>
            Defines the cancel option value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ResizeArgs.Column">
            <summary>
            Defines the resizing column details.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.RowDataBoundEventArgs`1">
            <summary>
            Defines the event arguments of row databound.
            </summary>
            <typeparam name="T">TValue of the grid component.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowDataBoundEventArgs`1.Data">
            <summary>
            Defines the current row data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowDataBoundEventArgs`1.Row">
            <summary>
            Defines the row element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowDataBoundEventArgs`1.RowHeight">
            <summary>
            Defines the row height.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.RowDeselectEventArgs`1">
            <summary>
            Defines the event arguments of row deselect.
            </summary>
            <typeparam name="T">TValue of the grid component.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowDeselectEventArgs`1.Event">
            <summary>
            Defines the Mouse Event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowDeselectEventArgs`1.Cancel">
            <summary>
            Defines the cancel option value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowDeselectEventArgs`1.Data">
            <summary>
            Defines the current selected/deselected row data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowDeselectEventArgs`1.ForeignKeyData">
            <summary>
            Define the foreignKey row data associated with this column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowDeselectEventArgs`1.IsInteracted">
            <summary>
            Defines whether event is triggered by interaction or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowDeselectEventArgs`1.IsHeaderCheckboxClicked">
            <summary>
            Defines whether header checkbox is clicked or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowDeselectEventArgs`1.Row">
            <summary>
            Defines the selected/deselected row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowDeselectEventArgs`1.RowIndex">
            <summary>
            Defines the selected/deselected row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowDeselectEventArgs`1.IsCtrlPressed">
            <summary>
            Defines whether CTRL key is pressed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowDeselectEventArgs`1.IsShiftPressed">
            <summary>
            Defines whether SHIFT key is pressed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowDeselectEventArgs`1.Target">
            <summary>
            Defines the target element for row deselect.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Dimension">
            <summary>
            Defines the dimension of selected target.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Dimension.Left">
            <summary>
            Defines the left position of the target.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Dimension.Right">
            <summary>
            Defines the right position of the target.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Dimension.Top">
            <summary>
            Defines the top position of the target.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Dimension.Bottom">
            <summary>
            Defines the bottom position of the target.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Dimension.Width">
            <summary>
            Defines the width position of the target.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Dimension.Height">
            <summary>
            Defines the height position of the target.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.RowDragEventArgs`1">
            <summary>
            Defines the event arguments of row drag and drop.
            </summary>
            <typeparam name="T">TValue of the grid component.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowDragEventArgs`1.Data">
            <summary>
            Defines the selected row data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowDragEventArgs`1.DropIndex">
            <summary>
            Defines the target element from index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowDragEventArgs`1.FromIndex">
            <summary>
            Defines the drag element from index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowDragEventArgs`1.OriginalEvent">
            <summary>
            Define the mouse event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowDragEventArgs`1.Rows">
            <summary>
            Defines the selected row's element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowDragEventArgs`1.TargetDimension">
            <summary>
            Defines the selected target dimensions.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowDragEventArgs`1.Target">
            <summary>
            Defines the target element from which drag starts.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.RowInfo`1">
            <summary>
            Defines the row info such as data, row index and cell index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowInfo`1.Cell">
            <summary>
            returns particular cell element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowInfo`1.CellIndex">
            <summary>
            returns particular cell index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowInfo`1.Column">
            <summary>
            return particular column information.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowInfo`1.Row">
            <summary>
            returns particular row element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowInfo`1.RowData">
            <summary>
            returns particular row data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowInfo`1.RowIndex">
            <summary>
            returns particular rowIndex.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.FilterItemTemplateContext">
            <summary>
            Defines the context details of the FilterItemTemplate of checkbox and excel filter.
            </summary>
            <seealso cref="P:Syncfusion.Blazor.Grids.GridColumn.FilterItemTemplate"/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.FilterItemTemplateContext.Value">
            <summary>
            Gets the current cell value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.FilterItemTemplateContext.Column">
            <summary>
            Gets the current column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.FilterItemTemplateContext.Record">
            <summary>
            Gets the current record.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.RowSelectEventArgs`1">
            <summary>
            Defines the event arguments of row select event.
            </summary>
            <typeparam name="T">TValue of the grid component.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectEventArgs`1.Event">
            <summary>
            Defines the Mouse Event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectEventArgs`1.Cancel">
            <summary>
            Defines the cancel option value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectEventArgs`1.Data">
            <summary>
            Defines the current selected/deselected row data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectEventArgs`1.ForeignKeyData">
            <summary>
            Define the foreignKey row data associated with this column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectEventArgs`1.IsInteracted">
            <summary>
            Defines whether event is triggered by interaction or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectEventArgs`1.IsHeaderCheckboxClicked">
            <summary>
            Defines whether header checkbox is clicked or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectEventArgs`1.PreviousRow">
            <summary>
            Defines the previously selected row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectEventArgs`1.PreviousRowIndex">
            <summary>
            Defines the previously selected row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectEventArgs`1.Row">
            <summary>
            Defines the selected/deselected row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectEventArgs`1.RowIndex">
            <summary>
            Defines the selected/deselected row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectEventArgs`1.IsCtrlPressed">
            <summary>
            Defines whether CTRL key is pressed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectEventArgs`1.IsShiftPressed">
            <summary>
            Defines whether SHIFT key is pressed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectEventArgs`1.Target">
            <summary>
            Defines the target element for selection.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.RowSelectingEventArgs`1">
            <summary>
            Defines the event arguments of row selecting event.
            </summary>
            <typeparam name="T">TValue of the grid component.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectingEventArgs`1.Event">
            <summary>
            Defines the Mouse Event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectingEventArgs`1.Cancel">
            <summary>
            Defines the cancel option value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectingEventArgs`1.Data">
            <summary>
            Defines the current selected/deselected row data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectingEventArgs`1.ForeignKeyData">
            <summary>
            Define the foreignKey row data associated with this column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectingEventArgs`1.IsCtrlPressed">
            <summary>
            Defines whether CTRL key is pressed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectingEventArgs`1.IsInteracted">
            <summary>
            Defines whether event is triggered by interaction or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectingEventArgs`1.IsShiftPressed">
            <summary>
            Defines whether SHIFT key is pressed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectingEventArgs`1.IsHeaderCheckboxClicked">
            <summary>
            Defines whether header checkbox is clicked or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectingEventArgs`1.PreviousRow">
            <summary>
            Defines the previously selected row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectingEventArgs`1.PreviousRowIndex">
            <summary>
            Defines the previously selected row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectingEventArgs`1.Row">
            <summary>
            Defines the selected/deselected row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectingEventArgs`1.RowIndex">
            <summary>
            Defines the selected/deselected row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.RowSelectingEventArgs`1.Target">
            <summary>
            Defines the target element for selection.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ActionEventArgs`1">
            <summary>
            Defines the event arguments of grid <see cref="T:Syncfusion.Blazor.Grids.Action"/>.
            </summary>
            <typeparam name="T">TValue of the grid component.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.Action">
            <summary>
            Defines the current action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.Cancel">
            <summary>
            Cancel the print action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.ColumnName">
            <summary>
            Defines the field name of the currently grouped columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.FromColumns">
            <summary>
            Defines the collection of columns to be moved.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.ToColumn">
            <summary>
            Defines the destination column to place reordered columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.Columns">
            <summary>
            Defines the collection of filtered columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.CurrentFilterObject">
            <summary>
            Defines the object that is currently filtered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.CurrentFilteringColumn">
            <summary>
            Defines the column name that is currently filtered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.CurrentPage">
            <summary>
            Defines the current page number.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.Data">
            <summary>
            Defines the record objects.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.Direction">
            <summary>
            Defines the direction of sort column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.ExcelSearchOperator">
            <summary>
            Defines the excel search operator.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.FilterChoiceCount">
            <summary>
            Defines take number of data while Filtering.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.ForeignKeyData">
            <summary>
            Defines foreign data object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.FilterOperators">
            <summary>
            Defines the custom filter operators.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.Form">
            <summary>
            Define the form element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.HiddenColumns">
            <summary>
            Specifies the list of hidden columns in column chooser.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.Index">
            <summary>
            Added row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.MovableForm">
            <summary>
            Define the movable table form element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.PreviousData">
            <summary>
            Defines the previous data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.PreviousPage">
            <summary>
            Defines the previous page number.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.PrimaryKeyValue">
            <summary>
            Defines the primary key value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.PrimaryKeys">
            <summary>
            Defines the primary keys.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.RequestType">
            <summary>
            Defines the current action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.Row">
            <summary>
            Defines the added row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.RowData">
            <summary>
            Defines the record objects.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.RowIndex">
            <summary>
            Defines the edited rowIndex.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.SearchString">
            <summary>
            Defines the string value to search.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.SelectedRow">
            <summary>
            Defines the selected row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.Target">
            <summary>
            Defines the target for dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.Tr">
            <summary>
            Defines the selected rows for delete.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.Type">
            <summary>
            Defines the type of event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.VisibleColumns">
            <summary>
            Specifies the list of visible columns in column chooser.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.EditContext">
            <summary>
            Defines the current <c>EditContext</c> instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ActionEventArgs`1.CheckboxListData">
            <summary>
            Defines the custom data source for Checkbox/Excel filter.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ColumnModel">
            <summary>
            Defines the Column model.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.AllowEditing">
            <summary>
            If AllowEditing set to false, then it disables editing of a particular column.
            By default all columns are editable.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.AllowFiltering">
            <summary>
            If AllowFiltering set to false, then it disables filtering option and filter bar element of a particular column.
            By default all columns are filterable.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.AllowGrouping">
            <summary>
            If AllowGrouping set to false, then it disables grouping of a particular column.
            By default all columns are groupable.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.AllowReordering">
            <summary>
            If AllowReordering set to false, then it disables reorder of a particular column.
            By default all columns can be reorder.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.AllowResizing">
            <summary>
            If AllowResizing set to false, it disables resize option of a particular column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.AllowSearching">
            <summary>
            If AllowSearching set to false, then it disables Searching of a particular column.
            By default all columns allow Searching.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.AllowSorting">
            <summary>
            If AllowSorting set to false, then it disables sorting option of a particular column.
            By default all columns are sortable.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.AutoFit">
            <summary>
            If AutoFit set to true, then the particular column content width will be
            adjusted based on its content in the initial rendering itself.
            Setting this property as true is equivalent to calling autoFitColumns method in the dataBound event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.ClipMode">
            <summary>
            Defines the cell content's overflow mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.Columns">
            <summary>
            Used to render multiple header rows(stacked headers) on the Grid header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.Commands">
            <summary>
            commands provides an option to display command buttons in every cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.CustomAttributes">
            <summary>
            The CSS styles and attributes of the content cells of a particular column can be customized.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.DataSource">
            <summary>
            Defines the column data source  which will act as foreign data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.DefaultValue">
            <summary>
            Defines default values for the component when adding a new record to the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.DisableHtmlEncode">
            <summary>
            If DisableHtmlEncode is set to true, it encodes the HTML of the header and content cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.DisplayAsCheckBox">
            <summary>
            If DisplayAsCheckBox is set to true, it displays the column value as a check box instead of Boolean value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.Edit">
            <summary>
            Defines object to customize default edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.EditTemplate">
            <summary>
            Defines the cell edit template that used as editor for a particular column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.EditType">
            <summary>
            Defines the type of component for editing.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.EnableGroupByFormat">
            <summary>
            If EnableGroupByFormat set to true, then it groups the particular column by formatted values.
            By default no columns are group by format.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.Field">
            <summary>
            Defines the field name of column which is mapped with mapping name of DataSource.
            The bounded columns can be sort, filter and group etc.,
            If the field name contains “dot”, then it is considered as complex binding.
            the first character must be an alphabet and should not contain spaces and special characters.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.Filter">
            <summary>
             Defines the filter options to customize filtering for the particular column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.FilterBarTemplate">
            <summary>
            The FilterBarTemplate is used to add a custom component instead of default input component for filter bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.FilterTemplate">
            <summary>
            Defines the filter template/UI that used as filter for a particular column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.ForeignKeyField">
            <summary>
            Defines the mapping column name of the foreign data source.
            If it is not defined then the columns.field will be considered as mapping column name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.ForeignKeyValue">
            <summary>
            Defines the display column name from the foreign data source which will be obtained from comparing local and foreign data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.Format">
            <summary>
            It is used to change display value with the given format and does not affect the original data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.Formatter">
            <summary>
            Defines the method which is used to achieve custom formatting from an external function.
            This function triggers before rendering of each cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.HeaderTemplate">
            <summary>
            Defines the column template which is used to add customized element in the column header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.HeaderText">
            <summary>
            Defines the header text of column which is used to display in column header.
            If HeaderText is not defined, then field name value will be assigned to header text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.HeaderTextAlign">
            <summary>
            Define the alignment of column header which is used to align the text of column header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.HideAtMedia">
            <summary>
            Column visibility can change based on its Media Queries.
            HideAtMedia accepts only valid Media Queries.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.Index">
            <summary>
            Gets the unique identifier value of the column. It is used to get the object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.IsFrozen">
            <summary>
            You can use this property to freeze selected columns in grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.Freeze">
            <summary>
            Defines which side the column need to freeze.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.IsIdentity">
            <summary>
            If IsIdentity is set to true, then this column is considered as identity column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.IsPrimaryKey">
            <summary>
            If IsPrimaryKey is set to true, considers this column as the primary key constraint.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.LockColumn">
            <summary>
            Defines the mapping column name of the foreign data source.
            If it is not defined then the columns.field will be considered as mapping column name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.MaxWidth">
            <summary>
            Defines the maximum width of the column in pixel or percentage, which will restrict resizing beyond this pixel or percentage.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.MinWidth">
            <summary>
            Defines the minimum width of the column in pixels or percentage.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.ShowColumnMenu">
            <summary>
            If ShowColumnMenu set to false, then it disable the column menu of a particular column.
            By default column menu will show for all columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.ShowInColumnChooser">
            <summary>
            If ShowInColumnChooser set to false, then hides the particular column in column chooser.
            By default all columns are displayed in column Chooser.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.SortComparer">
            <summary>
            It defines the custom sort comparer function.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.Template">
            <summary>
            Defines the column template that renders customized element in each cell of the column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.TextAlign">
            <summary>
            Defines the alignment of the column in both header and content cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.Type">
            <summary>
            Defines the data type of the column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.Uid">
            <summary>
            Gets the unique identifier value of the column. It is used to get the object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.ValidationRules">
            <summary>
            Defines rules to validate data before creating and updating.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.ValueAccessor">
            <summary>
            Defines the method used to apply custom cell values from external function and display this on each cell rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.Visible">
            <summary>
            If visible is set to false, hides the particular column. By default, all columns are displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ColumnModel.Width">
            <summary>
            Defines the width of the column in pixels or percentage.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GroupedData">
            <summary>
            Defines the members of the grouped data.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PagerModel">
            <summary>
            Defines member of the pager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PagerModel.CurrentPage">
            <summary>
            Defines the current page number of pager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PagerModel.CustomText">
            <summary>
            Defines the customized text to append with numeric items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PagerModel.EnableExternalMessage">
            <summary>
            If EnableExternalMessage set to true, then it adds the message to Pager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PagerModel.EnablePagerMessage">
            <summary>
            If AnablePagerMessage set to true, then it adds the pager information.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PagerModel.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PagerModel.EnableQueryString">
            <summary>
            If EnableQueryString set to true,
            then it pass current page information as a query string along with the URL while navigating to other page.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PagerModel.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PagerModel.ExternalMessage">
            <summary>
            Defines the external message of Pager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PagerModel.PageCount">
            <summary>
            Defines the number of pages to display in pager container.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PagerModel.PageSize">
            <summary>
            Defines the records count of visible page.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PagerModel.PageSizes">
            <summary>
            If page sizes set to true or list of values,
            It renders DropDownList in the pager which allow us to select page size from DropDownList.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PagerModel.TotalRecordsCount">
            <summary>
            Gets or Sets the total records count which is used to render numeric container.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.IEditorSettings">
            <summary>
            Interface for editor customization.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.IEditorSettings.HasParams">
            <summary>
            Check param presence
            </summary>
            <returns>bool</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.NumericEditCellParams">
            <summary>
            Defines edit params for in-build numerictextbox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.NumericEditCellParams.Params">
            <summary>
            Specifies the params of the numerictextbox editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.NumericEditCellParams.HasParams">
            <summary>
            Check param presence
            </summary>
            <returns>bool</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.BooleanEditCellParams">
            <summary>
            Defines edit params for in-built checkbox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BooleanEditCellParams.Params">
            <summary>
            Specifies the params of the checkbox.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.BooleanEditCellParams.HasParams">
            <summary>
            Check param presence
            </summary>
            <returns>bool</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.DropDownEditCellParams">
            <summary>
            Defines edit params for in-built dropdownlist.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.DropDownEditCellParams.Params">
            <summary>
            Specifies the params of the dropdownlist.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.DropDownEditCellParams.HasParams">
            <summary>
            Check param presence
            </summary>
            <returns>bool</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.DateEditCellParams">
            <summary>
            Defines edit params for in-built datepicker.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.DateEditCellParams.Params">
            <summary>
            Specifies the params of the datepicker.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.DateEditCellParams.HasParams">
            <summary>
            Check param presence
            </summary>
            <returns>bool</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.StringEditCellParams">
            <summary>
            Defines edit params for in-built textbox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.StringEditCellParams.Params">
            <summary>
            Specifies the params of the textbox.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.StringEditCellParams.HasParams">
            <summary>
            Check param presence
            </summary>
            <returns>bool</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.DialogSettings">
            <summary>
            Defines model for Dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.DialogSettings.Height">
            <summary>
            Specifies the height of the Dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.DialogSettings.Width">
            <summary>
            Specifies the width of the Dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.DialogSettings.MinHeight">
            <summary>
            Specifies the minheight of the Dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.DialogSettings.AllowDragging">
            <summary>
            Specifies the value whether the dialog component can be dragged by the end-user.
            The dialog allows a user to drag by selecting the header and dragging it for re-positioning the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.DialogSettings.ShowCloseIcon">
            <summary>
            Specifies the value that represents whether the close icon can be shown in the dialog’s title section.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.DialogSettings.CloseOnEscape">
            <summary>
            Specifies the Boolean value whether the dialog can be closed on pressing the escape (ESC) key
            that is used to control the dialog's closing behavior.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.DialogSettings.EnableResize">
            <summary>
            Specifies the value whether the dialog component can be resized by the end-user.
            If the EnableResize is true, the dialog component creates a grip to resize it in a diagonal direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.DialogSettings.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the dialog.
            One or more custom CSS classes can be added to a dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.DialogSettings.Target">
            <summary>
            Specifies the target element in which the dialog should be displayed.
            The default value is null, which refers to the `Document.body` element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.DialogSettings.XValue">
            <summary>
            Specifies the offset left value to position the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.DialogSettings.YValue">
            <summary>
            Specifies the offset top value to position the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.DialogSettings.AnimationDelay">
            <summary>
            Specifies the delay in milliseconds to start the animation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.DialogSettings.AnimationDuration">
            <summary>
            Specifies the duration in milliseconds that the animation takes to open or close the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.DialogSettings.AnimationEffect">
            <summary>
            Specifies the animation name that should be applied on while opening and closing the dialog.
            If the user sets Fade animation, the dialog will open with the `FadeIn` effect and close with the `FadeOut` effect.
            The following are the list of animation effects available to configure to the dialog:
            1. Fade
            2. FadeZoom
            3. FlipLeftDown
            4. FlipLeftUp
            5. FlipRightDown
            6. FlipRightUp
            7. FlipXDown
            8. FlipXUp
            9. FlipYLeft
            10. FlipYRight
            11. SlideBottom
            12. SlideLeft
            13. SlideRight
            14. SlideTop
            15. Zoom
            16. None.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.BatchChanges`1">
            <summary>
            Defines the batch changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BatchChanges`1.ChangedRecords">
            <summary>
            Specifies the collection that contains changed records.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BatchChanges`1.DeletedRecords">
            <summary>
            Specifies the collection that contains deleted records.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.BatchChanges`1.AddedRecords">
            <summary>
            Specifies the collection that contains added records.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Autofill`1">
            <summary>
            Class that defines argument of the Autofill operation.
            </summary>
            <typeparam name="T">TValue of the grid component.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.IsSelected">
            <summary>
            Defines the Row selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.ISBoxSelected">
            <summary>
            Defines the AutofillBox selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.ISBorderSelected">
            <summary>
            Defines the AutofillBorder selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.IsBorderPositionSelected">
            <summary>
            Defines the AutofillBorder position selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderRight">
            <summary>
            Defines the styles of Border's Right alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BordersWidth">
            <summary>
            Defines the styles of Border's border-Width alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderHeight">
            <summary>
            Defines the styles of border's Height alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderTop">
            <summary>
            Defines the styles of border's Top alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderWidth">
            <summary>
            Defines the styles border's  width alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderLeft">
            <summary>
            Defines the styles border's left alignment..
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.AutofillBoxDisplay">
            <summary>
            Defines the styles Box display.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.AutofillBorderDisplay">
            <summary>
            Defines the styles border display.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.AutofillDisplay">
            <summary>
            Defines the styles of border position display.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.AutofillRight">
            <summary>
            Defines the styles of Autofill's Right alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.AutofillLeft">
            <summary>
            Defines the styles of Autofill's left alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.AutofillTop">
            <summary>
            Defines the styles of Autofill's Top alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderLeftAutofillLeft">
            <summary>
            Defines the styles of border's Left Left alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderLeftAutofillTop">
            <summary>
            Defines the styles of border's Left Top alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderLeftAutofillRight">
            <summary>
            Defines the styles of border's Left Right alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderLeftAutofillHeight">
            <summary>
            Defines the styles of border's Left Height alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderLeftAutofillWidth">
            <summary>
            Defines the styles of border's Left Width alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderRightAutofillLeft">
            <summary>
            Defines the styles of border's Right Left alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderRightAutofillTop">
            <summary>
            Defines the styles of border's Right Top alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderRightAutofillRight">
            <summary>
            Defines the styles of border's Right Right alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderRightAutofillHeight">
            <summary>
            Defines the styles of border's Right Height alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderRightAutofillWidth">
            <summary>
            Defines the styles of border's Right Width alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderTopAutofillLeft">
            <summary>
            Defines the styles of border's Top Left alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderTopAutofillTop">
            <summary>
            Defines the styles of border's Top Top alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderTopAutofillRight">
            <summary>
            Defines the styles of border's Top Right alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderTopAutofillHeight">
            <summary>
            Defines the styles of border's Top Height alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderTopAutofillWidth">
            <summary>
            Defines the styles of border's Top Width alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderBottomAutofillLeft">
            <summary>
            Defines the styles of border's Bottom Left alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderBottomAutofillTop">
            <summary>
            Defines the styles of border's Bottom Top alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderBottomAutofillRight">
            <summary>
            Defines the styles of border's Bottom Right alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderBottomAutofillHeight">
            <summary>
            Defines the styles of border's Bottom Height alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Autofill`1.BorderBottomAutofillWidth">
            <summary>
            Defines the styles of border's Bottom Width alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEventBaseArgs.PreventRender">
            <summary>
            Setting true will override the ShouldRender method of grid to return false.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.ValidatorTemplateContext">
            <summary>
            Defines members of validator template context object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ValidatorTemplateContext.Data">
            <summary>
            Defines the current edited data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ValidatorTemplateContext.EditContext">
            <summary>
            Holds EditContext instance of the EditForm used by grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.ValidatorTemplateContext.ShowValidationMessage">
            <summary>
            Holds delegate instance to show hide validation message on the given editor.
            </summary>
            <remarks>
            Accepts argument such as Field name(string), valid state(bool) and message(string) to show/hide
            popup validation message on the editor.
            </remarks>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.SortColumn">
            <summary>
            Defines the Sort Column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SortColumn.Field">
            <summary>
            Specifies the field of the column to be sorted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SortColumn.Direction">
            <summary>
            Specifies the sort direction.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SortColumn.Equals(System.Object)">
            <summary>
            Compares the specified instance and the current instance of RemoteOptions
                for value equality.
            </summary>
            <param name="obj">The instance to compare.</param>
            <returns>true.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SortColumn.Equals(Syncfusion.Blazor.Grids.SortColumn)">
            <summary>
            Compares the specified instance and the current instance of RemoteOptions
                for value equality.
            </summary>
            <param name="other">The instance to compare.</param>
            <returns>true.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SortColumn.GetHashCode">
            <summary>
            Returns the hash code.
            </summary>
            <returns>int.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SortColumn.op_Equality(Syncfusion.Blazor.Grids.SortColumn,Syncfusion.Blazor.Grids.SortColumn)">
            <summary>
            Handles equal
            </summary>
            <param name="point1">argument one</param>
            <param name="point2">argument two</param>
            <returns>bool</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SortColumn.op_Inequality(Syncfusion.Blazor.Grids.SortColumn,Syncfusion.Blazor.Grids.SortColumn)">
            <summary>
            Handles unequal
            </summary>
            <param name="point1">argument one</param>
            <param name="point2">argument two</param>
            <returns>bool</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridAggregate">
            <summary>
            Configures grid aggregate.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridAggregate.MainParent">
            <summary>
            Defines the parent component.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridAggregate.ChildContent">
            <summary>
            Defines the child content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridAggregate.Columns">
            <summary>
            Configures the aggregate columns.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridAggregateColumn">
            <summary>
            Configures grid aggregate column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridAggregateColumn.MainParent">
            <summary>
            Defines the parent component.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridAggregateColumn.ChildContent">
            <summary>
            Defines the child content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridAggregateColumn.ColumnName">
            <summary>
            Defines the column name to display the aggregate value. If ColumnName is not defined,
            then Field name value will be assigned to the ColumnName` property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridAggregateColumn.Field">
            <summary>
            Defines the column name to perform aggregation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridAggregateColumn.FooterTemplate">
            <summary>
            Defines the cell template for the footer aggregate column.
            The Type name should be used to access aggregate values inside the template.
            </summary>
            <remarks>
            The parameters passed to the templates can be accessed using implicit parameter named <c>context</c>.
            The context is of type <see cref="T:Syncfusion.Blazor.Grids.AggregateTemplateContext"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridAggregateColumn.Format">
            <summary>
            Format is applied to a calculated value before it is displayed.
            Gets the format from the user, which can be standard or custom formats.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridAggregateColumn.GroupCaptionTemplate">
            <summary>
            Defines the cell template for the group caption aggregate column.
            The Type name should be used to access aggregate values inside the template.
            </summary>
            <remarks>
            The parameters passed to the templates can be accessed using implicit parameter named <c>context</c>.
            The context is of type <see cref="T:Syncfusion.Blazor.Grids.AggregateTemplateContext"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridAggregateColumn.GroupFooterTemplate">
            <summary>
            Defines the cell template for the group footer aggregate column.
            The Type name should be used to access aggregate values inside the template.
            </summary>
            <remarks>
            The parameters passed to the templates can be accessed using implicit parameter named <c>context</c>.
            The context is of type <see cref="T:Syncfusion.Blazor.Grids.AggregateTemplateContext"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridAggregateColumn.Type">
            <summary>
            Defines the aggregate type of a particular column.
            Types of aggregate supported in-built are,.
            <list type="bullet">
            <item>
            <term><see cref="F:Syncfusion.Blazor.Grids.AggregateType.Sum"/></term>
            <description>Performes sum aggregation.</description>
            </item>
            <item><term><see cref="F:Syncfusion.Blazor.Grids.AggregateType.Average"/></term>
            <description>Performes average aggregation.</description>
            </item>
            <item><term><see cref="F:Syncfusion.Blazor.Grids.AggregateType.Count"/></term>
            <description>Performes count aggregation.</description>
            </item>
            <item><term><see cref="F:Syncfusion.Blazor.Grids.AggregateType.FalseCount"/></term>
            <description>Performes false count aggregation.</description>
            </item>
            <item><term><see cref="F:Syncfusion.Blazor.Grids.AggregateType.TrueCount"/></term>
            <description>Performes true count aggregation.</description>
            </item>
            <item><term><see cref="F:Syncfusion.Blazor.Grids.AggregateType.Max"/></term>
            <description>Performes max aggregation.</description>
            </item>
            <item><term><see cref="F:Syncfusion.Blazor.Grids.AggregateType.Min"/></term>
            <description>Performes min aggregation.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridAggregateColumns">
            <summary>
            Configures grid aggregate columms.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridAggregateColumns.MainParent">
            <summary>
            Defines the parent component.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridAggregateColumns.ChildContent">
            <summary>
            Defines the child content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridAggregateColumns.Columns">
            <summary>
            Defines the aggregate columns.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridAggregates">
            <summary>
            Configures grid aggregates.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridAggregates.MainParent">
            <summary>
            Defines the parent component.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridAggregates.ChildContent">
            <summary>
            Defines the child content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridAggregates.Aggregates">
            <summary>
            Gets or sets the aggregate row collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridColumn">
            <summary>
            Configures grid columm.
            </summary>
            <summary>
            Configures a grid column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.MainParent">
            <summary>
            Defines the parent component.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.ChildContent">
            <summary>
            Defines the child content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.AllowEditing">
            <summary>
            If AllowEditing set to false, then it disables editing of a particular column.
            By default all columns are editable.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.AllowAdding">
            <summary>
            If AllowAdding set to false, then it disables add operation of a particular column.
            By default all columns are editable.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.AllowFiltering">
            <summary>
            If AllowFiltering set to false, then it disables filtering option and filter bar element of a particular column.
            By default all columns are filterable.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.AllowGrouping">
            <summary>
            If AllowGrouping set to false, then it disables grouping of a particular column.
            By default all columns are groupable.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.AllowReordering">
            <summary>
            If AllowReordering set to false, then it disables reorder of a particular column.
            By default all columns can be reorder.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.AllowResizing">
            <summary>
            If AllowResizing set to false, it disables resize option of a particular column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.AllowSearching">
            <summary>
            If AllowSearching set to false, then it disables searching of a particular column.
            By default all columns are searchable.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.AllowSorting">
            <summary>
            If AllowSorting set to false, then it disables sorting option of a particular column.
            By default all columns are sortable.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.AutoFit">
            <summary>
            If AutoFit set to true, then the particular column content width will be
            adjusted based on its content in the initial rendering itself.
            Setting this property as true is equivalent to calling AutoFitColumns method in the DataBound event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.ClipMode">
            <summary>
            Defines the cell content's overflow mode. The available modes are.
            <list type="bullet">
            <item>
            <term><see cref="F:Syncfusion.Blazor.Grids.ClipMode.Clip"></see></term>
            <description>Truncates the cell content when it overflows its area.</description>
            </item>
            <item>
            <term><see cref="F:Syncfusion.Blazor.Grids.ClipMode.Ellipsis"></see></term>
            <description>Displays ellipsis when the cell content overflows its area.</description>
            </item>
            <item>
            <term><see cref="F:Syncfusion.Blazor.Grids.ClipMode.EllipsisWithTooltip"></see></term>
            <description>Displays ellipsis when the cell content overflows its area also it will display tooltip while hover on ellipsis applied cell.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.Columns">
            <summary>
            Used to render multiple header rows(stacked headers) on the Grid header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.Commands">
            <summary>
            Commands provides an option to display command buttons in every cell.
            Use <see cref="T:Syncfusion.Blazor.Grids.GridCommandColumn"/> component to declare command columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.CustomAttributes">
            <summary>
            The CSS styles and attributes of the content cells of a particular column can be customized.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.DefaultValue">
            <summary>
            Defines default values for the component when adding a new record to the Grid.
            </summary>
            <remarks>If no default value is provided then the default value of the model property type will be
            used as initial value.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.DisableHtmlEncode">
            <summary>
            If DisableHtmlEncode is set to false, it disables the encodes the HTML of the header and content cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.DisplayAsCheckBox">
            <summary>
            If DisplayAsCheckBox is set to true, it displays the column value as a check box instead of Boolean value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.EditorSettings">
            <summary>
            Defines the object to customize default cell editors. The following types can be used to customize default
            editors.
            <list type="bullet">
            <item>
            <term><see cref="T:Syncfusion.Blazor.Grids.NumericEditCellParams"/></term>
            <description>Customizes the default numerictextbox editor.</description>
            </item>
            <item>
            <term><see cref="T:Syncfusion.Blazor.Grids.DropDownEditCellParams"/></term>
            <description>Customizes the default dropdown editor.</description>
            </item>
            <item>
            <term><see cref="T:Syncfusion.Blazor.Grids.DateEditCellParams"/></term>
            <description>Customizes the default datepicker editor.</description>
            </item>
            <item>
            <term><see cref="T:Syncfusion.Blazor.Grids.BooleanEditCellParams"/></term>
            <description>Customizes the default checkbox editor.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.EditTemplate">
            <summary>
            Defines the cell edit template that used as editor for a particular column.
            </summary>
            <remarks>
            The parameters passed to the templates can be accessed using implicit parameter named <c>context</c>.
            The context is of type TValue.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.EditType">
            <summary>
            Defines the type of editor to be used for cell editing.
            </summary>
            <remarks>If EditType is not provided then the EditType will be inferred from the
            property type of the TValue.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.EnableGroupByFormat">
            <summary>
            If EnableGroupByFormat set to true, then it groups the particular column by formatted values.
            By default columns are group by format.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.Field">
            <summary>
            Defines the field name of column which is mapped with mapping name of DataSource.
            The bounded columns can be sort, filter and group etc.,
            If the Field name contains “dot”, then it is considered as complex binding.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.FilterSettings">
            <summary>
             Defines the filter options to customize filtering for the particular column.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.FilterTemplate">
            <summary>
            Defines the filter template that used as filter UI for a particular column in FilterBar and Menu.
            </summary>
            <remarks>
            The parameters passed to the templates can be accessed using implicit parameter named <c>context</c>.
            The context is of type <see cref="T:Syncfusion.Blazor.Grids.PredicateModel"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.ForeignKeyField">
            <summary>
            Defines the mapping column name of the foreign data source.
            If it is not defined then the Field will be considered as mapping column name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.ForeignKeyValue">
            <summary>
            Defines the display column name from the foreign data source which will be obtained from comparing local and foreign data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.Format">
            <summary>
            It is used to change display value with the given format and does not affect the original data.
            Gets the format from the user which can be standard or custom formats.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.HeaderTemplate">
            <summary>
            Defines the column template which is used to add customized element in the column header.
            </summary>
            <remarks>
            The parameters passed to the templates can be accessed using implicit parameter named <c>context</c>.
            The context is of type <see cref="T:Syncfusion.Blazor.Grids.GridColumn"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.HeaderText">
            <summary>
            Defines the header text of column which is used to display in column header.
            If HeaderText is not defined, then field name value will be assigned to header text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.HeaderTextAlign">
            <summary>
            Define the alignment of column header which is used to align the text of column header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.HideAtMedia">
            <summary>
            Column visibility can change based on its Media Queries.
            HideAtMedia accepts only valid Media Queries.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.Index">
            <summary>
            Gets the unique identifier value of the column. It is used to get the object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.IsFrozen">
            <summary>
            You can use this property to freeze selected columns in grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.IsIdentity">
            <summary>
            If IsIdentity is set to true, then this column is considered as identity column.
            This column will be in disabled state in add form.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.IsPrimaryKey">
            <summary>
            If IsPrimaryKey is set to true, considers this column as the primary key constraint.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.LockColumn">
            <summary>
            Defines the mapping column name of the foreign data source.
            If it is not defined then the Field will be considered as mapping column name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.MaxWidth">
            <summary>
            Defines the maximum width of the column in pixel or percentage, which will restrict resizing beyond this pixel or percentage.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.MinWidth">
            <summary>
            Defines the minimum width of the column in pixels or percentage.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.ShowColumnMenu">
            <summary>
            If ShowColumnMenu set to false, then it disable the column menu of a particular column.
            By default column menu will show for all columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.ShowInColumnChooser">
            <summary>
            If ShowInColumnChooser set to false, then hides the particular column in column chooser.
            By default all columns are displayed in column chooser.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.SortComparer">
            <summary>
            Gets or sets the custom sort comparer function to implement own sort logic for a particular column.
            For foreign key column with local data source a sort comparer will be assigned by default to sort it by text(ForeignKeyValue) instead of the underlying field value.
            </summary>
            <remarks>
            Custom sort comparer cannot be used with remote data and Entity framework data source.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.Template">
            <summary>
            Defines the column template that renders customized element in each cell of the column.
            </summary>
            <remarks>
            The parameters passed to the templates can be accessed using implicit parameter named <c>context</c>.
            The context is of type <c>TValue</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.TextAlign">
            <summary>
            Defines the alignment of the column in both header and content cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.Freeze">
            <summary>
            Defines which side the column need to freeze.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.Type">
            <summary>
            Defines the data type of the column.
            </summary>
            <remarks>If Type is not provided then the Type will be inferred from the
            property type of the TValue.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.Uid">
            <summary>
            Gets the unique identifier value of the column. It is used to get the object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.ValidationRules">
            <summary>
            Defines rules to validate data before creating and updating. The validation rules can be set
            as instance of <see cref="T:Syncfusion.Blazor.Grids.ValidationRules"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.Visible">
            <summary>
            If Visible is set to false, hides the particular column. By default, all columns are displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.Width">
            <summary>
            Defines the width of the column in pixels or percentage.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.FilterItemTemplate">
            <summary>
            Defines the Checkbox Item template that renders customized element/value in each checkbox of the Filter column.
            </summary>
            <remarks>
            The parameters passed to the templates can be accessed using implicit parameter named <c>context</c>.
            The context is of type <see cref="T:Syncfusion.Blazor.Grids.FilterItemTemplateContext"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.GridColumn.ShouldSerializeChildContent">
            Below codes added to ignore the specified properties while serialization by JSON.net.
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.Grids.GridColumn.ShouldSerializeTemplate">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.Grids.GridColumn.ShouldSerializeFilterTemplate">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.Grids.GridColumn.ShouldSerializeEditTemplate">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.Grids.GridColumn.ShouldSerializeHeaderTemplate">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.Grids.GridColumn.ShouldSerializeFilterItemTemplate">
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumn.ColumnData">
            <summary>
            Provides the data for the grid columns.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.GridColumn.IsForeignColumn">
            <summary>
            Returns true if the column is foreign key column.
            </summary>
            <returns>bool.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.GridColumn.IsForeignKeyField">
            <summary>
            Returns true if the Foreignkeyfield and Field property is not same is foreign key column.
            </summary>
            <returns>bool.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.GridColumn.GetData(Syncfusion.Blazor.DataManagerRequest)">
            <summary>
            Performs data operation in the foreign key column based on the given query and returns data.
            </summary>
            <param name="dataManagerRequest">Query value to be used for data fetching.</param>
            <returns>object.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.GridColumn.SetVisibility(System.Boolean)">
            <summary>
            Set column visibility.
            </summary>
            <param name="visibility">Value to be set in the <c>Visible</c> property.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.GridColumn.SetWidth(System.String)">
            <summary>
            Set column width.
            </summary>
            <param name="width">Value to be set in the <c>Width</c> property.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.GridColumn.SetUid(System.String)">
            <summary>
            Set column uid.
            </summary>
            <param name="uid">Value to be set in the <c>Uid</c> property.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.GridColumn.GetForeignData">
            <summary>
            Get Foreign Data.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridColumnChooserSettings">
            <summary>
            Configures grid column chooser settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumnChooserSettings.MainParent">
            <summary>
            Defines the parent component.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumnChooserSettings.Operator">
            <summary>
            Defines the search operator for Column Chooser.
            By default search operator is <see cref="T:Syncfusion.Blazor.Operator"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumnChooserSettings.Template">
            <summary>
            Defines the custom content for the column chooser dialog. This can be used to introduce own UI inside the column chooser dialog content.
            The checkboxes can be rendered using <see cref="T:Syncfusion.Blazor.Grids.GridColumnChooserItem"/> component.
            </summary>
            <remarks>
            The parameters passed to the templates can be accessed using implicit parameter named <c>context</c>.
            The context is of type <see cref="T:Syncfusion.Blazor.Grids.ColumnChooserTemplateContext"/> of the grid.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumnChooserSettings.FooterTemplate">
            <summary>
            Defines the custom footer content for the column chooser.This can be used to introduce own UI inside the column chooser dialog footer content.
            </summary>
            <remarks>
            The parameters passed to the templates can be accessed using implicit parameter named <c>context</c>.
            The context is of type <see cref="T:Syncfusion.Blazor.Grids.ColumnChooserFooterTemplateContext"/> of the grid.
            </remarks>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridColumns">
            <summary>
            Configures grid columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumns.MainParent">
            <summary>
            Defines the parent component.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumns.ChildContent">
            <summary>
            Defines the child content.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridCommandColumn">
            <summary>
            Configures grid command column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridCommandColumn.MainParent">
            <summary>
            Defines the parent component.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridCommandColumn.ChildContent">
            <summary>
            Defines the child content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridCommandColumn.ButtonOption">
            <summary>
            Define the button model.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridCommandColumn.Title">
            <summary>
            Define the command button tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridCommandColumn.ID">
            <summary>
            Define the command button ID.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridCommandColumn.Type">
            <summary>
            Define the command button type.
            <list type="bullet">
            <item>
            <term>None</term>
            <description>Default. A command button with no default action. Use this for custom command actions.</description>
            </item>
            <item>
            <term>Edit</term>
            <description>A edit command button that edit current record.</description>
            </item>
            <item>
            <term>Delete</term>
            <description>A delete command button that delete current record.</description>
            </item>
            <item>
            <term>Save</term>
            <description>A save command button that saves the current edited record.</description>
            </item>
            <item>
            <term>Cancel</term>
            <description>A cancel command button that cancels the edit state.</description>
            </item>
            </list>
            </summary>
            <remarks>
            To use custom command button, set Type as <see cref="F:Syncfusion.Blazor.Grids.CommandButtonType.None"/> and use
            <see cref="P:Syncfusion.Blazor.Grids.GridEvents`1.CommandClicked"/> event to perform custom action.
            </remarks>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridCommandColumns">
            <summary>
            Configures grid command columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridCommandColumns.MainParent">
            <summary>
            Defines the parent component.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridCommandColumns.ChildContent">
            <summary>
            Defines the child content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridCommandColumns.Commands">
            <summary>
            Defines the command button collection. Use <see cref="T:Syncfusion.Blazor.Grids.GridCommandColumn"/> component
            to provide command buttons.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridEditSettings">
            <summary>
            Configures grid edit settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEditSettings.MainParent">
            <summary>
            Defines the parent component.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEditSettings.ChildContent">
            <summary>
            Defines the child content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEditSettings.AllowAdding">
            <summary>
            If AllowAdding is set to true, new records can be added to the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEditSettings.AllowDeleting">
            <summary>
            If AllowDeleting is set to true, existing record can be deleted from the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEditSettings.AllowEditOnDblClick">
            <summary>
            If AllowEditOnDblClick is set to false, Grid will not allow editing of a record on double click.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEditSettings.AllowEditing">
            <summary>
            If AllowEditing is set to true, values can be updated in the existing record.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEditSettings.AllowNextRowEdit">
            <summary>
            If allowNextRowEdit is set to true, editing is done to next row. By default allowNextRowEdit is set to false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEditSettings.Dialog">
            <summary>
            Defines the dialog params to edit.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEditSettings.FooterTemplate">
            <summary>
            Defines the custom footer for the edit dialog.
            </summary>
            <remarks>
            The parameters passed to the templates can be accessed using implicit parameter named <c>context</c>.
            The context is of type TValue of the grid.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEditSettings.HeaderTemplate">
            <summary>
            Defines the custom header for the edit dialog.
            </summary>
            <remarks>
            The parameters passed to the templates can be accessed using implicit parameter named <c>context</c>.
            The context is of type TValue of the grid.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEditSettings.Mode">
            <summary>
            Defines the mode to edit. The available editing modes are:
            <list type="bullet">
            <item>
            <term>Normal</term>
            <description>Default. Editing is done in an inline form. Edit form is rendered inline as one of the table rows.</description>
            </item>
            <item>
            <term>Dialog</term>
            <description>Editing is done in a Dialog/Pop component.</description>
            </item>
            <item>
            <term>Batch</term>
            <description>Enables cell editing. Multiple cells can be edited, added or deleted and saved.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEditSettings.NewRowPosition">
            <summary>
            Defines the position of adding a new row. The available position are:
            <list type="bullet">
            <item>
            <term>Top</term>
            <description>Default. Add form is placed at the first row of the grid.</description>
            </item>
            <item>
            <term>Bottom</term>
            <description>Add form is placed at the last row of the grid</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEditSettings.ShowConfirmDialog">
            <summary>
            If ShowConfirmDialog is set to false, confirm dialog does not show when batch changes are saved or discarded.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEditSettings.ShowDeleteConfirmDialog">
            <summary>
            If ShowDeleteConfirmDialog is set to true, confirm dialog will show delete action. You can also cancel delete command.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEditSettings.Template">
            <summary>
            Defines the custom content and edit elements for the edit dialog.
            </summary>
            <remarks>
            The parameters passed to the templates can be accessed using implicit parameter named <c>context</c>.
            The context is of type TValue of the grid.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEditSettings.Validator">
            <summary>
            Defines the custom validator component for the built-in EditForm. Use this to override built-in
            validation components.
            </summary>
            <remarks>
            The parameters passed to the templates can be accessed using implicit parameter named <c>context</c>.
            The context is of type <see cref="T:Syncfusion.Blazor.Grids.ValidatorTemplateContext"/>.
            </remarks>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridEvents`1">
            <summary>
            Configures grid events.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.OnActionBegin">
            <summary>
            Triggers when Grid actions such as sorting, filtering, paging, grouping etc., starts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.OnActionComplete">
            <summary>
            Triggers when Grid actions such as sorting, filtering, paging, grouping etc. are completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.OnActionFailure">
            <summary>
            Triggers when any Grid action failed to achieve the desired results.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.OnBatchAdd">
            <summary>
            Triggers before records are added in batch mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.OnBatchDelete">
            <summary>
            Triggers before records are deleted in batch mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.OnBatchSave">
            <summary>
            Triggers before records are saved in batch mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.OnBatchCancel">
            <summary>
            Triggers when the cancel operation is started in batch mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.OnDataBound">
            <summary>
            Triggers before data is bound to Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.OnBeginEdit">
            <summary>
            Triggers before the record is to be edit.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.OnCellEdit">
            <summary>
            Triggers when the cell is being edited.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.OnCellSave">
            <summary>
            Triggers when cell is saved.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.CellSaved">
            <summary>
            Triggers when cell is saved.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.CellSelected">
            <summary>
            Triggers after a cell is selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.CellDeselecting">
            <summary>
            Triggers before any cell selection occurs.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.CellSelecting">
            <summary>
            Triggers before any cell selection occurs.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.ColumnMenuItemClicked">
            <summary>
            Triggers when click the context menu items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.CommandClicked">
            <summary>
            Triggers when command button is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.ContextMenuItemClicked">
            <summary>
            Triggers when click on context menu.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.ContextMenuOpen">
            <summary>
            Triggers when open the context menu.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.DataBound">
            <summary>
            Triggers when data source is populated in the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.DetailDataBound">
            <summary>
            Triggers after detail row expands.
            > This event triggers at initial expand.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.HeaderCellInfo">
            <summary>
            Triggered for stacked header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.OnLoad">
            <summary>
            This event allows customization of Grid properties before rendering.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.QueryCellInfo">
            <summary>
            Triggered every time a request is made to access cell information, element, or data.
            This will be triggered before the cell element is appended to the Grid element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.OnRecordClick">
            <summary>
            Triggers when record is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.OnRecordDoubleClick">
            <summary>
            Triggers when record is double clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.OnResizeStart">
            <summary>
            Triggers when column resize starts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.ResizeStopped">
            <summary>
            Triggers when column resize ends.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.RowDataBound">
            <summary>
            Triggered every time a request is made to access row information, element, or data.
            This will be triggered before the row element is appended to the Grid element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.RowDeselected">
            <summary>
            Triggers when a selected row is deselected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.RowDeselecting">
            <summary>
            Triggers before deselecting the selected row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.OnRowDragStart">
            <summary>
            Triggers when row element's drag(move) starts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.RowDropped">
            <summary>
            Triggers when row elements are dropped on the target row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.RowSelected">
            <summary>
            Triggers after a row is selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.RowSelecting">
            <summary>
            Triggers before row selection occurs.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.OnToolbarClick">
            <summary>
            Triggers when toolbar item is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.BeforeOpenColumnChooser">
            <summary>
            Triggers when clicked column chooser.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.OnPdfExport">
            <summary>
            Triggers before Grid data is exported to PDF document.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.PdfQueryCellInfoEvent">
            <summary>
            The PdfQueryCellInfoEvent event is triggered every time a data is entered into a cell of the pdf document. So this event is triggered as many times as the data is entered into a cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.PdfHeaderQueryCellInfoEvent">
            <summary>
            The PdfHeaderQueryCellInfoEvent event is triggered every time a data is entered into a header cell of the pdf document.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.PdfAggregateTemplateInfo">
            <summary>
            The PdfAggregateTemplateInfo event is triggered every time a caption/footer/group footer aggregate row created on the pdf document.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.PdfGroupCaptionTemplateInfo">
            <summary>
            The PdfGroupCaptionTemplateInfo event is triggered every time a caption template row created on the pdf document.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.OnExcelExport">
            <summary>
            Triggers before Grid data is exported to Excel/Csv Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.ExcelAggregateTemplateInfo">
            <summary>
            The ExcelAggregateTemplateInfo event is triggered every time a caption/footer/group footer aggregate row created on the excel sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.ExcelGroupCaptionTemplateInfo">
            <summary>
            The ExcelGroupCaptionTemplateInfo event is triggered every time a caption template row created on the excel sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.ExcelQueryCellInfoEvent">
            <summary>
            The ExcelQueryCellInfoEvent event is triggered every time a data is entered into a cell of the Excel sheet. So this event is triggered as many times as the data is entered into a cell written in the excel sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.ExcelHeaderQueryCellInfoEvent">
            <summary>
            The ExcelHeaderQueryCellInfoEvent event is triggered every time a data is entered into a header cell of the Excel sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridEvents`1.ExportComplete">
            <summary>
            The ExportComplete event is triggered when exporting process was completed.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridFilterColumn">
            <summary>
            Configures grid filter column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridFilterColumn.MainParent">
            <summary>
            Defines the parent component.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridFilterColumn.ChildContent">
            <summary>
            Defines the child content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridFilterColumn.Field">
            <summary>
            Defines the field name of the filter column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridFilterColumn.IgnoreAccent">
            <summary>
            If ignoreAccent is set to true, then filter ignores the diacritic characters or accents while filtering.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridFilterColumn.MatchCase">
            <summary>
            If match case set to true, then filter records with exact match or else
            filter records with case insensitive(uppercase and lowercase letters treated as same).
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridFilterColumn.Operator">
            <summary>
            Defines the operator to filter records.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridFilterColumn.RawInputValue">
            <summary>
            Defines the RawInputValue to filter records.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridFilterColumn.Predicate">
            <summary>
            Defines the relationship between one filter query and another by using AND or OR predicate.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridFilterColumn.Uid">
            <summary>
            Defines the UID of filter column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridFilterColumn.Value">
            <summary>
            Defines the value used to filter records.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridFilterColumn.ActualValue">
            <summary>
            Defines the Actual value used to filter records.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridFilterColumns">
            <summary>
            Configures grid filter columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridFilterColumns.MainParent">
            <summary>
            Defines the parent component.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridFilterColumns.ChildContent">
            <summary>
            Defines the child content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridFilterColumns.Columns">
            <summary>
            Defines the filter column collection. Use <see cref="T:Syncfusion.Blazor.Grids.GridFilterColumn"/> component
            to define filter criteria.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridFilterSettings">
            <summary>
            Configures grid filtering.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridFilterSettings.MainParent">
            <summary>
            Defines the parent component.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridFilterSettings.ChildContent">
            <summary>
            Defines the child content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridFilterSettings.Columns">
            <summary>
            Specifies the columns to be filtered at initial rendering of the Grid. You can also get the columns that were currently filtered.
            </summary>
            <remarks>
            Use <see cref="T:Syncfusion.Blazor.Grids.GridFilterColumn"/> component
            to define filter criteria.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridFilterSettings.EnableCaseSensitivity">
            <summary>
            If EnableCaseSensitivity is set to true then searches grid records with exact match based on the filter
            operator. It will have no effect on number, boolean and Date fields.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridFilterSettings.IgnoreAccent">
            <summary>
            If ignoreAccent set to true, then filter ignores the diacritic characters or accents while filtering.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridFilterSettings.ImmediateModeDelay">
            <summary>
            Defines the time delay (in milliseconds) in filtering records when the Immediate mode of filter bar is set.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridFilterSettings.Mode">
            <summary>
            Defines the filter bar modes. The available options are.
            <list type="bullet">
            <item>
            <term>OnEnter</term>
            <description>Initiate filter operation after Enter key is pressed.</description>
            </item>
            <item>
            <term>Immediate</term>
            <description>Initiate filter operation after certain time interval. By default time interval is 1500ms.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridFilterSettings.Operators">
            <summary>
            The Operators is used to override the default operators in filter menu. This should be defined by type wise
            (string, number, date and boolean). Based on the column type, this customize operator list will render in filter menu.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridFilterSettings.ShowFilterBarStatus">
            <summary>
            Shows or hides the filtered status message on the pager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridFilterSettings.Type">
            <summary>
            Defines options for filtering type. The available options are.
            <list type="bullet">
            <item>
            <term>FilterBar</term>
            <description>Default. Specifies the filter type as filter bar.</description>
            </item>
            <item>
            <term>Menu</term>
            <description>Specifies the filter type as menu.</description>
            </item>
            <item>
            <term>CheckBox</term>
            <description>Specifies the filter type as check box.</description>
            </item>
            <item>
            <term>Excel</term>
            <description>Specifies the filter type as excel.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridGroupSettings">
            <summary>
            Configures grid grouping.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridGroupSettings.MainParent">
            <summary>
            Defines the parent component.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridGroupSettings.ChildContent">
            <summary>
            Defines the child content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridGroupSettings.AllowReordering">
            <summary>
            If AllowReordering is set to true, Grid allows the grouped elements to be reordered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridGroupSettings.CaptionTemplate">
            <summary>
            The Caption Template allows user to display custom group caption.
            </summary>
            <remarks>
            The parameters passed to the templates can be accessed using implicit parameter named <c>context</c>.
            The context is of type <see cref="T:Syncfusion.Blazor.Grids.CaptionTemplateContext"/> of the grid.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridGroupSettings.Columns">
            <summary>
            Specifies the column names to group at initial rendering of the Grid.
            You can also get the currently grouped columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridGroupSettings.DisablePageWiseAggregates">
            <summary>
            If DisablePageWiseAggregates set to true, then the group aggregate value will
            be calculated from the whole data instead of paged data and two requests will be made for each page
            when Grid bound with remote service.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridGroupSettings.ShowDropArea">
            <summary>
            If ShowDropArea is set to true, the group drop area element will be visible at the top of the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridGroupSettings.ShowGroupedColumn">
            <summary>
            If ShowGroupedColumn is set to false, it hides the grouped column after grouping.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridGroupSettings.ShowToggleButton">
            <summary>
            If ShowToggleButton set to true, then the toggle button will be showed in the column headers which can be used to group
            or ungroup columns by clicking them.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridGroupSettings.ShowUngroupButton">
            <summary>
            If ShowUngroupButton set to false, then ungroup button is hidden in dropped element.
            It can be used to ungroup the grouped column when click on ungroup button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridGroupSettings.EnableLazyLoading">
            <summary>
            The Lazy load grouping, allows the Grid to render only the initial level caption rows in collapsed state while grouping.
            The child rows of each caption will render only when we expand the captions.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridKeySettings">
            <summary>
            Configures keyboard navigation for grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridKeySettings.MainParent">
            <summary>
            Defines the parent component.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridKeySettings.MoveLeftCell">
            <summary>
            Defines the action keys for the left cell movement.
            <list type="bullet">
            <item>
            <term>ShiftTab</term>
            <description>Moves to left cell on pressing Shift+Tab key</description>
            </item>
            <item>
            <term>ArrowLeft</term>
            <description>Moves to left cell on pressing left arrow key</description>
            </item>
            <item>
            <term>ShiftLeft</term>
            <description>Moves to left cell on pressing shift+left arrow key</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridKeySettings.MoveRightCell">
            <summary>
            Defines the action keys for the right cell movement.
            <list type="bullet">
            <item>
            <term>Tab</term>
            <description>Moves to right cell on pressing Tab key</description>
            </item>
            <item>
            <term>ArrowRight</term>
            <description>Moves to right cell on pressing right arrow key</description>
            </item>
            <item>
            <term>ShiftRight</term>
            <description>Moves to right cell on pressing shift+right arrow key</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridKeySettings.MoveUpCell">
            <summary>
            Defines the action keys for the up cell movement.
            <list type="bullet">
            <item>
            <term>ShiftEnter</term>
            <description>Moves to top cell on pressing Shit+Enter key</description>
            </item>
            <item>
            <term>ArrowUp</term>
            <description>Moves to top cell on pressing up arrow key</description>
            </item>
            <item>
            <term>ShiftUp</term>
            <description>Moves to top cell on pressing shift+up arrow key</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridKeySettings.MoveDownCell">
            <summary>
            Defines the action keys for the down cell movement.
            <list type="bullet">
            <item>
            <term>Enter</term>
            <description>Moves to down cell on pressing Enter key</description>
            </item>
            <item>
            <term>ArrowDown</term>
            <description>Moves to down cell on pressing down arrow key</description>
            </item>
            <item>
            <term>ShiftDown</term>
            <description>Moves to down cell on pressing shift+down arrow key</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridPageSettings">
            <summary>
            Configures grid paging.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridPageSettings.MainParent">
            <summary>
            Defines the parent component.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridPageSettings.ChildContent">
            <summary>
            Defines the child content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridPageSettings.CurrentPage">
            <summary>
            Defines the current page number of the pager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridPageSettings.EnableQueryString">
            <summary>
            If EnableQueryString set to true,
            then it pass current page information as a query string along with the URL while navigating to other page.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridPageSettings.PageCount">
            <summary>
            Defines the number of pages to be displayed in the pager container.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridPageSettings.PageSize">
            <summary>
            Defines the number of records to be displayed per page.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridPageSettings.PageSizes">
            <summary>
            If PageSizes set to true or Array of values,
            It renders DropDownList in the pager which allow us to select pageSize from DropDownList.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridPageSettings.Template">
            <summary>
            Defines the template which renders customized elements in pager instead of default elements.
            <remarks>
            The parameters passed to the templates can be accessed using implicit parameter named <c>context</c>.
            The context is of type <see cref="T:Syncfusion.Blazor.Grids.PagerTemplateContext"/> of the grid.
            </remarks>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridPageSettings.EnableExternalMessage">
            <summary>
            Enable or disable the ExternalMessage.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridPageSettings.ExternalMessage">
            <summary>
            Defines the pager External message.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridRowDropSettings">
            <summary>
            Configures grid row drag and drop.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridRowDropSettings.MainParent">
            <summary>
            Defines the parent component.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridRowDropSettings.TargetID">
            <summary>
            Defines the ID of droppable component on which row drop should occur.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridSearchSettings">
            <summary>
            Configures grid searching.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSearchSettings.MainParent">
            <summary>
            Defines the parent component.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSearchSettings.Fields">
            <summary>
            Specifies the collection of fields included in search operation. By default, bounded columns of the Grid are included.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSearchSettings.IgnoreAccent">
            <summary>
            If ignoreAccent set to true, then filter ignores the diacritic characters or accents while filtering.
            </summary>
            <remarks>Ignore accent is supported by remote data alone.
            IgnoreAccent key will be sent to server and operation should be handled at user level.</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSearchSettings.IgnoreCase">
            <summary>
            If IgnoreCase is set to false, searches records that match exactly, else
            searches records that are case insensitive(uppercase and lowercase letters treated the same).
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSearchSettings.Key">
            <summary>
            Specifies the key value to search Grid records at initial rendering.
            You can also get the current search key.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSearchSettings.Operator">
            <summary>
            Defines the operator to search records.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridSelectionSettings">
            <summary>
            Configures grid selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSelectionSettings.MainParent">
            <summary>
            Defines the parent component.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSelectionSettings.CellSelectionMode">
            <summary>
            The cell selection modes are flow and box.
            It requires the <see cref="P:Syncfusion.Blazor.Grids.GridSelectionSettings.Mode"/> to be either cell or both.
            <list type="bullet">
            <item>
            <term>Flow</term>
            <description>Default. Selects the range of cells between start index and end index that also includes the other cells of the selected rows..</description>
            </item>
            <item>
            <term>Box</term>
            <description>Selects the range of cells within the start and end column indexes that includes in between cells of rows within the range</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSelectionSettings.CheckboxMode">
            <summary>
            Defines options for checkbox selection Mode. They are,.
            <list type="bullet">
            <item>
            <term>Default</term>
            <description>Default. In this mode, user can select multiple rows by clicking rows one by one.</description>
            </item>
            <item>
            <term>ResetOnRowClick</term>
            <description>In ResetOnRowClick mode, on clicking a row it will reset previously selected row and also multiple
             rows can be selected by using CTRL or SHIFT key.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSelectionSettings.CheckboxOnly">
            <summary>
            If CheckboxOnly set to true, then the Grid selection is allowed only through checkbox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSelectionSettings.EnableSimpleMultiRowSelection">
            <summary>
            If EnableSimpleMultiRowSelection set to true, then the user can able to perform multiple row selection with single clicks.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSelectionSettings.EnableToggle">
            <summary>
            If EnableToggle set to true, then the user can able to perform toggle for the selected row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSelectionSettings.Mode">
            <summary>
            Specifies the selection mode. Available modes are,.
            <list type="bullet">
            <item>
            <term>Row</term>
            <description>Default. Row selection is enabled</description>
            </item>
            <item>
            <term>Cell</term>
            <description>Cell selection is enabled.</description>
            </item>
            <item>
            <term>Both</term>
            <description>Both Row and Cell selection is enabled.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSelectionSettings.PersistSelection">
            <summary>
            If PersistSelection set to true, then the Grid selection is persisted on all operations.
            For persisting selection in the Grid, any one of the column must be enabled as a primary key.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSelectionSettings.Type">
            <summary>
            Defines options for selection type. They are.
            <list type="bullet">
            <item>
            <term>Single</term>
            <description>Default. Allows selection of only a row or a cell.</description>
            </item>
            <item>
            <term>Multiple</term>
            <description>Allows user to select a multiple rows or cells.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridSortColumn">
            <summary>
            Configures grid sort column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSortColumn.MainParent">
            <summary>
            Defines the parent component.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSortColumn.Direction">
            <summary>
            Defines the direction of sort column. Available directions are,.
            <list type="bullet">
            <item>
            <term>Ascending</term>
            <description>Default. Sorts records in ascending order.</description>
            </item>
            <item>
            <term>Descending</term>
            <description>Sorts records in descending order.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSortColumn.Field">
            <summary>
            Defines the field name of sort column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSortColumn.IsFromGroup">
            <summary>
            Defines the sorted column whether or from grouping operation.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridSortColumns">
            <summary>
            Configures grid sort columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSortColumns.MainParent">
            <summary>
            Defines the parent component.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSortColumns.ChildContent">
            <summary>
            Defines the child content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSortColumns.Columns">
            <summary>
            Gets the sorted columns collection, use <see cref="T:Syncfusion.Blazor.Grids.GridSortColumn"/> component
            to set initial sort columns.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridSortSettings">
            <summary>
            Configures grid sorting.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSortSettings.MainParent">
            <summary>
            Defines the parent component.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSortSettings.ChildContent">
            <summary>
            Defines the child content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSortSettings.AllowUnsort">
            <summary>
            If AllowUnsort set to false the user can not get the grid in unsorted state by clicking the sorted column header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridSortSettings.Columns">
            <summary>
            Specifies the columns to sort at initial rendering of Grid.
            Also user can get current sorted columns, use <see cref="T:Syncfusion.Blazor.Grids.GridSortColumn"/> component
            to set initial sort columns.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridTemplates">
            <summary>
            Configures grid templates.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridTemplates.ChildContent">
            <summary>
            Defines the child content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridTemplates.RowTemplate">
            <summary>
            Gets or sets the row template to customize row elements.
            </summary>
            <remarks>
            The RowTemplate content must be TD elements and the number of TD elements must match the number of datagrid columns.
            The parameters passed to the templates can be accessed using implicit parameter named <c>context</c>.
            The context is of type TValue.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridTemplates.DetailTemplate">
            <summary>
            Gets or sets the template to customize detail row element.
            </summary>
            <remarks>
            Use DetailTemplate to render hierarchy grid. It supports N level of nested grids.
            The parameters passed to the templates can be accessed using implicit parameter named <c>context</c>.
            The context is of type TValue.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridTemplates.EmptyRecordTemplate">
            <summary>
            Gets or sets the template to customize empty grid row element.
            </summary>
            <remarks>
            The parameters passed to the templates can be accessed using implicit parameter named <c>context</c>.
            The context is of type <see cref="T:Syncfusion.Blazor.Grids.EmptyRecordTemplateContext"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridTemplates.ToolbarTemplate">
            <summary>
            Render custom toolbar using ToolbarTemplate property. It replaces the in-built toolbar
            and click actions must be handled in custom toolbar itself.
            </summary>
            <remarks>
            The parameters passed to the templates can be accessed using implicit parameter named <c>context</c>.
            </remarks>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.GridTextWrapSettings">
            <summary>
            Configures grid text wrapping.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridTextWrapSettings.MainParent">
            <summary>
            Defines the parent component.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridTextWrapSettings.WrapMode">
            <summary>
            Defines the WrapMode` of the Grid. The available modes are:
            <list type="bullet">
            <item>
            <term>Both</term>
            <description>Default. Wraps both header and content.</description>
            </item>
            <item>
            <term>Header</term>
            <description>Wraps header alone.</description>
            </item>
            <item>
            <term>Content</term>
            <description>Wraps content alone.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.IGrid">
            <summary>
            Interface for SfGrid component.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.IGrid.Notify(System.String,System.Object)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.IPager">
            <summary>
            Interface for SfPager component.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.DataGenerator`1">
            <summary>
            Data module.
            </summary>
            <typeparam name="T">TValue of grid component.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.DetailRow`1">
            <summary>
            Handles detail row interactions.
            </summary>
            <typeparam name="T">TValue of grid component.</typeparam>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.Edit`1">
            <summary>
            Handles CRUD operations.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.Filter`1">
            <summary>
            Handles filter operation.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.FocusHandler`1">
            <summary>
            Handles focus and keyboard navigation in grid.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.BeforeCellFocus">
            <summary>
            BeforeCell focus event argument class.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.CellFocused">
            <summary>
            Cell focus event argument class.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.ForeignKey`1">
            <summary>
            Handles foreign key column.
            </summary>
            <typeparam name="T">TValue of grid.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.Grouping`1">
            <summary>
            Handles grouping action.
            </summary>
            <typeparam name="T">TValue of grid component.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.Reorder`1">
            <summary>
            Handles Reordering operation.
            </summary>
            <typeparam name="T">TValue of grid component.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.RowReorder`1">
            <summary>
            Handles row drag and drop action.
            </summary>
            <typeparam name="T">TValue of grid component.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.Selection`1">
            <summary>
            Handles selection feature of grid.
            </summary>
            <typeparam name="T">TValue of grid component.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.Sort`1">
            <summary>
            Handles sort action.
            </summary>
            <typeparam name="T">TValue of grid component.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.VirtualScroll`1">
            <summary>
            Handles virtual scrolling feature.
            </summary>
            <typeparam name="T">TValue of grid component.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.DynamicMethodInfo">
            <summary>
            ExpandoObject and DynamicObject PropertyInfo.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.CellType">
            <summary>
            Specifies the grid`s cell type.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.CellType.Data">
            <summary>
            Define the cell as Data cell
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.CellType.Detail">
            <summary>
            Define the cell as detail row`s cell
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.CellType.DetailIndent">
            <summary>
            Define the cell as detail indent cell
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.CellType.Indent">
            <summary>
            Define the cell as indent cell
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.CellType.RowDrag">
            <summary>
            Define the cell as row drag and drop indent cell
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.CellType.Expand">
            <summary>
            Define the cell as expand cell
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.CellType.GroupCaption">
            <summary>
            Define the cell as group caption cell
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.CellType.GroupCaptionEmpty">
            <summary>
            Define the cell as empty group caption cell
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.CellType.CaptionSummary">
            <summary>
            Define the cell as caption summary cell
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.CellType.Summary">
            <summary>
            Define the cell as summary/aggregate cell
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.CellType.CommandColumn">
            <summary>
            Define the cell as command column cell
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.CellType.StackedHeader">
            <summary>
            Define the cell as stacked header cell
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.GridUtils">
            <summary>
            Util functions for internal usage.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.AutoFormat">
            <summary>
            Gets or sets a value that indicates the auto format for an element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.AutoFormat.FontFamily">
            <summary>
            Gets or sets a value that indicates the font-family for an element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.AutoFormat.FontSize">
            <summary>
            Gets or sets a value that indicates the font-size for an element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.AutoFormat.BorderSize">
            <summary>
            Gets or sets a value that indicates the border-size for an element with four values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.AutoFormat.BorderType">
            <summary>
            Gets or sets a value that indicates the border-type for an element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.AutoFormat.HeaderBackEndColor">
            <summary>
            Gets or sets a value that specifies the background end color for header element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.AutoFormat.HeaderBorderBottomColor">
            <summary>
            Gets or sets a value that specifies the border bottom color for header element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.AutoFormat.HeaderBorderColor">
            <summary>
            Gets or sets a value that specifies the border color for header element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.AutoFormat.HeaderFontColor">
            <summary>
            Gets or sets a value that specifies the font color for header element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.AutoFormat.HeaderFontSize">
            <summary>
            Gets or sets a value that specifies the font size for header element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.AutoFormat.GroupHeaderBackColor">
            <summary>
            Gets or sets a value that specifies the background color for the group header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.AutoFormat.GHeaderBorderColor">
            <summary>
            Gets or sets a value that specifies the border color for the group header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.AutoFormat.ContentBackColor">
            <summary>
            Gets or sets a value that specifies the background color for the group header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.AutoFormat.ContentBorderColor">
            <summary>
            Gets or sets a value that specifies the border color for the content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.AutoFormat.ContentFontSize">
            <summary>
            Gets or sets a value that specifies the font size for the content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.AutoFormat.GroupContentFontColor">
            <summary>
            Gets or sets a value that specifies the font color for the groupcontent.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.AutoFormat.GroupCaptionBorderColor">
            <summary>
            Gets or sets a value that specifies the border color for the groupcaption.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.AutoFormat.AltRowBackColor">
            <summary>
            Gets or sets a value that specifies the background color for an alternate row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.AutoFormat.CaptionBackColor">
            <summary>
            Gets or sets a value that specifies the background color for the caption.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.ExportHelper`1">
            <summary>
            Export helper.
            </summary>
            <typeparam name="T">TValue of grid.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.DocumentOption">
            <summary>
            Specifies the document option.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.DocumentOption.AppendAtEnd">
            <summary>
            Append at end
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.DocumentOption.LastPage">
            <summary>
            Append at last page
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.FontWeight">
            <summary>
            Specifies font weight.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.FontWeight.Bold">
            <summary>
            Text is bold
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.FontWeight.Normal">
            <summary>
            Text is normal
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.SpannedRow">
            <summary>
            spanned row.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.GridTableCellType">
            <summary>
            Defines cell types.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.GridTableCellType.GroupCaptionCell">
            <summary>
            Group caption cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.GridTableCellType.FirstRecord">
            <summary>
            Group caption cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.GridTableCellType.GroupHeaderIndentCell">
            <summary>
            Indent cell in group header section.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.GridTableCellType.SummaryFieldCell">
            <summary>
            Field cell in summary row.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.GridTableCellType.IndentCell">
            <summary>
            Indent cell in group.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.GridTableCellType.TopLeftHeaderCell">
            <summary>
            The top-left header cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.GridTableCellType.RowHeaderCell">
            <summary>
            Any row header cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.GridTableCellType.ColumnHeaderCell">
            <summary>
            Column header cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.GridTableCellType.RecordPlusMinusCell">
            <summary>
            PlusMinus cell in a record row.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.GridTableCellType.RecordFieldCell">
            <summary>
            Field cell in a non-alternate record row.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.GridTableCellType.AlternateRecordFieldCell">
            <summary>
            Field cell in an alternate record row.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.GridTableCellType.AlternateRecordRowHeaderCell">
            <summary>
            Any header cell in an alternate record row.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.GridTableCellType.EmptyCell">
            <summary>
            Empty cell
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.GridTableCellType.CaptionCell">
            <summary>
            Caption Cell
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.GridTableCellType.MasterCell">
            <summary>
            Master Cell
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.GridTableCellType.MasterHeaderCell">
            <summary>
            Master Header Cell
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.TableOptions">
            <summary>
            Enum for TableOptions   .
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.TableOptions.ColumnHeaderRowHeight">
            <summary>
            ColumnHeaderRowHeight
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.TableOptions.RecordRowHeight">
            <summary>
            RecordRowHeight
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.TableOptions.CaptionRowHeight">
            <summary>
            CaptionRowHeight
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.TableOptions.IndentCellWidth">
            <summary>
            IndentCellWidth
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.Internal.TableOptions.ContentCellWidth">
            <summary>
            ContentCellWidth
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.ExportModel">
            <summary>
            Defines the export model.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.GridExcelExport`1">
            <summary>
            Helper for grid excel export.
            </summary>
            <typeparam name="T">TValue of grid.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridExcelExport`1.FileName">
            <summary>
            Gets or sets the name of the file.  .
            </summary>
            <value>The name of the file.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridExcelExport`1.IsAutoFit">
            <summary>
            Gets or sets the IsAutoFit for grid.    .
            </summary>
            <value>IsAutoFit in file.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridExcelExport`1.IsAutoFitRows">
            <summary>
            Gets or sets the IsAutoFitRows for grid.    .
            </summary>
            <value>IsAutoFitRows in file.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridExcelExport`1.Theme">
            <summary>
            Gets or sets the Theme of the file. .
            </summary>
            <value>The Theme of the file.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridExcelExport`1.FilePath">
            <summary>
            Gets or sets the File Path for saving file. .
            </summary>
            <value>The File Path for saving file in local.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridExcelExport`1.LocalSave">
            <summary>
            Gets or sets the is file locally saved. .
            </summary>
            <value>The LocalSave option for file.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridExcelExport`1.EmptyText">
            <summary>
            Gets or sets the Empty record text of the file. .
            </summary>
            <value>The name of the file.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridExcelExport`1.DataSource">
            <summary>
            Gets or sets the datasource of the grid.    .
            </summary>
            <value>The Datasource of the grid.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridExcelExport`1.GroupCaptionText">
            <summary>
            Gets or sets the group caption text of the grid.    .
            </summary>
            <value>The group caption text of the grid.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridExcelExport`1.IsHideColumnIncude">
            <summary>
            Gets or sets the IsHideColumnInclude for grid.  .
            </summary>
            <value>IsHideColumnInclude in file.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridExcelExport`1.HeaderText">
            <summary>
            Gets or sets the Header Text for multiple export.   .
            </summary>
            <value>HeaderText for multiple export.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridExcelExport`1.IncludeChildGrid">
            <summary>
            Gets or sets the IncludeChildGrid to either included/exclude the child Grid.    .
            </summary>
            <value>true/false.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridExcelExport`1.Document">
            <summary>
            Gets or sets the Document.  .
            </summary>
            <value>The Document for exporting.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridExcelExport`1.ExportType">
            <summary>
            Gets or sets the MultipleExportType for the file.   .
            </summary>
            <value>The MultipleExportType for file.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridExcelExport`1.WorkBook">
            <summary>
            Gets or sets the excel workbook.    .
            </summary>
            <value>The excel workbook.</value>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.Internal.GridExcelExport`1.ExportRecordRow(System.String)">
            <summary>
            Exports the record row. .
            </summary>
            <param name="value">The value.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.Internal.GridExcelExport`1.GetNumberFormat(System.String)">
            <summary>
            Number format for currency, Number and decimal standard formats.    .
            </summary>
            <param name="formatString">Column Format string.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.Internal.GridExcelExport`1.InitializeExcel(Syncfusion.ExcelExport.Workbook)">
            <summary>
            Initializes the excel.  .
            </summary>
            <param name="book">The book.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.Internal.GridExcelExport`1.CopyBorders(Syncfusion.Blazor.Grids.Internal.GridTableCellType,Syncfusion.ExcelExport.Cell)">
            <summary>
            Copies the borders. .
            </summary>
            <param name="style">The style.</param>
            <param name="range">The range.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1">
            <summary>
            Helper for grid pdf export.
            </summary>
            <typeparam name="T">TValue of grid.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.FileName">
            <summary>
            Gets or sets the name of the file.  .
            </summary>
            <value>The name of the file.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.FontWeight">
            <summary>
            Gets or sets the FontWeight.    .
            </summary>
            <value>FontWeight.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.Theme">
            <summary>
            Gets or sets the Theme of the file. .
            </summary>
            <value>The Theme of the file.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.FilePath">
            <summary>
            Gets or sets the File Path for saving file. .
            </summary>
            <value>The File Path for saving file in local.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.LocalSave">
            <summary>
            Gets or sets the is file locally saved. .
            </summary>
            <value>The LocalSave option for file.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.AutoFormat">
            <summary>
            Gets or sets the AutoFormat of the file.    .
            </summary>
            <value>The AutoFormat of the file.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.EmptyText">
            <summary>
            Gets or sets the Empty record text of the file. .
            </summary>
            <value>The name of the file.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.DataSource">
            <summary>
            Gets or sets the datasource of the grid.    .
            </summary>
            <value>The Datasource of the grid.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.GroupCaptionText">
            <summary>
            Gets or sets the group caption text of the grid.    .
            </summary>
            <value>The group caption text of the grid.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.IsHideColumnIncude">
            <summary>
            Gets or sets the IsHideColumnInclude for grid.  .
            </summary>
            <value>IsHideColumnInclude in file.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.IsAutoFit">
            <summary>
            Gets or sets the IsAutoFit for grid.    .
            </summary>
            <value>IsAutoFit in file.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.IsSummaryRow">
            <summary>
            Gets or sets the IsSummaryRow included in the file. .
            </summary>
            <value>IsSummaryRow in file.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.IncludeChildGrid">
            <summary>
            Gets or sets the IncludeChildGrid to either included/exclude the child Grid.    .
            </summary>
            <value>true/false.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.DocumentOption">
            <summary>
            Gets or sets the documentoption of the file.    .
            </summary>
            <value>The documentoption of the file.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.ExportType">
            <summary>
            Gets or sets the name of the file.  .
            </summary>
            <value>The name of the file.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.Document">
            <summary>
            Gets or sets the name of the file.  .
            </summary>
            <value>The name of the file.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.PdfVersion">
            <summary>
            Gets or sets the Pdf version.   .
            </summary>
            <value>The Pdf version.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.HeaderText">
            <summary>
            Gets or sets the Header Text for multiple export.   .
            </summary>
            <value>HeaderText for multiple export.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.CheckRTLText">
            <summary>
            Gets or sets the RTL check for RTL languages.   .
            </summary>
            <value>CheckRTL boolean value.</value>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.InitializePdf(Syncfusion.PdfExport.PdfDocument,System.String)">
            <summary>
            Initializes the excel.  .
            </summary>
            <param name="pdfDocument">The Pdf document.</param>
            <param name="headerText">The headerText.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.RenderGroupedData(System.Collections.Generic.IEnumerable{Syncfusion.Blazor.Data.Group{`0}},System.Int32)">
            <summary>
            Perform Sorting.    .
             </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.SetTableOptions(Syncfusion.Blazor.Grids.Internal.TableOptions,System.Int32,System.Int32,Syncfusion.PdfExport.PdfGridRow)">
            <summary>
            Sets the table options. .
            </summary>
            <param name="tableOptions">The table options.</param>
            <param name="Idx">The idx.</param>
            <param name="value">The value.</param>
            <param name="row"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.ExportRecordRow(System.String,Syncfusion.PdfExport.PdfGridRow)">
            <summary>
            Exports the record row. .
            </summary>
            <param name="value">The value.</param>
            <param name="row">The record row to be exported.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.ExportCaptionRow(System.String,Syncfusion.PdfExport.PdfGridRow)">
            <summary>
            Exports the record row. .
            </summary>
            <param name="value">The value.</param>
            <param name="row">The record row to be exported.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.Internal.GridPdfExport`1.CopyBorders(Syncfusion.Blazor.Grids.Internal.GridTableCellType,Syncfusion.PdfExport.PdfGridCell)">
            <summary>
            Copies the borders. .
            </summary>
            <param name="style">The style.</param>
            <param name="cell">The cell.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.GroupModelGenerator`1">
            <summary>
            Generates rows based on the grouped data.
            </summary>
            <typeparam name="T">TValue of the grid.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.IPropertyAccessor">
            <summary>
            Interface for property accessor.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.PropObj">
            <summary>
            Helper class for property info.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.PropertyInfoHelper">
            <summary>
            Class performs property access and cache the getter method for better performance.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.PropertyWrapper`2">
            <summary>
            Property info cache class.
            </summary>
            <typeparam name="TObject">Type of the property.</typeparam>
            <typeparam name="TValue">Value type.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.RowModelGenerator`1">
            <summary>
            Generate rows based on the data.
            </summary>
            <typeparam name="T">TValue of the grid.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.SummaryModelGenerator`1">
            <summary>
            Generate rows based on the aggregates.
            </summary>
            <typeparam name="T">TValue of the grid.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.Cell`1">
            <summary>
            Defines the cell of the grid.
            </summary>
            <typeparam name="T">TValue of the grid.</typeparam>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.Uid">
            <summary>
            Gets the unique identifier.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.CellType">
            <summary>
            Gets the cell type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.Visible">
            <summary>
            Gets the visible state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.IsTemplate">
            <summary>
            Gets the cell template.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.IsDataCell">
            <summary>
            Specifies that cell is data cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.IsSelected">
            <summary>
            Specifies that cell is selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.DetailRowExpand">
            <summary>
            Specifies that cell is detail row expand.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.IsFrozen">
            <summary>
            Specifies that cell is frozen.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.Freeze">
            <summary>
            Defines which side the column need to freeze.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.Column">
            <summary>
            Gets the column associated with cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.RowID">
            <summary>
            Gets the row id.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.Index">
            <summary>
            Gets the cell index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.ColIndex">
            <summary>
            Gets the cell index,.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.ClassName">
            <summary>
            Gets the class name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.Attributes">
            <summary>
            Gets the cell attributes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.IsForeignKey">
            <summary>
            Specifies that cell is foreign key column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.ForeignKeyData">
            <summary>
            Gets the foreign key data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.ColSpan">
            <summary>
            Get the col span.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.RowSpan">
            <summary>
            Gets the row span.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.AggregateColumn">
            <summary>
            Gets the aggregate column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.AggregateValue">
            <summary>
            Gets the aggregate value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.IsStacked">
            <summary>
            Specifies that cell is stacked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.IsFocused">
            <summary>
            Specifies that cell is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.ShowFocusLine">
            <summary>
            Specifies that show outline.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Cell`1.TabIndex">
            <summary>
            Specifies the cell tabindex.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.CellContext`1">
            <summary>
            Cell rendering context.
            </summary>
            <typeparam name="T">TValue of the grid.</typeparam>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.CellComponentService">
            <summary>
            Provides cell register and rendering logic.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.EventAggregator">
            <summary>
            Provides internal event mechanism.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.GridMouseDown">
            <summary>
            Defines the grid mouse down details.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.Internal.Row`1">
            <summary>
            Defines the row of the grid.
            </summary>
            <typeparam name="T">TValue of the grid.</typeparam>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.Uid">
            <summary>
            Gets or set unique identifier.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.Data">
            <summary>
            Gets the data of the row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.EditedData">
            <summary>
            Gets the EditedData of the row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.IsDetailRow">
            <summary>
            Specifies that row is detail row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.IsSelected">
            <summary>
            Specifies that row is selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.IsAltRow">
            <summary>
            Specifies that row is alternate.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.IsDataRow">
            <summary>
            Specifies that row is a data row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.IsTemplate">
            <summary>
            Specifies that row is template row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.IsLastRow">
            <summary>
            Specifies that row is last row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.Visible">
            <summary>
            Specifies that row is visible.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.IsExpand">
            <summary>
            Specifies that row is expanded.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.Cells">
            <summary>
            Gets cells of the row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.Index">
            <summary>
            Gets the row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.Indent">
            <summary>
            Gets the row indent.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.ForeignKeyData">
            <summary>
            Gets the foreign key data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.ParentId">
            <summary>
            Specifies the parent row id.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.ChildId">
            <summary>
            Specifies the child row id.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.rowsIndex">
            <summary>
            Specifies the row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.GroupSummary">
            <summary>
            Specifies the group summary.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.IsCaptionRow">
            <summary>
            Specifies that row is caption row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.CssClass">
            <summary>
            Gets the css class.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.RowType">
            <summary>
            Gets the row type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.ParentUid">
            <summary>
            Gets the parent row uid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.State">
            <summary>
            Gets the row selected state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.Internal.Row`1.IsEdit">
            <summary>
            Gets the row is in edit state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.Internal.GridRowBase`1.Dispose">
            <summary>
            Dispose unmanaged resources in the Row component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.Internal.GridRowBase`1.Dispose(System.Boolean)">
            <summary>
            Dispose unmanaged resources in the Row component.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.SfGrid`1">
            <summary>
            Blazor Grid component displays tabular data and it has in-built support for various data binding, editing,
            sorting and filtering.
            </summary>
            <typeparam name="TValue">A type which provides schema for the grid component.
            </typeparam>
            <remarks><c>TValue</c> is inferred from value of <c>DataSource</c> property if it is bounded with IEnumerable.
            If data is consumed using <c>SfDataManager</c> then TValue must be assigned explicitly.</remarks>
            <seealso cref="T:Syncfusion.Blazor.Data.SfDataManager"/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.UnMatchedAttributes">
            <summary>
            Catches unmatched attributes from the component.
            This can be used to specify custom style, class and other attributes to the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.CurrentViewData">
            <summary>
            CurrentViewData provides the current data details binded in the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.TotalItemCount">
            <summary>
            TotalItemCount provides the total record count in the data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.IsEdit">
            <summary>
             Specifies whether grid is in edit state or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.IsAutoGeneratedColumns">
            <summary>
             Specifies whether gridcolumn is autogenerated or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.GridEvents">
            <summary>
            Specifies the grid events.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Grids.SfGrid`1.SkipLocalStorageSet">
            <summary>
            When set as true then localstorage will not be set. This helps avoiding local storage setting after
            foreign key rendering.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.SelectedRecords">
            <summary>
            Gets the selected records of the grid.
            </summary>
            <remarks>When selection persistence feature is enabled then it returns records in other pages too.</remarks>
            <seealso cref="P:Syncfusion.Blazor.Grids.GridSelectionSettings.PersistSelection"/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.SelectedRowIndexes">
            <summary>
            Gets the selected record`s indexes of the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.ForceUpdate">
            <summary>
            If ForceUpdate is set to true then it will immediately render the grid component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.IsCollectionChanged">
            <summary>
            If IsCollectionChanged is set to true then it will allow observableCollection data to make change in GridContent.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.HasFreezeDirection">
            <summary>
            Specifies whether the Grid is frozen only by using freeze direction .
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.IsPersist">
            <summary>
            Specifies whether the frozen Grid is persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.IsStackedHeader">
            <summary>
            Specifies whether the Grid header is stacked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.IsFirstEventRender">
            <summary>
            Specifies refresh without data process and new row generation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.SoftRefresh">
            <summary>
            Specifies refresh without data process and new row generation.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.RefreshColHeader">
            <summary>
            Specifies refresh column header.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.HasColumnChanges">
            <summary>
            Specifies new column added.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.HasAggregateChanges">
            <summary>
            Specifies new aggregate column added.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.HasSortColumnChanges">
            <summary>
            Specifies new sort column added.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.HasFilterColumnChanges">
            <summary>
            Specifies new filter column added.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.IsServerRendered">
            <summary>
            Specifies grid is following server rendered.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.IsExpanded">
            <summary>
            Specifies group expand/collapse state should persist.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.ColumnIndex">
            <summary>
            Specifies new column added index.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetClass">
            <summary>
            Returns the class name to be added to the container element.
            </summary>
            <returns>string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.PreventRender(System.Boolean)">
            <summary>
            Prevents the grid render. This method will internally sets value to be returned from ShouldRender method.
            </summary>
            <param name="preventRender">Default value is true. Toggles the ShouldRender method value.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.OnObservableChange(System.String,System.Object,System.Boolean,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SetPersistData(System.String)">
            <summary>
            Load the previously saved state of the Grid.
            </summary>
            <param name="properties">Contains the saved properties as string value.</param>
            <returns>Task.</returns>
            <remarks>
            This method is primarly used to load and refresh the grid with already saved state.
            The state can be served from any source such as window.localStorage, DB etc.
            </remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SetPersistDataAsync(System.String)">
            <summary>
            Load the previously saved state of the Grid.
            </summary>
            <param name="properties">Contains the saved properties as string value.</param>
            <returns>Task.</returns>
            <remarks>
            This method is primarly used to load and refresh the grid with already saved state.
            The state can be served from any source such as window.localStorage, DB etc.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ResetPersistData">
            <summary>
            Resets the state of the Grid.
            </summary>
            <returns>void.</returns>
            <remarks>This method will clear the current state and refreshes the grid with original state given
            delcaratively. If EnablePersistence is used then this will clear the state which is stored in window.localStorage too.</remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ResetPersistDataAsync">
            <summary>
            Resets the state of the Grid.
            </summary>
            <returns>void.</returns>
            <remarks>This method will clear the current state and refreshes the grid with original state given
            delcaratively. If EnablePersistence is used then this will clear the state which is stored in window.localStorage too.</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.PersistProperties(System.String)">
            <summary>
            Defines the properties of persisting component’s state between page reloads.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.PropertyChanged">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.Notify(System.String,System.Object)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.UpdateForeignData">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.AnnotateColumn(Syncfusion.Blazor.Grids.GridColumn)">
            <summary>
            Add data annotation to given column.
            </summary>
            <param name="column">Grid column component.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.CallStateHasChanged">
            <summary>
            Invoke state change.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.CallStateHasChangedAsync">
            <summary>
            Invoke state change.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.AddSortColumn(System.String)">
            <summary>
            Add sort column while grouping.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SetValue``1(``0,System.String)">
            <summary>
            Set value while editing using column field.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ComponentDispose">
            <summary>
            Handles dispose component.
            </summary>
            <remarks>
            Destroyed event will be invoked if any. Set current state of grid in window.localStorage if EnablePersistence is set as true.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.ChildContent">
            <summary>
            Defines the child content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.Aggregates">
            <summary>
            Gets the Grid aggregate rows. Use <see cref="T:Syncfusion.Blazor.Grids.GridAggregates"/> component to configure
            aggregate rows.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.AllowExcelExport">
            <summary>
            If AllowExcelExport set to true, then it will allow the user to export grid to Excel file.
            </summary>
            <remarks>
            To perform excel export, bind <see cref="P:Syncfusion.Blazor.Grids.GridEvents`1.OnToolbarClick"/> event and
            invoke <see cref="M:Syncfusion.Blazor.Grids.SfGrid`1.ExcelExport(Syncfusion.Blazor.Grids.ExcelExportProperties,System.Nullable{System.Boolean},System.Object,System.Nullable{System.Boolean})"/> method
            in its toolbar item click handler.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.AllowFiltering">
            <summary>
            If AllowFiltering set to true the filter bar will be displayed for all columns.
            If set to false the filter bar will not be displayed.
            Filter bar allows the user to filter grid records with required criteria.
            </summary>
            <remarks>
            Filter type  can be changed from filterbar using <see cref="P:Syncfusion.Blazor.Grids.GridFilterSettings.Type"/> property.
            Filter can be disabled for particular column by using  <see cref="P:Syncfusion.Blazor.Grids.GridColumn.AllowFiltering"/>.
            <seealso cref="T:Syncfusion.Blazor.Grids.FilterType"/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.AllowGrouping">
            <summary>
            If AllowGrouping set to true, then it will allow the user to dynamically group or ungroup columns.
            Grouping can be done by drag and drop columns from column header to group drop area.
            </summary>
            <remarks>
            Grouping can be further configured using <see cref="T:Syncfusion.Blazor.Grids.GridGroupSettings"/> component.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.AllowMultiSorting">
            <summary>
            If AllowMultiSorting set to true, then it will allow the user to sort multiple column in the grid.
            </summary>
            <remarks>
            <see cref="P:Syncfusion.Blazor.Grids.SfGrid`1.AllowSorting"/> must be true to use this property.
            Sorting can be further configured using <see cref="T:Syncfusion.Blazor.Grids.GridSortSettings"/> component.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.AllowPaging">
            <summary>
            If AllowPaging is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.
            </summary>
            <remarks>
            Paging can be further configured using <see cref="T:Syncfusion.Blazor.Grids.GridPageSettings"/> component.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.AllowPdfExport">
            <summary>
            If AllowPdfExport set to true, then it will allow the user to export grid to Pdf file.
            </summary>
            <remarks>
            To perform pdf export, bind <see cref="P:Syncfusion.Blazor.Grids.GridEvents`1.OnToolbarClick"/> event and
            invoke <see cref="M:Syncfusion.Blazor.Grids.SfGrid`1.PdfExport(Syncfusion.Blazor.Grids.PdfExportProperties,System.Nullable{System.Boolean},System.Object,System.Nullable{System.Boolean})"/> method
            in its toolbar item click handler.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.AllowReordering">
            <summary>
            If AllowReordering is set to true, Grid columns can be reordered.
            Reordering can be done by drag and drop of a particular column from one index to another index.
            </summary>
            <remarks>
            If Grid is rendered with stacked headers, reordering is allowed only at the same level as the column headers.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.AllowResizing">
            <summary>
            If AllowResizing is set to true, Grid columns can be resized.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.AllowRowDragAndDrop">
            <summary>
            If AllowRowDragAndDrop is set to true, you can drag and drop grid rows at another or within grid.
            </summary>
            <remarks>
            To drag and drop rows between grids or to another component, <see cref="P:Syncfusion.Blazor.Grids.GridRowDropSettings.TargetID"/> property should be provided
            with the ID of the target grid or any other component.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.AllowSelection">
            <summary>
            If AllowSelection is set to true, it allows selection of (highlight row) Grid records by clicking it.
            </summary>
            <remarks>
            Selection can be further configured using <see cref="T:Syncfusion.Blazor.Grids.GridSelectionSettings"/> component.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.AllowSorting">
            <summary>
            If AllowSorting is set to true, it allows sorting of grid records when column header is clicked.
            </summary>
            <remarks>
            Sorting can be further configured using <see cref="T:Syncfusion.Blazor.Grids.GridSortSettings"/> component.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.AllowTextWrap">
            <summary>
            If AllowTextWrap set to true,
            then text content will wrap to the next line when its text content exceeds the width of the Column Cells.
            </summary>
            <remarks>
            Text wrap can be further configured using <see cref="T:Syncfusion.Blazor.Grids.GridTextWrapSettings"/> component.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.ClipMode">
            <summary>
             Defines the mode of clip. The available modes are,.
            <list type="bullet">
            <item>
            <term>Clip</term>
            <description>Truncates the cell content when it overflows its area.</description>
            </item>
            <item>
            <term>Ellipsis</term>
            <description>Displays ellipsis when the cell content overflows its area.</description>
            </item>
            <item>
            <term>EllipsisWithTooltip</term>
            <description>Displays ellipsis when the cell content overflows its area also it will display tooltip while hover on ellipsis applied cell.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.ColumnChooserSettings">
            <summary>
            Configures the column chooser in the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.KeySettings">
            <summary>
            Configures the cell movement keys in the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.ColumnMenuItems">
             <summary>
             ColumnMenuItems defines both built-in and custom column menu items.
            
             The available built-in items are,
              AutoFitAll - Auto fit the size of all columns.
              AutoFit - Auto fit the current column.
              Group - Group by current column.
              Ungroup - Ungroup by current column.
              SortAscending - Sort the current column in ascending order.
              SortDescending - Sort the current column in descending order.
              Filter - Filter options will show based on filterSettings property like checkbox filter, excel filter, menu filter.
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.ColumnQueryMode">
            <summary>
            ColumnQueryModeprovides options to retrive data from the datasource.
            <list type="bullet">
            <item>
            <term>All</term>
            <description>It retrives whole data source</description>
            </item>
            <item>
            <term>Schema</term>
            <description>Retrives data for all the defined columns in grid from the data source.</description>
            </item>
            <item>
            <term>ExcludeHidden</term>
            <description>Retrives data only for visible columns of grid from the data source.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.Columns">
            <summary>
            Defines the schema of data source. Use <see cref="T:Syncfusion.Blazor.Grids.GridColumns"/> to add grid columns.
            If the Columns declaration is empty or undefined then the columns are automatically generated from data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.ContextMenuItems">
             <summary>
             ContextMenuItems defines both built-in and custom context menu items.
            
             The available built-in items are,
              AutoFitAll - Auto fit the size of all columns.
              AutoFit - Auto fit the current column.
              Group - Group by current column.
              Ungroup - Ungroup by current column.
              Edit - Edit the current record.
              Delete - Delete the current record.
              Save - Save the edited record.
              Cancel - Cancel the edited state.
              Copy - Copy the selected records.
              PdfExport - Export the grid as Pdf format.
              ExcelExport - Export the grid as Excel format.
              CsvExport - Export the grid as CSV format.
              SortAscending - Sort the current column in ascending order.
              SortDescending - Sort the current column in descending order.
              FirstPage - Go to the first page.
              PrevPage - Go to the previous page.
              LastPage - Go to the last page.
              NextPage - Go to the next page.
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.CurrentAction">
            <summary>
            Gets or sets the current action details.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.DataSource">
            <summary>
            Provides the data source for rendering grid rows. The data source value can be of any type
            that implements IEnumerable.
            </summary>
            <remarks>
            To consume data from remote service or custom adaptor,
            <see cref="T:Syncfusion.Blazor.Data.SfDataManager"/> component has to be used.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.DataSourceChanged">
            <summary>
            Invokes when data source changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.EnableAdaptiveUI">
            <summary>
            Render the Grid component as Adaptive mode based on Parent element. Also, it's render's the Grid filter, sorting and editing dialogs adaptively
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.EditSettings">
            <summary>
            Configures the edit settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.EnableAltRow">
            <summary>
            If EnableAltRow is set to true, the grid will render with e-altrow CSS class to the alternative tr elements.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.EnableAutoFill">
            <summary>
            If EnableAutoFill is set to true, then the auto fill icon will displayed on cell selection for copy cells.
            It requires the selection mode to be Cell and CellSelectionMode to be Box.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.EnableColumnVirtualization">
            <summary>
            If EnableColumnVirtualization set to true, then the Grid will render only the columns visible within the view-port
            and load subsequent columns on horizontal scrolling. This helps to load large dataset of columns in Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.EnableHeaderFocus">
            <summary>
            If EnableHeaderFocus set to true, then header element will be focused when focus moves to grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.EnableVirtualMaskRow">
            <summary>
            If EnableMastRow set to true the Masked row append in the DOM elements.
            If set to false default virtual scrolling will work while enabling Enable Virtualization.
            In this feature Masked cells displayed until data cells retrieve.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.EnableHover">
            <summary>
            If EnableHover is set to true, the row hover is enabled in the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
            <remarks>
            Enabling this property will store the grid state such as column order, column width, sort information etc in the
            window.localStorage when the component is disposed.
            Users can also store grid state in data base instead of window.localStorage by using <see cref="M:Syncfusion.Blazor.Grids.SfGrid`1.GetPersistData"/> method.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.EnableVirtualization">
            <summary>
            If EnableVirtualization set to true, then the Grid will render only the rows visible within the view-port
            and load subsequent rows on vertical scrolling. This helps to load large dataset in Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.FilterSettings">
            <summary>
            Configures the filter settings of the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.FrozenColumns">
            <summary>
            Gets or sets the number of frozen columns.
            </summary>
            <remarks>Specific column can be frozen using <see cref="P:Syncfusion.Blazor.Grids.GridColumn.IsFrozen"/> property.</remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.FrozenRows">
            <summary>
            Gets or sets the number of frozen rows.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.GridLines">
            <summary>
            Defines the mode of grid lines. The available modes are,.
            <list type="bullet">
            <item>
            <term>Both</term>
            <description>Displays both the horizontal and vertical grid lines.</description>
            </item>
            <item>
            <term>None</term>
            <description>No grid lines are displayed.</description>
            </item>
            <item>
            <term>Horizontal</term>
            <description>Displays the horizontal grid lines only.</description>
            </item>
            <item>
            <term>Vertical</term>
            <description>Displays grid lines based on the theme.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.GroupSettings">
            <summary>
            Configures the group settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.Height">
            <summary>
            Defines the scrollable height of the grid content.
            </summary>
            <remarks>
            Height can be assigned with pixel and percentage values such as 100px, 100% etc.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.HierarchyPrintMode">
            <summary>
            Defines the hierarchy grid print modes. The available modes are.
            <list type="bullet">
            <item>
            <term>Expanded</term>
            <description>Prints the master grid with expanded child grids.</description>
            </item>
            <item>
            <term>All</term>
            <description>Prints the master grid with all the child grids.</description>
            </item>
            <item>
            <term>None</term>
            <description>Prints the master grid alone.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.PageSettings">
            <summary>
            Configures the pager in the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.PrintMode">
            <summary>
            Defines the print modes. The available print modes are.
            <list type="bullet">
            <item>
            <term>AllPages</term>
            <description>Print all pages records of the Grid.</description>
            </item>
            <item>
            <term>CurrentPage</term>
            <description>Print current page records of the Grid.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.Query">
            <summary>
            Defines the external Query
            that will be executed along with data processing.
            </summary>
            <remarks>
            Additional parameters can be send along with request
            by using <see cref="M:Syncfusion.Blazor.Data.Query.AddParams(System.String,System.Object)"/> method.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.RowDropSettings">
            <summary>
            Configures the row drop settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.RowHeight">
            <summary>
            Defines the height of Grid rows.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.RowRenderingMode">
            <summary>
            Gets or sets the row rendering mode in grid. Setting this in vertical mode will render rows vertically with headers in the same row which suits better to use grid in small screens. In vertical row rendering mode, limited features are supported like filtering,sorting, Dialog editing, Selection, Searching and Row virtualization. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.SearchSettings">
            <summary>
            Configures the search behavior in the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.SelectedRowIndex">
            <summary>
            The SelectedRowIndex allows you to select a row at initial rendering.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.SelectionSettings">
            <summary>
            Configures the selection settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.ShowColumnChooser">
            <summary>
            If ShowColumnChooser is set to true, it allows you to dynamically show or hide columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.ShowColumnMenu">
            <summary>
            If ShowColumnMenu set to true, then it will enable the column menu options in each columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.SortSettings">
            <summary>
            Configures the sort settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.TextWrapSettings">
            <summary>
            Configures the text wrap in the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.Toolbar">
            <summary>
            Toolbar defines the ToolBar items of the Grid.
            It contains built-in and custom toolbar items.
            </summary>
            <remarks>
            If an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.
            In some cases user may want to use custom toolbar instead of custom item, in such cases user can use
            <see cref="P:Syncfusion.Blazor.Grids.GridTemplates.ToolbarTemplate"/> property to provide custom toolbar.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.Width">
            <summary>
            Defines the Grid width.
            </summary>
            <remarks>
            Width can be assigned with pixel and percentage values such as 100px, 100% etc.
            When the sum of total column width exceeds this value then the browser horizontal scrollbar will be displayed.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.AddRecord(`0,System.Nullable{System.Double})">
            <summary>
            Adds a new record to the Grid. If no data is passed then add form will be showed.
            GridEditSettings.AllowEditing should be true.
            </summary>
            <param name="data">New record to be added.</param>
            <param name="index">Specifies index to add the new record.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.AddRecordAsync(`0,System.Nullable{System.Double})">
            <summary>
            Adds a new record to the Grid. If no data is passed then add form will be showed.
            GridEditSettings.AllowEditing should be true.
            </summary>
            <param name="data">New record to be added.</param>
            <param name="index">Specifies index to add the new record.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.AutoFitColumns">
            <summary>
            Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.
            This method ignores the hidden columns.
            Use the AutoFitColumns method in the DataBound event to resize at initial rendering or use GridColumn.IsAutoFit to set inital auto fit.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.AutoFitColumnsAsync">
            <summary>
            Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.
            This method ignores the hidden columns.
            Use the AutoFitColumns method in the DataBound event to resize at initial rendering or use GridColumn.IsAutoFit to set inital auto fit.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.AddRecord">
            <summary>
            Adds a new record to the Grid. If no data is passed then add form will be showed.
            GridEditSettings.AllowEditing should be true.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.AddRecordAsync">
            <summary>
            Adds a new record to the Grid. If no data is passed then add form will be showed.
            GridEditSettings.AllowEditing should be true.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.AutoFitColumns(System.String[])">
            <summary>
            Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.
            This method ignores the hidden columns.
            Use the AutoFitColumns method in the DataBound event to resize at initial rendering or use GridColumn.IsAutoFit to set inital auto fit.
            </summary>
            <param name="fieldNames">A collection of field names to be autofitted.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.AutoFitColumnsAsync(System.String[])">
            <summary>
            Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.
            This method ignores the hidden columns.
            Use the AutoFitColumns method in the DataBound event to resize at initial rendering or use GridColumn.IsAutoFit to set inital auto fit.
            </summary>
            <param name="fieldNames">A collection of field names to be autofitted.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.AutoFitColumns(System.String)">
            <summary>
            Changes the column width to automatically fit its content to ensure that
            the width shows the content without wrapping
            This method ignores the hidden columns.
            Use the AutoFitColumns method in the DataBound event to resize at initial rendering or use GridColumn.IsAutoFit to set inital auto fit.
            </summary>
            <param name="fieldNames">A single field name to be autofitted.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.AutoFitColumnAsync(System.String)">
            <summary>
            Changes the column width to automatically fit its content to ensure that
            the width shows the content without wrapping
            This method ignores the hidden columns.
            Use the AutoFitColumns method in the DataBound event to resize at initial rendering or use GridColumn.IsAutoFit to set inital auto fit.
            </summary>
            <param name="fieldName">A single field name to be autofitted.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ClearCellSelection">
            <summary>
            Deselects the currently selected cells.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ClearCellSelectionAsync">
            <summary>
            Deselects the currently selected cells.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ClearFiltering">
            <summary>
            Clears all the filtered rows of the Grid.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ClearFilteringAsync">
            <summary>
            Clears all the filtered rows of the Grid.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ClearFiltering(System.Collections.Generic.List{System.String})">
            <summary>
            Clears all the filtered rows of the Grid.
            </summary>
            <param name="fields">Specify the field name to be cleared.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ClearFilteringAsync(System.Collections.Generic.List{System.String})">
            <summary>
            Clears all the filtered rows of the Grid.
            </summary>
            <param name="fields">Specify the field name to be cleared.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ClearFiltering(System.String)">
            <summary>
            Clears all the filtered rows of the Grid.
            </summary>
            <param name="field">Specify the field name to be cleared.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ClearFilteringAsync(System.String)">
            <summary>
            Clears all the filtered rows of the Grid.
            </summary>
            <param name="field">Specify the field name to be cleared.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ClearGrouping">
            <summary>
            Clears all the grouped columns of the Grid.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ClearGroupingAsync">
            <summary>
            Clears all the grouped columns of the Grid.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ClearRowSelection">
            <summary>
            Deselects the currently selected rows.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ClearRowSelectionAsync">
            <summary>
            Deselects the currently selected rows.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ClearSelection">
            <summary>
            Deselects the current selected rows and cells.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ClearSelectionAsync">
            <summary>
            Deselects the current selected rows and cells.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ClearSorting">
            <summary>
            Clears all the sorted columns of the Grid.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ClearSortingAsync">
            <summary>
            Clears all the sorted columns of the Grid.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ClearSorting(System.Collections.Generic.List{System.String})">
            <summary>
            Clears the sorted columns of the Grid based on the fields.
            </summary>
            <param name="fields">Specifies the sorted fields to be cleared.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ClearSortingAsync(System.Collections.Generic.List{System.String})">
            <summary>
            Clears the sorted columns of the Grid based on the fields.
            </summary>
            <param name="fields">Specifies the sorted fields to be cleared.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.CloseEdit">
            <summary>
            Cancels edited state.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.CloseEditAsync">
            <summary>
            Cancels edited state.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.Copy(System.Nullable{System.Boolean})">
            <summary>
            Copy the selected rows or cells data into clipboard.
            </summary>
            <param name="withHeader">Copies along with column header names.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.CopyAsync(System.Nullable{System.Boolean})">
            <summary>
            Copy the selected rows or cells data into clipboard.
            </summary>
            <param name="withHeader">Copies along with column header names.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.CsvExport(Syncfusion.Blazor.Grids.ExcelExportProperties,System.Nullable{System.Boolean},System.Object,System.Nullable{System.Boolean})">
            <summary>
            Export Grid data to CSV file.
            </summary>
            <param name="excelExportProperties">Provides the excel export properties. Use this to provide custom column,
            data source, theme etc.</param>
            <param name="isMultipleExport">Specifies multi-export is enabled.</param>
            <param name="workbook">Workbook instance.</param>
            <param name="isBlob">Export as blob instead of writing response.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ExportToCsvAsync(Syncfusion.Blazor.Grids.ExcelExportProperties,System.Nullable{System.Boolean},System.Object,System.Nullable{System.Boolean})">
            <summary>
            Export Grid data to CSV file.
            </summary>
            <param name="excelExportProperties">Provides the excel export properties. Use this to provide custom column,
            data source, theme etc.</param>
            <param name="isMultipleExport">Specifies multi-export is enabled.</param>
            <param name="workbook">Workbook instance.</param>
            <param name="isBlob">Export as blob instead of writing response.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.DeleteRecord">
            <summary>
            Delete a record with Given options. If fieldname and data is not given then grid will delete the selected record.
            EditSettings.AllowDeleting should be true.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.DeleteRecordAsync">
            <summary>
            Delete a record with Given options. If fieldname and data is not given then grid will delete the selected record.
            EditSettings.AllowDeleting should be true.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.DeleteRecord(System.String,`0)">
            <summary>
            Delete a record with Given options. If fieldname and data is not given then grid will delete the selected record.
            EditSettings.AllowDeleting should be true.
            </summary>
            <param name="fieldname">Primary key field name.</param>
            <param name="data">Data to be deleted.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.DeleteRecordAsync(System.String,`0)">
            <summary>
            Delete a record with Given options. If fieldname and data is not given then grid will delete the selected record.
            EditSettings.AllowDeleting should be true.
            </summary>
            <param name="fieldname">Primary key field name.</param>
            <param name="data">Data to be deleted.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.DeleteRow(System.Object)">
            <summary>
            Delete any visible row by TR element.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.EditCell(System.Double,System.String)">
            <summary>
            Changes a particular cell into edited state based on the row index and field name provided in the Batch mode.
            </summary>
            <param name="index">Row index to be edited.</param>
            <param name="field">Column field to be edited.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.EditCellAsync(System.Double,System.String)">
            <summary>
            Changes a particular cell into edited state based on the row index and field name provided in the Batch mode.
            </summary>
            <param name="index">Row index to be edited.</param>
            <param name="field">Column field to be edited.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.EnableToolbarItems(System.Collections.Generic.List{System.String},System.Boolean)">
             <summary>
             Enables or disables ToolBar items.
             </summary>
             <param name="items">ID of toolbar items to be enabled or disabled.</param>
             <param name="isEnable">Specifies whether enable or disable.</param>
             <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.EnableToolbarItemsAsync(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Enables or disables ToolBar items.
            </summary>
            <param name="items">ID of toolbar items to be enabled or disabled.</param>
            <param name="isEnable">Specifies whether enable or disable.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.EndEdit">
            <summary>
            If Grid is in editable state, you can save a record by invoking endEdit.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.EndEditAsync">
            <summary>
            If Grid is in editable state, you can save a record by invoking endEdit.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ExcelExport(Syncfusion.Blazor.Grids.ExcelExportProperties,System.Nullable{System.Boolean},System.Object,System.Nullable{System.Boolean})">
            <summary>
            Export Grid data to Excel file(.xlsx).
            </summary>
            <param name="excelExportProperties">Provides the excel export properties. Use this to provide custom column,
            data source, theme etc.</param>
            <param name="isMultipleExport">Specifies multi-export is enabled.</param>
            <param name="workbook">Workbook instance.</param>
            <param name="isBlob">Export as blob instead of writing response.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ExportToExcelAsync(Syncfusion.Blazor.Grids.ExcelExportProperties,System.Nullable{System.Boolean},System.Object,System.Nullable{System.Boolean})">
            <summary>
            Export Grid data to Excel file(.xlsx).
            </summary>
            <param name="excelExportProperties">Provides the excel export properties. Use this to provide custom column,
            data source, theme etc.</param>
            <param name="isMultipleExport">Specifies multi-export is enabled.</param>
            <param name="workbook">Workbook instance.</param>
            <param name="isBlob">Export as blob instead of writing response.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.FilterByColumn(System.String,System.String,System.Object,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Object)">
            <summary>
            Filters grid row by column name with the given options.
            </summary>
            <param name="fieldName">Specifies the field name to be filtered.</param>
            <param name="filterOperator">Sepcifies the filter operator.</param>
            <param name="filterValue">Specifies the filter value.</param>
            <param name="predicate">Specifies predicate/condition such as AND/OR while filtering multiple value.</param>
            <param name="matchCase">Specifies the match case.</param>
            <param name="ignoreAccent">Specifies the ignore accent.</param>
            <param name="actualFilterValue">Specifies the actual value.</param>
            <param name="actualOperator">Specifies the actual type.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.FilterByColumnAsync(System.String,System.String,System.Object,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Object)">
            <summary>
            Filters grid row by column name with the given options.
            </summary>
            <param name="fieldName">Specifies the field name to be filtered.</param>
            <param name="filterOperator">Sepcifies the filter operator.</param>
            <param name="filterValue">Specifies the filter value.</param>
            <param name="predicate">Specifies predicate/condition such as AND/OR while filtering multiple value.</param>
            <param name="matchCase">Specifies the match case.</param>
            <param name="ignoreAccent">Specifies the ignore accent.</param>
            <param name="actualFilterValue">Specifies the actual value.</param>
            <param name="actualOperator">Specifies the actual type.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetBatchChanges">
            <summary>
            Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetBatchChangesAsync">
            <summary>
            Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetColumnByField(System.String)">
            <summary>
            Gets a Column by column name.
            </summary>
            <param name="field">Specifies the field name.</param>
            <returns><see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetColumnByFieldAsync(System.String)">
            <summary>
            Gets a Column by column name.
            </summary>
            <param name="field">Specifies the field name.</param>
            <returns><see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetColumnByUid(System.String)">
            <summary>
            Gets a column by UID.
            </summary>
            <param name="uid">Specifies the uid name.</param>
            <returns><see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetColumnByUidAsync(System.String)">
            <summary>
            Gets a column by UID.
            </summary>
            <param name="uid">Specifies the uid name.</param>
            <returns><see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetColumnFieldNames">
            <summary>
            Gets the collection of column fields.
            </summary>
            <returns>System.Threading.Tasks.Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetColumnFieldNamesAsync">
            <summary>
            Gets the collection of column fields.
            </summary>
            <returns>System.Threading.Tasks.Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetColumnIndexByField(System.String)">
            <summary>
            Gets a column index by column name.
            </summary>
            <param name="field">Specifies the column name.</param>
            <returns><see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetColumnIndexByFieldAsync(System.String)">
            <summary>
            Gets a column index by column name.
            </summary>
            <param name="field">Specifies the column name.</param>
            <returns><see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetColumnIndexByUid(System.String)">
            <summary>
            Gets a column index by UID.
            </summary>
            <param name="uid">Specifies the column uid.</param>
            <returns><see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetColumnIndexByUidAsync(System.String)">
            <summary>
            Gets a column index by UID.
            </summary>
            <param name="uid">Specifies the column uid.</param>
            <returns><see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetColumns(System.Nullable{System.Boolean})">
            <summary>
            Gets the columns from the Grid.
            </summary>
            <returns>System.Threading.Tasks.Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetColumnsAsync(System.Nullable{System.Boolean})">
            <summary>
            Gets the columns from the Grid.
            </summary>
            <returns>System.Threading.Tasks.Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetCurrentViewRecords">
            <summary>
            Get current visible data of grid.
            </summary>
            <returns>System.Threading.Tasks.Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetCurrentViewRecordsAsync">
            <summary>
            Get current visible data of grid.
            </summary>
            <returns>System.Threading.Tasks.Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetFilterUIInfo">
            <summary>
            Get the current Filter operator and field.
            </summary>
            <returns>System.Threading.Tasks.Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetFilteredRecords">
            <summary>
            Get all filtered records from the Grid and it returns array of objects for the local dataSource, returns a promise object if the Grid has remote data.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetFilteredRecordsAsync">
            <summary>
            Get all filtered records from the Grid and it returns array of objects for the local dataSource, returns a promise object if the Grid has remote data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetForeignKeyColumns">
            <summary>
            Gets the foreign columns from Grid.
            </summary>
            <returns>System.Threading.Tasks.Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetForeignKeyColumnsAsync">
            <summary>
            Gets the foreign columns from Grid.
            </summary>
            <returns>System.Threading.Tasks.Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetHiddenColumns">
            <summary>
            Gets the hidden columns from the Grid.
            </summary>
            <returns>System.Threading.Tasks.Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetHiddenColumnsAsync">
            <summary>
            Gets the hidden columns from the Grid.
            </summary>
            <returns>System.Threading.Tasks.Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetPersistData">
            <summary>
            Get the properties to be maintained in the persisted state.
            </summary>
            <returns>System.Threading.Tasks.Task.</returns>
            <remarks>
            Returns the state of the grid as string value which can be saved and loaded into grid later using
            <c>SetPersistData</c> method.
            </remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetPersistDataAsync">
            <summary>
            Get the properties to be maintained in the persisted state.
            </summary>
            <returns>System.Threading.Tasks.Task.</returns>
            <remarks>
            Returns the state of the grid as string value which can be saved and loaded into grid later using
            <c>SetPersistData</c> method.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetPrimaryKeyFieldNames">
            <summary>
            Get the names of the primary key columns of the Grid.
            </summary>
            <returns>System.Threading.Tasks.Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetPrimaryKeyFieldNamesAsync">
            <summary>
            Get the names of the primary key columns of the Grid.
            </summary>
            <returns>System.Threading.Tasks.Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetRowIndexByPrimaryKey(System.Object)">
            <summary>
            Get row index by primary key.
            </summary>
            <param name="value">Primary key value.</param>
            <returns>System.Threading.Tasks.Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetRowIndexByPrimaryKeyAsync(System.Object)">
            <summary>
            Get row index by primary key.
            </summary>
            <param name="value">Primary key value.</param>
            <returns>System.Threading.Tasks.Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetSelectedRecords">
            <summary>
            Gets the collection of selected records.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetSelectedRecordsAsync">
            <summary>
            Gets the collection of selected records.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetSelectedRowCellIndexes">
            <summary>
            Gets the collection of selected row and cell indexes.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetSelectedRowCellIndexesAsync">
            <summary>
            Gets the collection of selected row and cell indexes.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetSelectedRowIndexes">
            <summary>
            Gets the collection of selected row indexes.
            </summary>
            <returns>System.Threading.Tasks.Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetSelectedRowIndexesAsync">
            <summary>
            Gets the collection of selected row indexes.
            </summary>
            <returns>System.Threading.Tasks.Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetUidByColumnField(System.String)">
            <summary>
            Gets UID by column name.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetUidByColumnFieldAsync(System.String)">
            <summary>
            Gets UID by column name.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetVisibleColumns">
            <summary>
            Gets the visible columns from the Grid.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GetVisibleColumnsAsync">
            <summary>
            Gets the visible columns from the Grid.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GoToPage(System.Double)">
            <summary>
            Navigates to the specified target page.
            </summary>
            <param name="pageNo">Specifies the page number.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GoToPageAsync(System.Double)">
            <summary>
            Navigates to the specified target page.
            </summary>
            <param name="pageNo">Specifies the page number.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GroupCollapseAll">
            <summary>
            Collapses all the grouped rows of the Grid.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.CollapseAllGroupAsync">
            <summary>
            Collapses all the grouped rows of the Grid.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GroupColumn(System.String)">
            <summary>
            Groups a column by column name.
            </summary>
            <param name="columnName">Specifies the column name to be grouped.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GroupColumnAsync(System.String)">
            <summary>
            Groups a column by column name.
            </summary>
            <param name="columnName">Specifies the column name to be grouped.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.GroupExpandAll">
            <summary>
            Expands all the grouped rows of the Grid.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ExpandAllGroupAsync">
            <summary>
            Expands all the grouped rows of the Grid.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.HideSpinner">
            <summary>
            Manually showed spinner needs to hide by HideSpinnner.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.HideSpinnerAsync">
            <summary>
            Manually showed spinner needs to hide by HideSpinnner.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.OpenColumnChooser(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Column chooser can be displayed on screen by given position(X and Y axis).
            </summary>
            <param name="x">Specifies the X position.</param>
            <param name="y">Specifies the Y position.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.OpenColumnChooserAsync(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Column chooser can be displayed on screen by given position(X and Y axis).
            </summary>
            <param name="x">Specifies the X position.</param>
            <param name="y">Specifies the Y position.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.PdfExport(Syncfusion.Blazor.Grids.PdfExportProperties,System.Nullable{System.Boolean},System.Object,System.Nullable{System.Boolean})">
            <summary>
            Export Grid data to PDF document.
            </summary>
            <param name="pdfExportProperties">Provides the pdf export properties. Use this to provide custom column,
            data source, theme etc.</param>
            <param name="isMultipleExport">Specifies multi-export is enabled.</param>
            <param name="pdfDoc">PDF document instance.</param>
            <param name="isBlob">Export as blob instead of writing response.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ExportToPdfAsync(Syncfusion.Blazor.Grids.PdfExportProperties,System.Nullable{System.Boolean},System.Object,System.Nullable{System.Boolean})">
            <summary>
            Export Grid data to PDF document.
            </summary>
            <param name="pdfExportProperties">Provides the pdf export properties. Use this to provide custom column,
            data source, theme etc.</param>
            <param name="isMultipleExport">Specifies multi-export is enabled.</param>
            <param name="pdfDoc">PDF document instance.</param>
            <param name="isBlob">Export as blob instead of writing response.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.Print">
            <summary>
            By default, prints all the pages of the Grid and hides the pager.
            You can customize print options using the <see cref="T:Syncfusion.Blazor.Grids.PrintMode"/>.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.PrintAsync">
            <summary>
            By default, prints all the pages of the Grid and hides the pager.
            You can customize print options using the <see cref="T:Syncfusion.Blazor.Grids.PrintMode"/>.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.RefreshColumns">
            <summary>
            Refreshes the Grid column changes.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.RefreshColumnsAsync">
            <summary>
            Refreshes the Grid column changes.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.RefreshHeader">
            <summary>
            Refreshes the Grid header.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.RefreshHeaderAsync">
            <summary>
            Refreshes the Grid header.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ReorderColumnByIndex(System.Double,System.Double)">
            <summary>
            Changes the Grid column positions by field index. If you invoke ReorderColumnByIndex multiple times,
            then you won't get the same results every time.
            </summary>
            <param name="fromIndex">Specifies the source index.</param>
            <param name="toIndex">Specifies the destination or drop index.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ReorderColumnByIndexAsync(System.Double,System.Double)">
            <summary>
            Changes the Grid column positions by field index. If you invoke ReorderColumnByIndex multiple times,
            then you won't get the same results every time.
            </summary>
            <param name="fromIndex">Specifies the source index.</param>
            <param name="toIndex">Specifies the destination or drop index.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ReorderColumnByTargetIndex(System.String,System.Double)">
            <summary>
            Changes the Grid column positions by field index. If you invoke ReorderColumnByTargetIndex multiple times,
            then you will get the same results every time.
            </summary>
            <param name="fieldName">Specifies the field name to be moved.</param>
            <param name="toIndex">Specifies the destination or drop index.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ReorderColumnByTargetIndexAsync(System.String,System.Double)">
            <summary>
            Changes the Grid column positions by field index. If you invoke ReorderColumnByTargetIndex multiple times,
            then you will get the same results every time.
            </summary>
            <param name="fieldName">Specifies the field name to be moved.</param>
            <param name="toIndex">Specifies the destination or drop index.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ReorderColumns(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Changes the Grid column positions by field names.
            </summary>
            <param name="fromFieldNames">Specifies the list of field names to be moved.</param>
            <param name="toFieldName">Specifies the field name of the destination location.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ReorderColumnsAsync(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Changes the Grid column positions by field names.
            </summary>
            <param name="fromFieldNames">Specifies the list of field names to be moved.</param>
            <param name="toFieldName">Specifies the field name of the destination location.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ReorderColumns(System.String[],System.String)">
            <summary>
            Changes the Grid column positions by field names.
            </summary>
            <param name="fromFieldNames">Specifies the list of field names to be moved.</param>
            <param name="toFieldName">Specifies the field name of the destination location.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ReorderColumnsAsync(System.String[],System.String)">
            <summary>
            Changes the Grid column positions by field names.
            </summary>
            <param name="fromFieldNames">Specifies the list of field names to be moved.</param>
            <param name="toFieldName">Specifies the field name of the destination location.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ReorderColumns(System.String,System.String)">
            <summary>
            Changes the Grid column positions by field names.
            </summary>
            <param name="fromFieldName">Specifies the field names to be moved.</param>
            <param name="toFieldName">Specifies the field name of the destination location.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ReorderColumnAsync(System.String,System.String)">
            <summary>
            Changes the Grid column positions by field names.
            </summary>
            <param name="fromFieldName">Specifies the field names to be moved.</param>
            <param name="toFieldName">Specifies the field name of the destination location.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ReorderRows(System.Double,System.Double)">
            <summary>
            Changes the Grid Row position with given indexes.
            </summary>
            <param name="fromIndex">Specifies the start row index.</param>
            <param name="toIndex">Specifies the to row index.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ReorderRowAsync(System.Double,System.Double)">
            <summary>
            Changes the Grid Row position with given indexes.
            </summary>
            <param name="fromIndex">Specifies the start row index.</param>
            <param name="toIndex">Specifies the to row index.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SaveCell">
            <summary>
            Saves the cell that is currently edited. It does not save the value to the DataSource.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SaveCellAsync">
            <summary>
            Saves the cell that is currently edited. It does not save the value to the DataSource.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SelectCell(System.ValueTuple{System.Int32,System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Selects a cell by the given index.
            </summary>
            <param name="cellIndex">Specifies the ValueTuple of row and cell index. Example: (0, 1).</param>
            <param name="isToggle">Toggles the selection.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SelectCellAsync(System.ValueTuple{System.Int32,System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Selects a cell by the given index.
            </summary>
            <param name="cellIndex">Specifies the ValueTuple of row and cell index. Example: (0, 1).</param>
            <param name="isToggle">Toggles the selection.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SelectCells(System.ValueTuple{System.Int32,System.Int32}[])">
            <summary>
            Selects a collection of cells by row and column indexes.
            </summary>
            <param name="rowCellIndexes">Specifies the array of ValueTuple of row and cell index.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SelectCellsAsync(System.ValueTuple{System.Int32,System.Int32}[])">
            <summary>
            Selects a collection of cells by row and column indexes.
            </summary>
            <param name="rowCellIndexes">Specifies the array of ValueTuple of row and cell index.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SelectCellsByRange(System.ValueTuple{System.Int32,System.Int32},System.Nullable{System.ValueTuple{System.Int32,System.Int32}})">
            <summary>
            Selects a range of cells from start and end indexes.
            </summary>
            <param name="endIndex">Specifies the value tuple of end row cell index.</param>
            <param name="startIndex">Specifies the value tuple of start index.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SelectCellsByRangeAsync(System.ValueTuple{System.Int32,System.Int32},System.Nullable{System.ValueTuple{System.Int32,System.Int32}})">
            <summary>
            Selects a range of cells from start and end indexes.
            </summary>
            <param name="endIndex">Specifies the value tuple of end row cell index.</param>
            <param name="startIndex">Specifies the value tuple of start index.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SelectRow(System.Double,System.Nullable{System.Boolean})">
            <summary>
            Selects a row by given index.
            </summary>
            <param name="index">Specifies the row index to select.</param>
            <param name="isToggle">Toggles the selection.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SelectRowAsync(System.Double,System.Nullable{System.Boolean})">
            <summary>
            Selects a row by given index.
            </summary>
            <param name="index">Specifies the row index to select.</param>
            <param name="isToggle">Toggles the selection.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SelectRows(System.Double[])">
            <summary>
            Selects a collection of rows by indexes.
            </summary>
            <param name="rowIndexes">Specifies the indexes of rows to be selected.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SelectRowsAsync(System.Double[])">
            <summary>
            Selects a collection of rows by indexes.
            </summary>
            <param name="rowIndexes">Specifies the indexes of rows to be selected.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SelectRowsByRange(System.Double,System.Nullable{System.Double})">
            <summary>
            Selects a range of rows from start and end row indexes.
            </summary>
            <param name="startIndex">Specifies the start row index.</param>
            <param name="endIndex">Specifies the end row index.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SelectRowsByRangeAsync(System.Double,System.Nullable{System.Double})">
            <summary>
            Selects a range of rows from start and end row indexes.
            </summary>
            <param name="startIndex">Specifies the start row index.</param>
            <param name="endIndex">Specifies the end row index.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SetCellValue(System.Object,System.String,System.Object)">
            <summary>
            Updates particular cell value based on the given primary key value.
            Primary key column must be specified using Columns.IsPrimaryKey property.
            </summary>
            <param name="field">Specifies the key field name.</param>
            <param name="key">Specifies the primary key value.</param>
            <param name="value">Specifies the new value.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SetCellValueAsync(System.Object,System.String,System.Object)">
            <summary>
            Updates particular cell value based on the given primary key value.
            Primary key column must be specified using Columns.IsPrimaryKey property.
            </summary>
            <param name="field">Specifies the key field name.</param>
            <param name="key">Specifies the primary key value.</param>
            <param name="value">Specifies the new value.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.UpdateBatchRow(`0)">
            <summary>
            Shows the Edited fields in the batch mode while editing.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.UpdateBatchRowAsync(`0)">
            <summary>
            Shows the Edited fields in the batch mode while editing.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SetRowData(System.Object,`0)">
            <summary>
            Updates and refresh the particular row values based on the given primary key value.
            Primary key column must be specified using Columns.IsPrimaryKey property.
            </summary>
            <param name="primaryKeyValue">Specifies the PrimaryKey value of dataSource.</param>
            <param name="rowData">To update new data for the particular row.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SetRowDataAsync(System.Object,`0)">
            <summary>
            Updates and refresh the particular row values based on the given primary key value.
            Primary key column must be specified using Columns.IsPrimaryKey property.
            </summary>
            <param name="primaryKeyValue">Specifies the PrimaryKey value of dataSource.</param>
            <param name="rowData">To update new data for the particular row.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SetRowDataAsync(System.Object,`0,System.Boolean)">
            <summary>
            Updates and refresh the particular row values based on the given primary key value.
            Primary key column must be specified using Columns.IsPrimaryKey property.
            </summary>
            <param name="primaryKeyValue">Specifies the PrimaryKey value of dataSource.</param>
            <param name="rowData">To update new data for the particular row.</param>
            <param name="preventDataUpdate">Prevent data source update and refresh UI alone.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ShowColumns(System.String[],System.String)">
            <summary>
            Shows one or more columns by its column name.
            </summary>
            <param name="columnNames">Specifies the column names.</param>
            <param name="showBy">Specifies the column getting criteria.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ShowColumnsAsync(System.String[],System.String)">
            <summary>
            Shows one or more columns by its column name.
            </summary>
            <param name="columnNames">Specifies the column names.</param>
            <param name="showBy">Specifies the column getting criteria.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ShowColumns(System.String,System.String)">
            <summary>
            Shows a columns b its column name.
            </summary>
            <param name="columnName">Specifies the column names.</param>
            <param name="showBy">Specifies the column getting criteria.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ShowColumnAsync(System.String,System.String)">
            <summary>
            Shows a columns by its column name.
            </summary>
            <param name="columnName">Specifies the column names.</param>
            <param name="showBy">Specifies the column getting criteria.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.Show(System.String[],System.String)">
            <summary>
            Shows one or more columns by its column name.
            </summary>
            <param name="columnNames">Specifies the column names.</param>
            <param name="showBy">Specifies the column getting criteria.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.HideColumns(System.String[],System.String)">
            <summary>
            Hides one or more columns by its column name.
            </summary>
            <param name="columnNames">Specifies the column names.</param>
            <param name="hideBy">Specifies the column getting criteria.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.HideColumnsAsync(System.String[],System.String)">
            <summary>
            Hides one or more columns by its column name.
            </summary>
            <param name="columnNames">Specifies the column names.</param>
            <param name="hideBy">Specifies the column getting criteria.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.HideColumns(System.String,System.String)">
            <summary>
            Hide a columns by its column name.
            </summary>
            <param name="columnName">Specifies the column names.</param>
            <param name="hideBy">Specifies the column getting criteria.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.HideColumnAsync(System.String,System.String)">
            <summary>
            Hide a columns by its column name.
            </summary>
            <param name="columnName">Specifies the column names.</param>
            <param name="hideBy">Specifies the column getting criteria.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.Hide(System.String[],System.String)">
            <summary>
            Hides one or more columns by its column name.
            </summary>
            <param name="columnNames">Specifies the column names.</param>
            <param name="hideBy">Specifies the column getting criteria.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ShowSpinner">
            <summary>
            By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ShowSpinnerAsync">
            <summary>
            By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SortColumn(System.String,Syncfusion.Blazor.Grids.SortDirection,System.Nullable{System.Boolean})">
            <summary>
            Sorts a column with the given options.
            </summary>
            <param name="columnName">Specifies the sort column name.</param>
            <param name="direction">Specifies the sort direction.</param>
            <param name="isMultiSort">Specifies whether its multi-sorting.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SortColumnAsync(System.String,Syncfusion.Blazor.Grids.SortDirection,System.Nullable{System.Boolean})">
            <summary>
            Sorts a column with the given options.
            </summary>
            <param name="columnName">Specifies the sort column name.</param>
            <param name="direction">Specifies the sort direction.</param>
            <param name="isMultiSort">Specifies whether its multi-sorting.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SortColumns(System.Collections.Generic.List{Syncfusion.Blazor.Grids.SortColumn},System.Boolean)">
            <summary>
            Clears previous Sorted Columns and Sorts a list of columns with the given options.
            </summary>
            <param name="columns">Specifies the columns to be sorted.</param>
            <param name="clearPreviousSort">Specifies whether to clear previous sort.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SortColumnsAsync(System.Collections.Generic.List{Syncfusion.Blazor.Grids.SortColumn},System.Boolean)">
            <summary>
            Clears previous Sorted Columns and Sorts a list of columns with the given options.
            </summary>
            <param name="columns">Specifies the columns to be sorted.</param>
            <param name="clearPreviousSort">Specifies whether to clear previous sort.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SortColumns(System.Collections.Generic.List{Syncfusion.Blazor.Grids.SortColumn})">
            <summary>
            Sorts a list of columns with the given options.
            </summary>
            <param name="columns">Specifies the columns to be sorted.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SortColumnsAsync(System.Collections.Generic.List{Syncfusion.Blazor.Grids.SortColumn})">
            <summary>
            Sorts a list of columns with the given options.
            </summary>
            <param name="columns">Specifies the columns to be sorted.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.StartEdit">
            <summary>
            Starts edit the selected row. At least one row must be selected before invoking this method.
            EditSettings.AllowEditing should be true.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.StartEditAsync">
            <summary>
            Starts edit the selected row. At least one row must be selected before invoking this method.
            EditSettings.AllowEditing should be true.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.UngroupColumn(System.String)">
            <summary>
            Ungroups a column by column name.
            </summary>
            <param name="columnName">Specifies the ungroup column name.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.UngroupColumnAsync(System.String)">
            <summary>
            Ungroups a column by column name.
            </summary>
            <param name="columnName">Specifies the ungroup column name.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.UpdateCell(System.Double,System.String,System.Object)">
            <summary>
            To update the specified cell by given value without changing into edited state.
            </summary>
            <param name="rowIndex">Specifies the row index.</param>
            <param name="value">Specifies the new value.</param>
            <param name="field">Specifies the column name.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.UpdateCellAsync(System.Double,System.String,System.Object)">
            <summary>
            To update the specified cell by given value without changing into edited state.
            </summary>
            <param name="rowIndex">Specifies the row index.</param>
            <param name="value">Specifies the new value.</param>
            <param name="field">Specifies the column name.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.UpdateExternalMessage(System.String)">
            <summary>
            Defines the text of external message.
            </summary>
            <param name="message">Specifies the externam message.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.UpdateExternalMessageAsync(System.String)">
            <summary>
            Defines the text of external message.
            </summary>
            <param name="message">Specifies the externam message.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.UpdateRow(System.Double,`0)">
            <summary>
            To update the specified row by given values without changing into edited state.
            </summary>
            <param name="data">Specifies the updated data.</param>
            <param name="index">Specifies the row index.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <remarks>The given updated data will replaces the target record completely.
            Property value comparison will not be performed to see changed values.</remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.UpdateRowAsync(System.Double,`0)">
            <summary>
            To update the specified row by given values without changing into edited state.
            </summary>
            <param name="data">Specifies the updated data.</param>
            <param name="index">Specifies the row index.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <remarks>The given updated data will replaces the target record completely.
            Property value comparison will not be performed to see changed values.</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.DetailExpandCollapseRow(`0)">
            <summary>
            Expands/Collapses specific detail row of the Grid.
            </summary>
            <param name="data">Sepcifies the row data by which its detail row will be expanded/collapsed.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <remarks>The given data will be compared against the <see cref="P:Syncfusion.Blazor.Grids.SfGrid`1.CurrentViewData"/> and
            the matched row will be expanded/collapsed. If input data and current view didn`t have same reference then
            use <see cref="M:Syncfusion.Blazor.Grids.SfGrid`1.DetailExpandCollapseRow(System.String,System.Object)"/> method.</remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ExpandCollapseDetailRowAsync(`0)">
            <summary>
            Expands/Collapses specific detail row of the Grid.
            </summary>
            <param name="data">Sepcifies the row data by which its detail row will be expanded/collapsed.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <remarks>The given data will be compared against the <see cref="P:Syncfusion.Blazor.Grids.SfGrid`1.CurrentViewData"/> and
            the matched row will be expanded/collapsed. If input data and current view didn`t have same reference then
            use <see cref="M:Syncfusion.Blazor.Grids.SfGrid`1.DetailExpandCollapseRow(System.String,System.Object)"/> method.</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.DetailExpandCollapseRow(System.String,System.Object)">
            <summary>
            Expands/Collapses specific detail row of the Grid.
            </summary>
            <param name="field">Sepcifies the field name.</param>
            <param name="value">Sepcifies the row data value by which its detail row will be expanded/collapsed.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ExpandCollapseDetailRowAsync(System.String,System.Object)">
            <summary>
            Expands/Collapses specific detail row of the Grid.
            </summary>
            <param name="field">Sepcifies the field name.</param>
            <param name="value">Sepcifies the row data value by which its detail row will be expanded/collapsed.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.DetailExpandAll">
            <summary>
            Expands all the detail rows of the Grid.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.ExpandAllDetailRowAsync">
            <summary>
            Expands all the detail rows of the Grid.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.DetailCollapseAll">
            <summary>
            Collapses all the detail rows of the Grid.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.CollapseAllDetailRowAsync">
            <summary>
            Collapses all the detail rows of the Grid.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.Search(System.String)">
            <summary>
            Searches Grid records using the given key.
            </summary>
            <param name="searchString">Specifies the search key.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <remarks>Passing empty key or null will clear the searching.</remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.SearchAsync(System.String)">
            <summary>
            Searches Grid records using the given key.
            </summary>
            <param name="searchString">Specifies the search key.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <remarks>Passing empty key or null will clear the searching.</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.Refresh">
            <summary>
            Refreshes the grid header and content.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfGrid`1.FocusAsync">
            <summary>
            Focuses the grid element.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfGrid`1.Syncfusion#Blazor#Grids#IGrid#GridTemplates">
            <summary>
            Specifies the grid templates.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.CellDOM">
            <summary>
            Handles cell and row customization.
            </summary>
            <remarks>
            An instance of this class is passed in QueryCellInfo and RowDataBound events as argument
            through which the conditional class and styles can be added to cell/row.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.CellDOM.AddClass(System.String[])">
            <summary>
            Add multiple class names to the specific cell.
            </summary>
            <param name="classList">List of class names.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.CellDOM.AddStyle(System.String[])">
            <summary>
            Add multiple style rules to the specific cell.
            </summary>
            <param name="styles">List of style rules.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.CellDOM.SetAttribute(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Add attributes to the given DOM element.
            </summary>
            <param name="attributes"> List of key and values to be added.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.CellDOM.AddItem(System.Collections.Generic.List{System.String},System.String[])">
            <summary>
            Add array of values to the list.
            </summary>
            <param name="AddTo">Source list to be added.</param>
            <param name="values">Array values to be added to the list. </param>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PagerTemplateContext">
            <summary>
            Defines the context of the pager template.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PagerTemplateContext.TotalPages">
            <summary>
            Gets the total pages.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PageChangedEventArgs">
            <summary>
            Defines the event argument of page changed event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PageChangedEventArgs.CurrentPage">
            <summary>
            Gets the current page.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PageChangedEventArgs.PreviousPage">
            <summary>
            Gets the previous page.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PagerDropDownChangedArgs">
            <summary>
            Defines the event argument of the pager dropdown change event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PagerDropDownChangedArgs.PageSize">
            <summary>
            Gets the page size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PagerDropDownChangedArgs.SelectedValue">
            <summary>
            Gets the selected value of the dropdown.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PagerDropDownChangedArgs.CurrentPage">
            <summary>
            Gets the current page.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Grids.PagerLocaleKeys">
            <summary>
            Handles the pager locale key.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumnChooserItem.Title">
            <summary>
            Specifies the label value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumnChooserItem.Column">
            <summary>
            Specifies the grid column
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumnChooserItem.IsSelectAll">
            <summary>
            Specifies that the checkbox is select all.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridColumnChooserItemGroup.Title">
            <summary>
            Gets or sets the group title for the checkbox collections. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.GridForeignColumn`1.ForeignDataSource">
            <summary>
            Defines the column data source  which will act as foreign data source.
            </summary>
            <remarks>List or any IEnumerable type value is accepted as foreign data source.
            For custom binding or using remote service as foreign data source use
            <see cref="T:Syncfusion.Blazor.Grids.GridForeignColumn`1"/> component and configure data source using
            <see cref="T:Syncfusion.Blazor.Data.SfDataManager"/>.</remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.GridForeignColumn`1.GetForeignData">
            <summary>
            Get Foreign Data
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PagerEvents.Parent">
            <summary>
            Gets the parent component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PagerEvents.Click">
            <summary>
            Triggers when click on the numeric items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PagerEvents.Created">
            <summary>
            Triggers when Pager is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.PagerEvents.DropDownChanged">
            <summary>
            Triggers after pageSize is selected in DropDownList.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfPager.CurrentPage">
            <summary>
            Defines the current page number of pager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfPager.CustomText">
            <summary>
            Defines the customized text to append with numeric items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfPager.EnableExternalMessage">
            <summary>
            If EnableExternalMessage set to true, then it adds the message to Pager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfPager.EnablePagerMessage">
            <summary>
            If EnablePagerMessage set to true, then it adds the pager information.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfPager.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfPager.EnableQueryString">
            <summary>
            If EnableQueryString set to true,
            then it pass current page information as a query string along with the URL while navigating to other page.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfPager.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfPager.ExternalMessage">
            <summary>
            Defines the external message of Pager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfPager.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfPager.PageCount">
            <summary>
            Defines the number of pages to display in pager container.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfPager.PageSize">
            <summary>
            Defines the records count of visible page.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfPager.PageSizes">
            <summary>
            If PageSizes set to true or list of values,
            It renders DropDownList in the pager which allow us to select page size from DropDownList.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfPager.Template">
            <summary>
             Defines the template which renders customized elements in pager instead of default elements.
            </summary>
            <remarks>
            The parameters passed to the templates can be accessed using implicit parameter named <c>context</c>.
            The context is of type <see cref="T:Syncfusion.Blazor.Grids.PagerTemplateContext"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfPager.TotalRecordsCount">
            <summary>
            Gets or Sets the total records count which is used to render numeric container.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Grids.SfPager.TotalPages">
            <summary>
            Gets or Sets the total records count which is used to render numeric container.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfPager.GetLocalizedLabel(System.String)">
            <summary>
            Gets the localized label by locale keyword.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Grids.SfPager.GoToPage(System.Double)">
            <summary>
            Navigate to target page by given number.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.FloatLabelType">
            <summary>
            Defines floating label type of the input and decides how the label should float on the input.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.FloatLabelType.Never">
            <summary>
            The placeholder text should not be float ever.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.FloatLabelType.Always">
            <summary>
            The placeholder text floats above the input always.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.FloatLabelType.Auto">
            <summary>
            The placeholder text floats above the input while focusing or enter a value in input.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.AutoComplete">
            <summary>
            Specifies whether the browser is allow to automatically enter or select a value for the textbox.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.AutoComplete.On">
            <summary>
            Specifies that autocomplete is enabled.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.AutoComplete.Off">
            <summary>
            Specifies that autocomplete is disabled.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.InputType">
            <summary>
            Define the attribute specifies the type of textbox.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.InputType.Text">
            <summary>
            The text field is a single-line text.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.InputType.Email">
            <summary>
            Set an e-mail type to TextBox component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.InputType.Password">
            <summary>
            Set the password type to TextBox component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.InputType.Number">
            <summary>
            Set the number type to TextBox component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.InputType.Search">
            <summary>
            Set the search type to TextBox component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.InputType.Tel">
            <summary>
            Set the tel type to TextBox component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.InputType.URL">
            <summary>
            Set the URL type to TextBox component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Internal.SfInputBase">
            <summary>
            The SfInputBase is an input element that allows to get input from the user. It allows the user to edit or display the text value.
            </summary>
            <summary>
            The SfInputBase is an input element that allows to get input from the user. It allows the user to edit or display the text value.
            </summary>
            <summary>
            The SfInputBase is an input element that allows to get input from the user. It allows the user to edit or display the text value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnChange">
            <summary>
            Triggers when the content of input has changed and gets focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnInput">
            <summary>
            Triggers each time when the value of input has changed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnPaste">
            <summary>
            Triggers when the content is paste into an input.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnBlur">
            <summary>
            Triggers when the input has focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnFocus">
            <summary>
            Triggers when the input gets focus.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.BindClearBtnEvents">
            <summary>
            Triggers when the clear gets clicked.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.BindClearBtnTouchEvents">
            <summary>
            Triggers when the clear icon gets touch.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.MouseDownOnSpinner">
            <summary>
            Triggers when the spin down gets click.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.TouchDownOnSpinner">
            <summary>
            Triggers when the spin down icon gets touch.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.MouseUpOnSpinner">
            <summary>
            Triggers when the spin up gets clicked.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.TouchUpOnSpinner">
            <summary>
            Triggers when the spin up icon gets touch.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.MouseIconHandler">
            <summary>
            Triggers when the icon gets click.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.TouchIconHandler">
            <summary>
            Triggers when the icon get touch.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.MouseContainerHandler">
            <summary>
            Triggers when the container gets click.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnContainerBlur">
            <summary>
            Triggers when the container gets focus out.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnContainerFocus">
            <summary>
            Triggers when the container gets focused.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ContainerKeypress">
            <summary>
            Triggers when the container key pressed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ID">
            <summary>
            Specifies the id of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ValueExpression">
            <summary>
            Specifies the expression for defining the value of the bound.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.InputEditContext">
            <summary>
            Specifies the edit context of the Input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Autocomplete">
            <summary>
            Specifies whether the browser is allowed to automatically enter or select a value for the TextBox.
            <para>By default, autocomplete is enabled for TextBox.</para>
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>On</term>
            <description>Specifies that autocomplete is enabled</description>
            </item>
            <item>
            <term>Off</term>
            <description>Specifies that autocomplete is disabled.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the TextBox. One or more custom CSS classes can be added to a TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.EnablePersistence">
            <summary>
            Enable or disable the persisting TextBox state between page reloads. If enabled, the `Value` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the TextBox allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the TextBox that the placeholder text floats above the TextBox based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the TextBox when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the TextBox.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the TextBox after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the root element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            If you configured both property and equivalent input attribute, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Locale">
            <summary>
            Specifies the global culture and localization of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Multiline">
            <summary>
            Specifies a boolean value that enables or disables the multiline on the TextBox.
            The TextBox changes from a single line to multiline when enabling this multiline mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Placeholder">
            <summary>
            Specifies the boolean value whether the TextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Readonly">
            <summary>
            Specifies the boolean value whether the TextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.IsReadOnlyInput">
            <summary>
            Specifies the boolean value for dropdownlist default readonly property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ShowClearButton">
            <summary>
            Specifies a boolean value that indicates whether the clear button is displayed in TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Type">
            <summary>
            Specifies the behavior of the TextBox such as text, password, email, and more.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Value">
            <summary>
            Sets the content of the TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ValueChanged">
            <summary>
            Specifies the callback to trigger when the value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Width">
            <summary>
            Specifies the width of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.TabIndex">
            <summary>
            Specifies the tab order of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ContainerAttr">
            <summary>
            Specifies the container attrubute of Input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Buttons">
            <summary>
            Specifies the icon of the TextBox component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.PrependButtons">
            <summary>
            Specifies the prepend icon of the TextBox component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.SpinButton">
            <summary>
            Specifies a boolean value that enable or disable the spin button on the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ContainerClass">
            <summary>
            Specifies the class value that is appended to container of TextBox.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ValueTemplate">
            <summary>
            Accepts the template design and assigns it to the selected list item in the input element of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.IsValueTemplate">
            <summary>
            Specifies a boolean value that indicates whether the value template is displayed in TextBox.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.RootClass">
            <summary>
            Gets or Set the component class to element.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.ClickStopPropagation">
            <summary>
            Specifies the prevents the click actions.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.MouseDowSpinnerPrevent">
            <summary>
            Specifies the prevents the mouse actions.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.PreventIconHandler">
            <summary>
            Specifies the prevents the icon actions.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.MousePreventContainer">
            <summary>
            Specifies the prevents the container actions.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.IsShowSpinnerOnClear">
            <summary>
            Specifies the spinner show on clear icon.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.IsShowSpinnerOnIcon">
            <summary>
            Specifies the spinner show on dropdown icon.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.SfInputBase.Parent">
            <exclude/>
            <summary>
            Gets or sets the Parent.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnParametersSetAsync">
            <summary>
            Triggers when dynamically changing the component property.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.SfInputBase.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Triggers after the component get rendered.
            </summary>
            <param name="firstRender">True if the component rendered for the first time.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.SfInputBase.SetReadOnly">
            <summary>
            The setReadOnly.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.SfInputBase.CreateFloatingLabel">
            <summary>
            The createFloatingLabel.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.SfInputBase.SetEnabled">
            <summary>
            The setEnabled.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.SfInputBase.BlurHandler">
            <summary>
            triggers while the component get focused out.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.SfInputBase.UpdateParentClass(System.String,System.String)">
            <summary>
            Update the parent component class to the element.
            </summary>
            <param name="rootClass">The rootClass<see cref="T:System.String"/>.</param>
            <param name="containerClass">The containerClass<see cref="T:System.String"/>.</param>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Internal.IInputBase">
            <summary>
            Common properties for input base component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.IInputBase.OnInput">
            <summary>
            Triggers each time when the value of input has changed.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.IInputBase.UpdateParentClass(System.String,System.String)">
            <summary>
            Update the parent component root class and container element class.
            </summary>
            <param name="rootClass">Specifies the root class of the InputBase.</param>
            <param name="containerClass">Specifies the container class of the InputBase.</param>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Internal.IconHandlerArgs">
            <summary>
            Specifies the icon handler arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.IconHandlerArgs.eventArgs">
            <summary>
            Specifies the <see cref="T:System.EventArgs"/> arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.IconHandlerArgs.IconName">
            <summary>
            Specifies the name of the icon.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.UploaderStreamReader.#ctor(Syncfusion.Blazor.Inputs.SfUploader)">
            <summary>
            Constructor for initializing the component adaptor.
            </summary>
            <param name="parent">Uploader arguments.</param>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.UploaderStreamReader.UploaderFileStream.Position">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Internal.UploaderStreamReader.UploadData">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.UploadFileList.UploaderFileInterop">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.UploadReadFile.GetFileReader">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Internal.IUploadReadFile">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.IUploadReadFile.GetFileReader">
            <summary>
            Opens a stream to read the file.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Internal.IUploadFileList">
            <summary>
            Specifies the interface for upload file list.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Internal.IUploadFileList.FileListData(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Register for drop events on the source element.
            </summary>
            <param name="ele">Specifies the element reference.</param>
            <returns>Task.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Internal.UploadFileDetails">
            <summary>
            Specifies the upload file status.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.UploadFileDetails.chunksize">
            <summary>
            Specifies the chunk size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Internal.UploadFileDetails.totalChunksize">
            <summary>
            Specifies the total chunk size.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SfColorPicker">
            <summary>
            ColorPicker component is a user interface to select and adjust color values.
            It provides supports for various color specification like Red Green Blue, Hue Saturation Value and Hex codes.
            </summary>
            <summary>
            ColorPicker component is a user interface to select and adjust color values.
            It provides supports for various color specification like Red Green Blue, Hue Saturation Value and Hex codes.
            </summary>
            <summary>
            ColorPicker component is a user interface to select and adjust color values.
            It provides supports for various color specification like Red Green Blue, Hue Saturation Value and Hex codes.
            </summary>
            <summary>
            ColorPicker component is a user interface to select and adjust color values.
            It provides supports for various color specification like Red Green Blue, Hue Saturation Value and Hex codes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ID">
            <summary>
            Sets ID attribute for color picker element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ChildContent">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as id, title etc., to the dropdown button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Columns">
            <summary>
            It is used to render the ColorPicker palette with specified columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.CssClass">
            <summary>
            This property sets the CSS classes to root element of the ColorPicker
             which helps to customize the UI styles.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Disabled">
            <summary>
            It is used to enable / disable ColorPicker component. If it is disabled the ColorPicker popup won’t open.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.EnableOpacity">
            <summary>
            It is used to enable / disable the opacity option of ColorPicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.EnablePersistence">
            <summary>
            To enable or disable persisting component's state between page reloads and it is extended from component class.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Inline">
            <summary>
            It is used to render the ColorPicker component as inline.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Mode">
            <summary>
            It is used to render the ColorPicker with the specified mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ModeSwitcher">
            <summary>
            It is used to show / hide the mode switcher button of ColorPicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.NoColor">
            <summary>
            It is used to enable / disable the no color option of ColorPicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.PresetColors">
            <summary>
            It is used to load custom colors to palette.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ShowButtons">
            <summary>
            It is used to show / hide the control buttons (apply / cancel) of  ColorPicker component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Value">
            <summary>
            It is used to set the color value for ColorPicker. It should be specified as Hex code.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ValueChanged">
            <summary>
            Specifies the callback to trigger when the value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ValueExpression">
            <summary>
            Specifies the expression for defining the value of the bound.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.OnOpen">
            <summary>
            Triggers before opening the ColorPicker popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Opened">
            <summary>
            Triggers while opening the ColorPicker popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.OnClose">
            <summary>
            Triggers before closing the ColorPicker popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.OnModeSwitch">
            <summary>
            Triggers before Switching between ColorPicker mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ModeSwitched">
            <summary>
            Triggers after the ColorPicker mode is switched.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.OnTileRender">
            <summary>
            Triggers while rendering each palette tile.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ValueChange">
            <summary>
            Triggers while changing the colors. It will be triggered based on the showButtons property.
            If the property is false, the event will be triggered while selecting the colors.
            If the property is true, the event will be triggered while apply the selected color.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Selected">
            <summary>
            Triggers while selecting the color in picker / palette, when ShowButtons property is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.Created">
            <summary>
            Triggers once the component rendering is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfColorPicker.ColorPickerParent">
            <summary>
            Parent component of ColorPicker.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfColorPicker.GetValue(System.String,Syncfusion.Blazor.Inputs.ColorValueType)">
            <summary>
            To get color value in specified type.
            </summary>
            <param name = "value">Specify the color value.</param>
            <param name = "type">Specify the type to which the specified color needs to be converted.</param>
            <returns>Returns the color value in specified type.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfColorPicker.Toggle">
            <summary>
             To show/hide ColorPicker popup based on current state of the SplitButton.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfColorPicker.FocusIn">
            <summary>
            Sets the focus to Colorpicker.
            its native method.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfColorPicker.FocusAsync">
            <summary>
            Sets the focus to Colorpicker.
            its native method.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfColorPicker.SetOffset(Syncfusion.Blazor.Inputs.Offset)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfColorPicker.Click(System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfColorPicker.Close">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ColorPickerMode">
            <summary>
            ColorPicker Mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorPickerMode.Picker">
            <summary>
            To set the color picker mode as picker.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorPickerMode.Palette">
            <summary>
            To set the color picker mode as palette.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ColorValueType">
            <summary>
            Color value types.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorValueType.Hex">
            <summary>
            Specifies the hex code value without opacity.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorValueType.Hexa">
            <summary>
            Specifies the hex code value with opacity.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorValueType.Rgb">
            <summary>
            Specifies the red green blue value without opacity.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorValueType.Rgba">
            <summary>
            Specifies the red green blue value with opacity.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorValueType.Hsv">
            <summary>
            Specifies the hue saturation value without opacity.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorValueType.Hsva">
            <summary>
            Specifies the hue saturation value with opacity.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.ColorValueType.Opacity">
            <summary>
            Specifies the opacity value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.BeforeOpenCloseEventArgs">
            <summary>
            Interface for before open / close event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeOpenCloseEventArgs.Cancel">
            <summary>
            Used to prevent color picker popup open.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeOpenCloseEventArgs.Element">
            <summary>
            Specifies the color picker popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeOpenCloseEventArgs.Event">
            <summary>
            Specifies the Event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeOpenCloseEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ColorPickerEventArgs">
            <summary>
            Interface for change / select event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorPickerEventArgs.CurrentValue">
            <summary>
            Specifies the current color value details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorPickerEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorPickerEventArgs.PreviousValue">
            <summary>
            Specifies the previous color value details.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ColorPickerValue">
            <summary>
            Interface for Color picker values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorPickerValue.Hex">
            <summary>
            Specifies the color value as HEX format without opacity.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorPickerValue.Rgba">
            <summary>
            Specifies the color value as RGBA format.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ModeSwitchEventArgs">
            <summary>
            Interface for mode switching event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ModeSwitchEventArgs.Element">
            <summary>
            Specifies the mode switcher element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ModeSwitchEventArgs.Mode">
            <summary>
            Specifies the color picker mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ModeSwitchEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.OpenEventArgs">
            <summary>
            Interface for open event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.OpenEventArgs.Element">
            <summary>
            Specifies the color picker popup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.OpenEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.PaletteTileEventArgs">
            <summary>
            Interface for before change event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PaletteTileEventArgs.Element">
            <summary>
            Specifies the palette tile element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PaletteTileEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PaletteTileEventArgs.PresetName">
            <summary>
            Specifies key name of the custom preset colors.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PaletteTileEventArgs.Value">
            <summary>
            Specifies the color value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Offset">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SfInputTextBase`1">
            <summary>
            The SfInputBase is an input element that allows to get input from the user. It allows the user to edit or display the text value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.OnChange">
            <summary>
            Triggers when the content of input has changed and gets focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.OnInput">
            <summary>
            Triggers each time when the value of input has changed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.OnPaste">
            <summary>
            Triggers when the content is paste into an input.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.OnBlur">
            <summary>
            Triggers when the input has focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.OnFocus">
            <summary>
            Triggers when the input gets focus.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.ID">
            <summary>
            Specifies the id of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.Value">
            <summary>
            Sets the content of the TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.ValueChanged">
            <summary>
            Specifies the callback to trigger when the value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.ValueExpression">
            <summary>
            Specifies the expression for defining the value of the bound.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.InputEditContext">
            <summary>
            Specifies the edit context of the Input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the TextBox. One or more custom CSS classes can be added to a TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.EnablePersistence">
            <summary>
            Enable or disable the persisting TextBox state between page reloads. If enabled, the `Value` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the TextBox allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.BaseFloatLabelType">
            <summary>
            Specifies the floating label behavior of the TextBox that the placeholder text floats above the TextBox based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the TextBox when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the TextBox.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the TextBox after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.Locale">
            <summary>
            Specifies the global culture and localization of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.ValidateOnInput">
            <summary>
            Specifies a boolean value that indicates whether the component validates the input or not.
            </summary>
            <value>
            <c>true</c>, If the ValidateOnInput is enabled for form validation, then the model value will be updated on entering the value to the input. otherwise, <b>false</b>.The default value is <c>false</c>.
            </value>
            <remarks>
            This property is used to validate the form on typing into the input and updating the model value. The ValueChange event will be fired after the component lost its focus.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.ContainerAttr">
            <summary>
            Specifies the container attrubute of Input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.SpinButton">
            <summary>
            Specifies a boolean value that enable or disable the spin button on the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.ValueTemplate">
            <summary>
            Accepts the template design and assigns it to the selected list item in the input element of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.IsValueTemplate">
            <summary>
            Specifies a boolean value that indicates whether the value template is displayed in TextBox.
            </summary>
            <exclude/> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.ClickStopPropagation">
            <summary>
            Specifies the prevents the click actions.
            </summary>
            <exclude/> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.MouseDowSpinnerPrevent">
            <summary>
            Specifies the prevents the mouse actions.
            </summary>
            <exclude/> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.PreventIconHandler">
            <summary>
            Specifies the prevents the icon actions.
            </summary>
            <exclude/> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.MousePreventContainer">
            <summary>
            Specifies the prevents the container actions.
            </summary>
            <exclude/> 
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.ContainerClass">
            <summary>
            Specifies the class value that is appended to container of TextBox.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfInputTextBase`1.RootClass">
            <summary>
            Gets or Set the component class to element.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfInputTextBase`1.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfInputTextBase`1.OnParametersSetAsync">
            <summary>
            Triggers when dynamically changing the component property.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfInputTextBase`1.SetReadOnly">
            <summary>
            The setReadOnly.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfInputTextBase`1.CreateFloatingLabel">
            <summary>
            The createFloatingLabel.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfInputTextBase`1.SetEnabled">
            <summary>
            The setEnabled.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfInputTextBase`1.BlurHandler">
            <summary>
            triggers while the component get focused out.
            </summary>
            <returns>Task.</returns>
            <exclude />
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.FormEventArgs">
            <summary>
            SPecifies the form event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FormEventArgs.Element">
            <summary>
            Returns the input element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FormEventArgs.ErrorElement">
            <summary>
            Returns the error element for corresponding input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FormEventArgs.InputName">
            <summary>
            Returns the name of the input element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FormEventArgs.Message">
            <summary>
            Returns the error message.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FormEventArgs.Status">
            <summary>
            Returns the status input element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.BlurEventArgs">
            <summary>
            Defines the argument for the blur event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BlurEventArgs.Model">
            <summary>
            returns the model class.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.FocusEventArgs">
            <summary>
            Defines the argument for the focus event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FocusEventArgs.Model">
            <summary>
            returns the model class.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.IInput">
            <summary>
            Default required properties for input components.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.IInput.Change">
            <summary>
             Sets the change event mapping function to input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.IInput.CssClass">
            <summary>
             Sets the css class value to input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.IInput.EnableRtl">
            <summary>
             Sets the enable rtl value to input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.IInput.Enabled">
            <summary>
             Sets the enabled value to input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.IInput.FloatLabelType">
            <summary>
            Specifies how the floating label works.
            Possible values are:
             Never - Never float the label in the input when the placeholder is available.
             Always - The floating label will always float above the input.
             Auto - The floating label will float above the input after focusing or entering a value in the input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.IInput.Placeholder">
            <summary>
             Sets the placeholder value to input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.IInput.Readonly">
            <summary>
             Sets the readonly value to input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.IInput.ShowClearButton">
            <summary>
             Specifies whether to display the Clear button in the input.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ActionCompleteEventArgs">
            <summary>
            Defines the argument for the ActionComplete event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ActionCompleteEventArgs.FileData">
            <summary>
            Return the selected file details.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.BeforeRemoveEventArgs">
            <summary>
            Defines the argument for the BeforeRemove event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeRemoveEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeRemoveEventArgs.CurrentRequest">
            <summary>
            Returns the XMLHttpRequest instance that is associated with remove action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeRemoveEventArgs.FilesData">
            <summary>
            Returns the list of files details that will be removed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeRemoveEventArgs.CustomFormData">
            <summary>
            Defines the additional data with key and value pair format that will be submitted to the remove action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeRemoveEventArgs.PostRawFile">
            <summary>
            Defines whether the selected raw file send to server remove action.
            Set true to send raw file.
            Set false to send file name only.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.BeforeUploadEventArgs">
            <summary>
            Defines the argument for the BeforeUpload event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeUploadEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeUploadEventArgs.CurrentRequest">
            <summary>
            Returns the XMLHttpRequest instance that is associated with upload action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeUploadEventArgs.FilesData">
            <summary>
            Returns the list of uploading files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.BeforeUploadEventArgs.CustomFormData">
            <summary>
            Defines the additional data in key and value pair format that will be submitted to the upload action.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.CancelEventArgs">
            <summary>
            Defines the argument for the Cancel event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.CancelEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.CancelEventArgs.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.CancelEventArgs.FileData">
            <summary>
            Returns the file details that will be canceled.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ClearingEventArgs">
            <summary>
            Defines the argument for the Clearing event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ClearingEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ClearingEventArgs.FilesData">
            <summary>
            Returns the list of files that will be cleared from the FileList.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.FailureEventArgs">
            <summary>
            Defines the argument for the Failure event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.ChunkIndex">
            <summary>
            Returns the upload chunk index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.ChunkSize">
            <summary>
            Returns the upload chunk size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.E">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.File">
            <summary>
            Returns the details about upload file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.RetryFiles">
            <summary>
             Defines the files for retry the upload files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.Operation">
            <summary>
            Returns the upload event operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.Response">
            <summary>
            Returns the upload event operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.StatusText">
            <summary>
            Returns the upload status.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FailureEventArgs.TotalChunk">
            <summary>
            Returns the total chunk size.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.FileInfo">
            <summary>
            Defines the argument for the FileInfo.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.FileSource">
            <summary>
            Returns where the file selected from, to upload.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.Id">
            <summary>
            Returns the unique upload file name ID.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.Input">
            <summary>
            Returns the input element mapped with file list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.List">
            <summary>
            Returns the respective file list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.Name">
            <summary>
            Returns the upload file name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.RawFile">
            <summary>
            Returns the details about upload file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.Size">
            <summary>
            Returns the size of file in bytes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.Status">
            <summary>
            Returns the status of the file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.StatusCode">
            <summary>
            Returns the current state of the file such as Failed, Canceled, Selected, Uploaded, or Uploading.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.Type">
            <summary>
            Returns the MIME type of file as a string. Returns empty string if the file’s type is not determined.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.MimeContentType">
            <summary>
            Returns the mime content type of file as a string.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.LastModifiedDate">
            <summary>
            Returns the last modified date of the uploading file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileInfo.ValidationMessages">
            <summary>
            Returns the list of validation errors (if any).
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.FileListRenderingEventArgs">
            <summary>
            Defines the argument for the FileListRender event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileListRenderingEventArgs.Element">
            <summary>
            Return the current file item element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileListRenderingEventArgs.FileInfo">
            <summary>
            Return the current rendering file item data as File object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileListRenderingEventArgs.Index">
            <summary>
            Return the index of the file item in the file list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FileListRenderingEventArgs.IsPreload">
            <summary>
            Return whether the file is preloaded.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.PauseResumeEventArgs">
            <summary>
            Defines the argument for the PauseResume event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PauseResumeEventArgs.ChunkCount">
            <summary>
            Returns the total number of chunks.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PauseResumeEventArgs.ChunkIndex">
            <summary>
            Returns the index of chunk that is Paused or Resumed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PauseResumeEventArgs.ChunkSize">
            <summary>
            Returns the chunk size value in bytes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PauseResumeEventArgs.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.PauseResumeEventArgs.File">
            <summary>
            Returns the file data that is Paused or Resumed.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ProgressEventArgs">
            <summary>
            Defines the argument for the Progress event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ProgressEventArgs.E">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ProgressEventArgs.LengthComputable">
            <summary>
            Returns the file progress is computable or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ProgressEventArgs.Loaded">
            <summary>
            Returns the progressed the uploading file size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ProgressEventArgs.Total">
            <summary>
            Returns the total size of the uploading file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ProgressEventArgs.File">
            <summary>
            Returns the details about upload file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ProgressEventArgs.Stream">
            <summary>
            Return the file stream of loaded file content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ProgressEventArgs.Operation">
            <summary>
            Returns the upload event operation.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.RemovingEventArgs">
            <summary>
            Defines the argument for the Removing event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RemovingEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RemovingEventArgs.CurrentRequest">
            <summary>
            Returns the XMLHttpRequest instance that is associated with remove action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RemovingEventArgs.CustomFormData">
            <summary>
            Defines the additional data with key and value pair format that will be submitted to the remove action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RemovingEventArgs.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RemovingEventArgs.FilesData">
            <summary>
            Returns the list of files’ details that will be removed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RemovingEventArgs.PostRawFile">
            <summary>
            Defines whether the selected raw file send to server remove action.
            Set true to send raw file.
            Set false to send file name only.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.RenderingEventArgs">
            <summary>
            Defines the argument for the Rendering event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RenderingEventArgs.Element">
            <summary>
            Return the current file item element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RenderingEventArgs.FileInfo">
            <summary>
            Return the current rendering file item data as File object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RenderingEventArgs.Index">
            <summary>
            Return the index of the file item in the file list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.RenderingEventArgs.IsPreload">
            <summary>
            Return whether the file is preloaded.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ResponseEventArgs">
            <summary>
            Defines the argument for the Response event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ResponseEventArgs.Headers">
            <summary>
            Returns the current response header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ResponseEventArgs.ReadyState">
            <summary>
            Returns the current response readyState.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ResponseEventArgs.StatusCode">
            <summary>
            Returns the current response statusCode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ResponseEventArgs.StatusText">
            <summary>
            Returns the current response statusText.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ResponseEventArgs.WithCredentials">
            <summary>
            Returns the current response withCredentials.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SelectedEventArgs">
            <summary>
            Defines the argument for the Selected event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.CurrentRequest">
            <summary>
            Set the current request header to the XMLHttpRequest instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.CustomFormData">
            <summary>
            Defines the additional data in key and value pair format that will be submitted to the upload action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.FilesData">
            <summary>
            Returns the list of selected files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.IsCanceled">
            <summary>
            Specifies whether the file selection has been canceled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.IsModified">
            <summary>
            Determines whether the file list generates based on the modified data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.ModifiedFilesData">
            <summary>
            Specifies the modified files data to generate the file items. The argument depends on `isModified` argument.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.ProgressInterval">
            <summary>
            Specifies the step value to the progress bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SelectedEventArgs.Type">
            <summary>
            Returns the original event argument type.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SuccessEventArgs">
            <summary>
            Defines the argument for the Success event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.ChunkIndex">
            <summary>
            Returns the upload chunk index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.ChunkSize">
            <summary>
            Returns the upload chunk size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.E">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.File">
            <summary>
            Returns the details about upload file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.Operation">
            <summary>
            Returns the upload event operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.Response">
            <summary>
            Returns the upload event operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.StatusText">
            <summary>
            Returns the upload status.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SuccessEventArgs.TotalChunk">
            <summary>
            Returns the total chunk size.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploadFiles">
            <summary>
            Defines the argument for the UploadFiles.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploadFiles.Stream">
            <summary>
            Return the selected file stream.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploadFiles.FileInfo">
            <summary>
            Return the selected file details.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploadChangeEventArgs">
            <summary>
            Defines the argument for the UploadChangeEventArgs event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploadChangeEventArgs.Files">
            <summary>
            Returns the list of files that will be cleared from the FileList.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploadingEventArgs">
            <summary>
            Defines the argument for the UploadingEventArgs event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploadingEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploadingEventArgs.ChunkSize">
            <summary>
            Returns the chunk size in bytes if the chunk upload is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploadingEventArgs.CurrentChunkIndex">
            <summary>
            Returns the index of current chunk if the chunk upload is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploadingEventArgs.FileData">
            <summary>
            Returns the list of files that will be uploaded.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ValidationMessages">
            <summary>
            Defines the argument for the ValidationMessages.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ValidationMessages.MaxSize">
            <summary>
            Returns the maximum file size validation message, if selected file size is less than specified maxFileSize property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ValidationMessages.MinSize">
            <summary>
            Returns the minimum file size validation message, if selected file size is less than specified minFileSize property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.AsyncSettingsModel">
            <summary>
            Interface for a class AsyncSettings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.AsyncSettingsModel.ChunkSize">
            <summary>
            Specifies the chunk size to split the large file into chunks, and upload it to the server in a sequential order.
            <para>If the ChunkSize property has value, the Uploader enables the chunk upload by default.</para>
            <para>It must be specified in bytes value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.AsyncSettingsModel.RemoveUrl">
            <summary>
            Specifies the URL of remove action that receives the file information and handle the remove operation in server.
            <para>The remove action type must be POST request and define "RemoveFileNames" attribute to get file information that will be removed.</para>
            <para>This property is optional.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.AsyncSettingsModel.RetryAfterDelay">
            <summary>
            Specifies the delay time in milliseconds that the automatic retry happens after the delay.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.AsyncSettingsModel.RetryCount">
            <summary>
            Specifies the number of retries that the Uploader can perform on the file failed to upload.
            By default, the Uploader set 3 as maximum retries. This property must be specified to prevent infinity looping.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.AsyncSettingsModel.SaveUrl">
            <summary>
            Specifies the URL of save action that will receive the upload files and save in the server.
            <para>The save action type must be POST request and define the argument as same input name used to render the component.</para>
            <para>The upload operations could not perform without this property.</para>
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ButtonsPropsModel">
            <summary>
            Interface for a class ButtonsProps.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ButtonsPropsModel.Browse">
            <summary>
            Specifies the text or html content to browse button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ButtonsPropsModel.Clear">
            <summary>
            Specifies the text or html content to clear button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ButtonsPropsModel.Upload">
            <summary>
            Specifies the text or html content to upload button.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.FilesPropModel">
            <summary>
            Interface for a class FilesProp.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FilesPropModel.Name">
            <summary>
            Specifies the name of the file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FilesPropModel.Size">
            <summary>
            Specifies the size of the file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FilesPropModel.Type">
            <summary>
            Specifies the type of the file.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploaderModel">
            <summary>
            Interface for a class Uploader.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.ActionComplete">
            <summary>
            Triggers after all the selected files has processed to upload successfully or failed to server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.BeforeRemove">
            <summary>
            Triggers on remove the uploaded file. The event used to get confirm before remove the file from server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.BeforeUpload">
            <summary>
            Triggers when the upload process before. This event is used to add additional parameter with upload request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Canceling">
            <summary>
            Fires if cancel the chunk file uploading.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Change">
            <summary>
            Triggers when changes occur in uploaded file list by selecting or dropping files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.ChunkFailure">
            <summary>
            Fires if the chunk file failed to upload.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.ChunkSuccess">
            <summary>
            Fires when the chunk file uploaded successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.ChunkUploading">
            <summary>
            Fires when every chunk upload process gets started. This event is used to add additional parameter with upload request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Clearing">
            <summary>
            Triggers before clearing the items in file list when clicking "clear".
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Created">
            <summary>
            Triggers when the Uploader is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Failure">
            <summary>
            Triggers when the AJAX request fails on uploading or removing files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.FileListRendering">
            <summary>
            Triggers before rendering each file item from the file list in a page.
            It helps to customize specific file item structure.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Pausing">
            <summary>
            Fires if pause the chunk file uploading.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Progress">
            <summary>
            Triggers when uploading a file to the server using the AJAX request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Removing">
            <summary>
            Triggers on removing the uploaded file. The event used to get confirm before removing the file from server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Rendering">
            <summary>
            DEPRECATED-Triggers before rendering each file item from the file list in a page.
            It helps to customize specific file item structure.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Resuming">
            <summary>
            Fires if resume the paused chunk file upload.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Selected">
            <summary>
            Triggers after selecting or dropping the files by adding the files in upload queue.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Success">
            <summary>
            Triggers when the AJAX request gets success on uploading files or removing files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Uploading">
            <summary>
            Triggers when the upload process gets started. This event is used to add additional parameter with upload request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.AllowedExtensions">
            <summary>
            Specifies the extensions of the file types allowed in the Uploader component and pass the extensions
            with comma separators.
            <para> For example,if you want to upload specific image files, pass `AllowedExtensions` as ".jpg,.png".</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.AsyncSettings">
            <summary>
            Configures the save and remove URL to perform the upload operations in the server asynchronously.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.AutoUpload">
            <summary>
            By default, the Uploader component initiates automatic upload when the files are added in upload queue.
            <para>If you want to manipulate the files before uploading to server, disable the AutoUpload property.</para>
            <para>The buttons "upload" and "clear" will be hided from file list when AutoUpload property is true.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Buttons">
            <summary>
            You can customize the default text of "browse, clear, and upload" buttons with plain text or HTML elements.
            The buttons' text can be customized from localization also.
            <para>If you configured both `Locale` and `Buttons` property,the Uploader component considers the `Buttons` property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with root element of the Uploader.
            One or more custom CSS classes can be added to a Uploader.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.DirectoryUpload">
            <summary>
            Specifies a boolean value that indicates whether the folder of files can be browsed in the Uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.DropArea">
            <summary>
            Specifies the drop target to handle the drag-and-drop upload.
            By default, the Uploader creates wrapper around file input that will act as drop target.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.DropEffect">
            <summary>
            Specifies the drag operation effect to the Uploader component.
            <para> Possible values are.</para>
            <list type="bullet">
            <item>
            <term>Copy</term>
            </item>
            <item>
            <term>Move</term>
            </item>
            <item>
            <term>Link</term>
            </item>
            <item>
            <term>None</term>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.EnablePersistence">
            <summary>
            Enable or disable persisting Uploader state between page reloads. If enabled, the `Files` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.EnableRtl">
            <summary>
            Enable or disable rendering Uploader in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the Uploader allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Files">
            <summary>
            Specifies the list of files that will be preloaded on rendering of Uploader component.
            The property used to view and remove the uploaded files from server.
            <para> By default, the files are configured with uploaded successfully state. The following properties are mandatory to configure the preload files:</para>
            <list type="bullet">
            <item>
            <term>Name</term>
            </item>
            <item>
            <term>Size</term>
            </item>
            <item>
            <term>Type</term>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.HtmlAttributes">
            <summary>
            <para>You can add the additional html attributes such as styles, class, and more to the root element.</para>
            <para>If you configured both property and equivalent html attributes, then the Uploader considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Locale">
            <summary>
            Specifies the global culture and localization of the Uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.MaxFileSize">
            <summary>
            Specifies the maximum allowed file size to be uploaded in bytes.
            The property used to make sure that you cannot upload too large files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.MinFileSize">
            <summary>
            Specifies the minimum file size to be uploaded in bytes.
            The property used to make sure that you cannot upload empty files and small files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Multiple">
            <summary>
            Specifies a boolean value that indicates whether the multiple files can be browsed or
            dropped simultaneously in the Uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.SequentialUpload">
            <summary>
            By default, the file Uploader component is processing the multiple files simultaneously.
            <para>If SequentialUpload property is enabled, the file upload component performs the upload one after the other.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.ShowFileList">
            <summary>
            Specifies a boolean value that indicates whether the default file list can be rendered.
            The property used to prevent default file list and design own template for file list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderModel.Template">
            <summary>
            Specifies the HTML string that used to customize the content of each file in the list.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.MaskBlurEventArgs">
            <summary>
            Interface for focus out event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskBlurEventArgs.Container">
            <summary>
            Returns the MaskedTextBox container element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskBlurEventArgs.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskBlurEventArgs.MaskedValue">
            <summary>
            Returns the value of the MaskedTextBox with the masked format.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskBlurEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskBlurEventArgs.Value">
            <summary>
            Returns the value of MaskedTextBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.MaskChangeEventArgs">
            <summary>
            Interface for changed event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskChangeEventArgs.IsInteracted">
            <summary>
            Returns true when the value of MaskedTextBox is changed by user interaction. Otherwise, it returns false.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.MaskFocusEventArgs">
            <summary>
            Interface for focus event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskFocusEventArgs.SelectionEnd">
            <summary>
            Returns selectionEnd value depends on mask length.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskFocusEventArgs.SelectionStart">
            <summary>
            Returns selectionStart value as zero by default.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.MaskClientProps">
            <summary>
            Specifies the client properties of MaskedTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.Readonly">
            <summary>
            Specifies the read only property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.Enabled">
            <summary>
            Specifies wheter the component in disabled state or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.Locale">
            <summary>
            Specifies the locale property of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.SelectionEnd">
            <summary>
            Specifies the selection range end property of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.SelectionStart">
            <summary>
            Specifies the selection start property of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.Value">
            <summary>
            Specifies the value property of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.Mask">
            <summary>
            Specifies the mask property of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.keyValue">
            <summary>
            Specifies the key value  provided.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.IsMultipleDelete">
            <summary>
            Specifies whether the single charcater or multiple characters get deleted.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.PasteValue">
            <summary>
            Specifies the clipboard value.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.PromptCharacter">
            <summary>
            Specifies the prompt character of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.PlaceHolder">
            <summary>
            Specifies the placeholder of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.MaskedValue">
            <summary>
            SPecifies the value with mask literals.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.FloatLabelType">
            <summary>
            Specifies the floatlabel type of the component.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.CustomRegExpCollec">
            <summary>
            Specifies the custom regex.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.HiddenMask">
            <summary>
            Specifies the mask literals with escape sequence and casing characters.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.MaskClientProps.PromptMask">
            <summary>
            Specifies the mask literals.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SfMaskedTextBox">
            <summary>
            The MaskedTextBox is an input element that allows to get input from the user.
            </summary>
            <summary>
            The MaskedTextBox is an input element that allows to get input from the user.
            </summary>
            <summary>
            The MaskedTextBox is an input element that allows to get input from the user.
            </summary>
            <summary>
            The MaskedTextBox is an input element that allows to get input from the user.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Blur">
            <summary>
            Triggers when the SfMaskedTextBox has focus-out.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.ValueChange">
            <summary>
            Triggers when the content of SfMaskedTextBox has changed and gets focus-out.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Created">
            <summary>
            Triggers when the SfMaskedTextBox component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Destroyed">
            <summary>
            Triggers when the SfMaskedTextBox component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Focus">
            <summary>
            Triggers when the SfMaskedTextBox gets focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.OnChange">
            <summary>
            Triggers when the content of input has changed and gets focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.OnInput">
            <summary>
            Triggers each time when the value of input has changed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.OnBlur">
            <summary>
            Triggers when the input has focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.OnFocus">
            <summary>
            Triggers when the input gets focus.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.ID">
            <summary>
            Specifies the id of the SfMaskedTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.SfMaskedTextBoxEditContext">
            <summary>
            Specifies the edit context of MaskedTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.ValueExpression">
            <summary>
            Specifies the expression for defining the value of the bound.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the SfMaskedTextBox. One or more custom CSS classes can be added to a SfMaskedTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.EnablePersistence">
            <summary>
            Enable or disable the persisting SfMaskedTextBox state between page reloads. If enabled, the `Value` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the SfMaskedTextBox allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the SfMaskedTextBox that the placeholder text floats above the SfMaskedTextBox based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the SfMaskedTextBox when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the SfMaskedTextBox.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the SfMaskedTextBox after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the root element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            If you configured both property and equivalent input attribute, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Locale">
            <summary>
            Specifies the global culture and localization of the SfMaskedTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in SfMaskedTextBox. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Readonly">
            <summary>
            Specifies the boolean value whether the SfMaskedTextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.ShowClearButton">
            <summary>
            Specifies a boolean value that indicates whether the clear button is displayed in SfMaskedTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Value">
            <summary>
            Sets the content of the SfMaskedTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.ValueChanged">
            <summary>
            Specifies the callback to trigger when the value changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Width">
            <summary>
            Specifies the width of the SfMaskedTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.TabIndex">
            <summary>
            Specifies the tab order of the SfMaskedTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.Mask">
            <summary>
            Sets a value that masks the MaskedTextBox to allow/validate the user input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.PromptChar">
            <summary>
            Gets or sets a value that will be shown as a prompting symbol for the masked value.
            The symbol used to show input positions in the MaskedTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.CustomCharacters">
            <summary>
            Sets the collection of values to be mapped for non-mask elements(literals)
            which have been set in the mask of MaskedTextBox.
             <para>In the below example, non-mask elements "P" accepts values
            "P" , "A" , "p" , "a" and "M" accepts values "M", "m" mentioned in the custom characters collection.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfMaskedTextBox.MaskedTextBoxParent">
            <summary>
            Parent component of Numeric TextBox.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.GetMaskedValue">
            <summary>
            Returns the value of MaskedTextBox with respective mask.
            </summary>
            <returns>The value with mask literals.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.FocusIn">
            <summary>
            Sets the focus to SfMaskedTextBox component for interaction.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.FocusAsync">
            <summary>
            Sets the focus to SfMaskedTextBox component for interaction.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.FocusOut">
            <summary>
            Remove the focus from SfMaskedTextBox component, if the component is in focus state.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.FocusOutAsync">
            <summary>
            Remove the focus from SfMaskedTextBox component, if the component is in focus state.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.GetPersistData">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.GetPersistDataAsync">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.UpdatePasteValue(Syncfusion.Blazor.Inputs.MaskClientProps)">
            <summary>
            Gets the clipboard values and its related properties from client.
            </summary>
            <param name="args">Specifies the mask client properties.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.OnParametersSetAsync">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Triggers after the component was rendered.
            </summary>
            <param name="firstRender">true if the component rendered for the first time.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.UpdateParentClass(System.String,System.String)">
            <summary>
            Update the parent component class to the element.
            </summary>
            <param name="rootClass">Specifies the root class of the component.</param>
            <param name="containerClass">Specifies the container class o the component.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfMaskedTextBox.UpdateInputValue(System.String,System.Boolean)">
            <summary>
            Update the respective value property without mask literals.
            </summary>
            <param name="inputval">Specifies the value with mask literals.</param>
            <param name="isPaste">true if the user performs paste action , otherwise false.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ChangeEventArgs`1">
            <summary>
            Interface for change event.
            </summary>
            <typeparam name="T">Specifies the type of ChangeEventArgs.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangeEventArgs`1.Event">
            <summary>
            Returns the event parameters from NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangeEventArgs`1.IsInteracted">
            <summary>
            Returns true when the value of NumericTextBox is changed by user interaction. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangeEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangeEventArgs`1.PreviousValue">
            <summary>
            Returns the previously entered value of the NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangeEventArgs`1.Value">
            <summary>
            Returns the entered value of the NumericTextBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.NumericBlurEventArgs`1">
            <summary>
            Interface for Blur event.
            </summary>
            <typeparam name="T">Specifies the type of NumericBlurEventArgs.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericBlurEventArgs`1.Container">
            <summary>
            Returns the NumericTextBox container element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericBlurEventArgs`1.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericBlurEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericBlurEventArgs`1.Value">
            <summary>
            Returns the value of the NumericTextBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.NumericFocusEventArgs`1">
            <summary>
            Interface for Focus event.
            </summary>
            <typeparam name="T">Specifies the type of NumericFocusEventArgs.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericFocusEventArgs`1.Container">
            <summary>
            Returns the NumericTextBox container element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericFocusEventArgs`1.Event">
            <summary>
            Returns the original event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericFocusEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericFocusEventArgs`1.Value">
            <summary>
            Returns the value of the NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericClientProps.Readonly">
            <summary>
            Specifies the component is in read-only mode or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericClientProps.Enabled">
            <summary>
            Specifies the component is in disabled state or not.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericClientProps.Locale">
            <summary>
            Specifies the locale property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericClientProps.ValidateDecimalOnType">
            <summary>
            Specifies the ValidateDecimalOnType property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericClientProps.Decimals">
            <summary>
            Specifies the Decimals property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericClientProps.DecimalSeparator">
            <summary>
            Specifies the DecimalSeparator property.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1">
            <summary>
            Interface for a class NumericTextBox.
            </summary>
            <typeparam name="T">Specifies the type of NumericTextBoxModel.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the NumericTextBox. One or more custom CSS classes can be added to a NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Currency">
            <summary>
            Specifies the currency code to use in currency formatting. Possible values are the ISO 4217 currency codes, such as 'USD' for the US dollar and 'EUR' for the euro.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Decimals">
            <summary>
            Specifies the number precision applied to the textbox value when the NumericTextBox is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.EnablePersistence">
            <summary>
            Enable or disable persisting NumericTextBox state between page reloads. If enabled, the `Value` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the NumericTextBox allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the NumericTextBox that the placeholder text floats above the NumericTextBox based on the below values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the NumericTextBox when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the NumericTextBox.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the NumericTextBox after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Format">
            <summary>
            Specifies the number format that indicates the display format for the value of the NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.HtmlAttributes">
            <summary>
            <para>You can add the additional html attributes such as styles, class, and more to the root element.</para>
            <para>If you configured both property and equivalent html attributes, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.InputAttributes">
            <summary>
            <para>You can add the additional input attributes such as disabled, value, and more to the root element.</para>
            <para>If you configured both property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Locale">
            <summary>
            Specifies the global culture and localization of the NumericTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in TextBox. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Readonly">
            <summary>
            Specifies the boolean value whether the NumericTextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.ShowClearButton">
            <summary>
            Specifies a boolean value that indicates whether the clear button is displayed in NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.ShowSpinButton">
            <summary>
            Specifies whether the up and down spin buttons will be displayed in NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Step">
            <summary>
            Specifies the incremental or decremental step size for the NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.StrictMode">
            <summary>
            Specifies a value that indicates whether the NumericTextBox component allows the value for the specified range.
            <para>True- the input value will be restricted between the min and max range. The typed value gets modified to fit the range on a focused out state.</para>
            <para>Else, it allows any value even out of range value, at that time of wrong value entered, the error class will be added to the component to highlight the error.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.ValidateDecimalOnType">
            <summary>
            Specifies whether the length of the decimal should be restricted during typing.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Value">
            <summary>
            Sets the value of the NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Width">
            <summary>
            Specifies the width of the NumericTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.TabIndex">
            <summary>
            Specifies the tab order of the NumericTextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Max">
            <summary>
            Specifies a maximum value that is allowed a user can enter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxModel`1.Min">
            <summary>
            Specifies a minimum value that is allowed a user can enter.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SfNumericTextBox`1">
            <summary>
            The NumericTextBox is used to get the number inputs from the user. The input values can be incremented or decremented by a predefined step value.
            </summary>
            <summary>
            The NumericTextBox is used to get the number inputs from the user. The input values can be incremented or decremented by a predefined step value.
            </summary>
            <summary>
            The NumericTextBox is used to get the number inputs from the user. The input values can be incremented or decremented by a predefined step value.
            </summary>
            <typeparam name="TValue">Specifies the type of SfNumericTextBox.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Currency">
            <summary>
            Specifies the currency code to use in currency formatting. Possible values are the ISO 4217 currency codes, such as 'USD' for the US dollar and 'EUR' for the euro.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the TextBox that the placeholder text floats above the TextBox based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the TextBox when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the TextBox.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the TextBox after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Placeholder">
            <summary>
            Specifies the boolean value whether the TextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Readonly">
            <summary>
            Specifies the boolean value whether the TextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.ShowClearButton">
            <summary>
            Specifies a boolean value that indicates whether the clear button is displayed in TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Width">
            <summary>
            Specifies the width of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.TabIndex">
            <summary>
            Specifies the tab order of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the root element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            If you configured both property and equivalent input attribute, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Decimals">
            <summary>
            Specifies the number precision applied to the textbox value when the NumericTextBox is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Format">
            <summary>
            Specifies the number format that indicates the display format for the value of the NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.ShowSpinButton">
            <summary>
            Specifies whether the up and down spin buttons will be displayed in NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Step">
            <summary>
            Specifies the incremental or decremental step size for the NumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.StrictMode">
            <summary>
            Specifies a value that indicates whether the NumericTextBox component allows the value for the specified range.
            <para>True - the input value will be restricted between the min and max range. The typed value gets modified to fit the range on a focused out state.</para>
            <para>Else, it allows any value even out of range value, at that time of wrong value entered, the error class will be added to the component to highlight the error.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.ValidateDecimalOnType">
            <summary>
            Specifies whether the length of the decimal should be restricted during typing.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Max">
            <summary>
            Specifies a maximum value that is allowed a user can enter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Min">
            <summary>
            Specifies a minimum value that is allowed a user can enter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.NumericTextBoxParent">
            <summary>
            Parent component of DataManager.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Decrement(`0)">
            <summary>
            Decrements the NumericTextBox value with specified step value.
            </summary>
            <param name="step">Specifies the value used to decrement the NumericTextBox value. If its not given then numeric value will be decremented based on the step property value.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.DecrementAsync(`0)">
            <summary>
            Decrements the NumericTextBox value with specified step value.
            </summary>
            <param name="step">Specifies the value used to decrement the NumericTextBox value. If its not given then numeric value will be decremented based on the step property value.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.FocusIn">
            <summary>
            Sets the focus to the NumericTextBox component for interaction.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.FocusAsync">
            <summary>
            Sets the focus to the NumericTextBox component for interaction.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.FocusOut">
            <summary>
            Remove the focus from the NumericTextBox component, if the component is in focus state.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.FocusOutAsync">
            <summary>
            Remove the focus from the NumericTextBox component, if the component is in focus state.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.GetPersistData">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.GetPersistDataAsync">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.GetText">
            <summary>
            Returns the value of NumericTextBox with the format applied to the NumericTextBox.
            </summary>
            <returns>The input element value.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.GetFormattedText">
            <summary>
            Returns the value of NumericTextBox with the format applied to the NumericTextBox.
            </summary>
            <returns>The input element value.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.Increment(`0)">
            <summary>
            Increments the NumericTextBox value with the specified step value.
            <param name="step">Specifies the value used to increment the NumericTextBox value.if its not given then numeric value will be incremented based on the step property value.</param>
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.IncrementAsync(`0)">
            <summary>
            Increments the NumericTextBox value with the specified step value.
            <param name="step">Specifies the value used to increment the NumericTextBox value.if its not given then numeric value will be incremented based on the step property value.</param>
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.InvokePasteHandler(System.String)">
            <summary>
            Invoke the event, while paste the value to input element.
            </summary>
            <param name="beforeValue">Specifies the previous element value.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.ServerAction(System.String,System.EventArgs,System.String)">
            <summary>
            Invokable the increment/decrement actions.
            </summary>
            <param name="action">Specifies the action.</param>
            <param name="args"><see cref="T:System.EventArgs"/> arguments.</param>
            <param name="currentInputValue">Specifies the input value</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.ServerupdateValue(`0,System.EventArgs)">
            <summary>
            Invokable the component value.
            </summary>
            <returns>Task.</returns>
            <param name="value">Specifies the value.</param>
            <param name="args"><see cref="T:System.EventArgs"/> arguments.</param>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.ContainerClass">
            <summary>
            Specifies the class value that is appended to container of TextBox.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.RootClass">
            <summary>
            Gets or Set the component class to element.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.IsFocus">
            <summary>
            Specifies the input is focused state.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.OnParametersSetAsync">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Triggers after the component was rendered.
            </summary>
            <param name="firstRender">true if the component rendered for the first time.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfNumericTextBox`1.InvokeInputEvent">
            <summary>
            Bind the input event to the input element for enabled clear button and floatlabel to the component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.NumericTextBoxEvents`1">
            <summary>
            The NumericTextBox is used to get the number inputs from the user. The input values can be incremented or decremented by a predefined step value.
            </summary>
            <typeparam name="TValue">Specifies the type of SfNumericTextBox.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxEvents`1.BaseParent">
            <summary>
            Specifies the base parent of SfNumericTextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxEvents`1.Blur">
            <summary>
            Triggers when the NumericTextBox got focus out.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxEvents`1.ValueChange">
            <summary>
            Triggers when the value of the NumericTextBox changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxEvents`1.Created">
            <summary>
            Triggers when the NumericTextBox component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxEvents`1.Destroyed">
            <summary>
            Triggers when the NumericTextBox component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.NumericTextBoxEvents`1.Focus">
            <summary>
            Triggers when the NumericTextBox got focus in.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.NumericTextBoxEvents`1.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ColorRange">
            <summary>
            This class represent the color, start and end position of slider track.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorRange.ChildContent">
            <summary>
            Get and set the Slider.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorRange.Color">
            <summary>
            Get and set the Color.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorRange.Start">
            <summary>
            Get and set the start.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorRange.End">
            <summary>
            Get and set the End.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.ColorRange.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task" representing the asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderColorRanges">
            <summary>
            Specifies the collections of colors to the slider track based on start and end value of each color.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderColorRanges.ChildContent">
            <summary>
            Get and set the ChildContent.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SliderColorRanges.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>"Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderOrientation">
            <summary>
             Holds slider component's different orientation options.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.SliderOrientation.Horizontal">
            <summary>
            Specifies the slider rendering position as Horizontal.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.SliderOrientation.Vertical">
            <summary>
            Specifies the slider rendering position as Vertical.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderType">
            <summary>
            Holds slider component's different options.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.SliderType.Default">
            <summary>
            Specifies the slider type as Default.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.SliderType.MinRange">
            <summary>
            Specifies the slider type as MinRange.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.SliderType.Range">
            <summary>
            Specifies the slider type as Range.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Placement">
            <summary>
            Holds slider component's Ticks Placement options.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.Placement.None">
            <summary>
            This enum value will restrict the ticks element rendering.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.Placement.Before">
            <summary>
            This is used to rendering tiks element before the slider track.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.Placement.After">
            <summary>
            This is used to rendering tiks element after the slider track.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.Placement.Both">
            <summary>
            This is used to rendering tiks element before and after the slider track.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.TooltipPlacement">
            <summary>
            Holds slider component's Tooltip Placement options.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.TooltipPlacement.Before">
            <summary>
            This is used to render the tooltip element before the slider track.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.TooltipPlacement.After">
            <summary>
            This is used to render the tooltip element after the slider track.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.TooltipShowOn">
            <summary>
            Holds slider component's Tooltip ShowOn options.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.TooltipShowOn.Auto">
            <summary>
            This is used to display the tooltip while click / focus the slider handle elemenet.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.TooltipShowOn.Focus">
            <summary>
            This is used to display the tooltip while focus the slider handle elemenet.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.TooltipShowOn.Hover">
            <summary>
            This is used to display the tooltip while hover the slider handle elemenet.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Inputs.TooltipShowOn.Always">
            <summary>
            This is used to display the tooltip until new actions occurred in slider elemenet.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider">
            <summary>
            Interface for holding slider properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.Slider">
            <summary>
            Get and set the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.ColorRange">
            <summary>
            Get and set the ColorRange.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.CssClass">
            <summary>
            Get and set the CssClass.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.CustomValues">
            <summary>
            Get and set the CustomValues.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.EnableAnimation">
            <summary>
            Get and set the EnableAnimation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.EnableHtmlSanitizer">
            <summary>
            Get and set the EnableHtmlSanitizer.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.EnablePersistence">
            <summary>
            Get and set the EnablePersistence.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.EnableRtl">
            <summary>
            Get and set the EnableRtl.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.Enabled">
            <summary>
            Get and set the Enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.Limits">
            <summary>
            Get and set the Limits.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.Locale">
            <summary>
            Get and set the Locale.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.Max">
            <summary>
            Get and set the Max Value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.Min">
            <summary>
            Get and set the Min Value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.Orientation">
            <summary>
            Get and set the Orientation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.ReadOnly">
            <summary>
            Get and set the ReadOnly.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.ShowButtons">
            <summary>
            Get and set the ShowButtons.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.Step">
            <summary>
            Get and set the Step.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.Ticks">
            <summary>
            Get and set the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.Tooltip">
            <summary>
            Get and set the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.Type">
            <summary>
            Get and set the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.Width">
            <summary>
            Get and set the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.ID">
            <summary>
            Get and set the Slider.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.UpdateChildProperties(System.String,System.Object)">
            <summary>
            Updates the Child Properties.
            </summary>
            <param name="key">key.</param>
            <param name="value">value.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.GetLimitData">
            <summary>
            Get the Limit Data.
            </summary>
            <returns>Limit.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.TriggeredTicksRendered(Microsoft.AspNetCore.Components.ElementReference,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Triggers after the ticks rendered.
            </summary>
            <param name="ticksWrapperRef">ticksWrapperRef.</param>
            <param name="attributes">attributes.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Slider.Internal.ISlider.TriggeredTicksRendering(Microsoft.AspNetCore.Components.ElementReference,System.String,System.Double,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Triggers while the ticks rendered.
            </summary>
            <param name="ticksRef">ticksRef.</param>
            <param name="text">text.</param>
            <param name="value">value.</param>
            <param name="attributes">attributes.</param>
            <returns>="Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Slider.Internal.SliderTicksRender">
            <summary>
            This class is used to render ticks to slider component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.SliderTicksRender.ChildContent">
            <exclude/>
            <summary>
            Public fiels ChildContent.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.SliderTicksRender.TicksClass">
            <summary>
            Class for the Tick.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Slider.Internal.SliderTicksRender.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Slider.Internal.SliderTicksRender.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.Slider.Internal.TickElement">
            <summary>
            Specifies the Partial class TickElement.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.TickElement.ClassName">
            <summary>
            Specifies the ClassName.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.TickElement.Styles">
            <summary>
            Specifies the Styles.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.TickElement.Value">
            <summary>
            Specifies the Value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.TickElement.FormattedValue">
            <summary>
            Specifies the FormattedValue.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.Slider.Internal.TickElement.IsSmallTick">
            <summary>
            Specifies the IsSmallTick.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Slider.Internal.TickElement.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.Slider.Internal.TickElement.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>""Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SfSlider`1">
            <summary>
            Partial class SfSlider.
            </summary>
            <typeparam name="TValue">Generic type parameter.</typeparam>.
            <summary>
            Partial class SfSlider.
            </summary>
            <summary>
            Specifies the partial class SfSlider.
            </summary>
            <summary>
            Specifies the partial class SfSlider.
            </summary>
            <summary>
            The Slider component allows the user to select a value or range of values
            in-between the min and max range, by dragging the handle over the slider bar.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.OnParametersSetAsync">
            <summary>
            Method invoked when any changes in component state occurs.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>"Task".</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.ID">
            <summary>
            Sets id attribute for the slider element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.ChildContent">
            <summary>
            Specifies the ChildContent.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.ValueExpression">
            <summary>
            Specifies the expression for defining the value of the bound.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.SliderEditContext">
            <summary>
            Specifies the ChildContent.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.ColorRange">
            <summary>
            Specifies the color to the slider based on given value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.CssClass">
            <summary>
            Specifies the custom classes to be added to the element used to customize the slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.CustomValues">
            <summary>
            Specifies an array of slider values in number or string type.
            The min and max step values are not considered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.EnableAnimation">
            <summary>
            Enables/Disables the animation for slider movement.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Enabled">
            <summary>
            Enables or disables the slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Limits">
            <summary>
            Specified the limit within which the slider to be moved.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Max">
            <summary>
            Specifies the maximum value of the slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Min">
            <summary>
            Specifies the minimum value of the slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Orientation">
            <summary>
             Specifies whether to render the slider in vertical or horizontal orientation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.ReadOnly">
            <summary>
            Specifies whether the render the slider in read-only mode to restrict any user interaction.
            The slider rendered with user defined values and can’t be interacted with user actions.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.ShowButtons">
            <summary>
            Specifies whether to show or hide the increase/decrease buttons
            of Slider to change the slider value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Step">
            <summary>
            Specifies the step value for each value change when the increase / decrease
             button is clicked or on arrow keys press or on dragging the thumb.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Ticks">
            <summary>
            It is used to render the slider ticks options such as placement and step values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Tooltip">
            <summary>
            Specifies the visibility, position of the tooltip over the slider element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Type">
            <summary>
            Defines the type of the Slider. The available options are:
              Default - Allows to a single value in the Slider.
              MinRange - Allows to select a single value in the Slider. It display’s a shadow from the start to the current value.
              Range - Allows to select a range of values in the Slider. It displays shadow in-between the selection range.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Value">
            <summary>
            It is used to denote the current value of the Slider.
            The value should be specified in array of number when render Slider type as range.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.ValueChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Width">
            <summary>
            Specifies the width of the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.IsImmediateValue">
            <summary>
            Specifies whether the value need to be updated at the time of dragging slider handle.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.HtmlAttributes">
            <summary>
            Used to specify an additional html attributes such as styles, class, and more to the root element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.Reposition">
            <summary>
            This method is used to reposition slider.
            </summary>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.RepositionAsync">
            <summary>
            This method is used to reposition slider.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfSlider`1.Slider">
            <summary>
            Get and set the Slider.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.SetTickPosition(Syncfusion.Blazor.Inputs.TicksValues)">
            <summary>
            Method which sets the tick's position.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.SetLocale">
            <summary>
            Set Locale value for button.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.GetProperties">
            <summary>
            Get Public property information.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.UpdateChildProperties(System.String,System.Object)">
            <summary>
            Update Child Property Information.
            </summary>
            <exclude/>
            <param name="key">key.</param>
            <param name="value">value.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.GetSliderValue">
            <summary>
            Get Slider Value.
            </summary>
            <returns>sliderValue.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.GetLimitData">
            <summary>
            Get Slider Limits data.
            </summary>
            <exclude/>
            <returns>SliderLimits().</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.GetTicksData">
            <summary>
            Get Slider ticks data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.GetDefaultTickValue">
            <summary>
            Get Slider ticks default data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.DynamicPropertyChange">
            <summary>
            Handling Dynamic Property changes.
            </summary>
            <exclude/>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.UpdateValue(`0,System.Int32)">
            <summary>
            Update Value Property.
            </summary>
            <exclude/>
            <param name="args">args.</param>
            <param name="activeHandle">activeHandle.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.TriggerEvent(Syncfusion.Blazor.Inputs.ChangeEventData{`0})">
            <summary>
            Trigger onChange / Value change event.
            </summary>
            <exclude/>
            <param name="args">args.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.TooltipHandle(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Slider Handle Value.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.OnOpen(Syncfusion.Blazor.Popups.TooltipEventArgs)">
            <summary>
            update tooltip position.
            </summary>
            <param name="args">args.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.IncreaseValue">
            <summary>
            Increase Slider Handle Value.
            </summary>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.DecreaseValue">
            <summary>
            Decrese Slider Value.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.TriggeredTicksRendered(Microsoft.AspNetCore.Components.ElementReference,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Calling Ticks Rendered Event.
            </summary>
            <param name="ticksWrapperRef">args.</param>
            <param name="attributes">attributes.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.TriggeredTicksRendering(Microsoft.AspNetCore.Components.ElementReference,System.String,System.Double,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Calling Ticks Rendering Event.
            </summary>
            <param name="ticksRef">ticksRef.</param>
            <param name="text">text.</param>
            <param name="value">sliderValue.</param>
            <param name="attributes">attributes.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.SetLocalStorage(System.String,System.String)">
            <summary>
            Update the Persistence value to local storage.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.SerializeModel(Syncfusion.Blazor.Inputs.SfSlider{`0})">
            <summary>
            Updating the persisting values to our component properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfSlider`1.CloseTooltip">
            <summary>
            Closes the Tooltip Element.
            </summary>
            <returns>="Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderChangeEventArgs`1">
            <summary>
            It is used to denote the Slider Change/Changed Event arguments.
            </summary>
            <typeparam name="T">"T".</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderChangeEventArgs`1.Action">
            <summary>
            It is used to get the action applied on the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderChangeEventArgs`1.Name">
            <summary>
            It is used to get the action applied on the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderChangeEventArgs`1.IsInteracted">
            <summary>
            It is used to check whether the event triggered is via user or programmatic way.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderChangeEventArgs`1.PreviousValue">
            <summary>
            It is used to get the previous value of the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderChangeEventArgs`1.Text">
            <summary>
            It is used to get the current text or formatted text of the Slider, which is placed in tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderChangeEventArgs`1.Value">
            <summary>
            It is used to get the current value of the Slider.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderTickEventArgs">
            <summary>
            It is used to denote the TicksRender event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickEventArgs.Text">
            <summary>
            It is used to get the label text of the tick.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickEventArgs.TickElement">
            <summary>
            It is used to get the current tick element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickEventArgs.TickElementRef">
            <summary>
            It is used to get the current tick element reference.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickEventArgs.Value">
            <summary>
            It is used to get the value of the tick.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickEventArgs.HtmlAttributes">
            <summary>
            It is used to customize tick elements.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderTickRenderedEventArgs">
            <summary>
            It is used to denote the ticks rendered Event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickRenderedEventArgs.TickElements">
            <summary>
            It returns the collection of tick elements.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickRenderedEventArgs.TickElementsRef">
            <summary>
            It returns the collection of tick elements as a reference.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickRenderedEventArgs.TicksWrapper">
            <summary>
            It returns the container of the ticks element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickRenderedEventArgs.TicksContainerRef">
            <summary>
            It returns the container of the ticks element as a reference.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTickRenderedEventArgs.HtmlAttributes">
            <summary>
            It is used to customize ticks parent element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderTooltipEventArgs`1">
            <summary>
            It is used to denote the TooltipChange Event arguments.
            </summary>
            <typeparam name="T">"T".</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTooltipEventArgs`1.Text">
            <summary>
            It is used to get the text shown in the Slider tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTooltipEventArgs`1.Value">
            <summary>
            It is used to get the value of the Slider.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ColorRangeDataModel">
            <summary>
            class for holding ColorRange properties arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorRangeDataModel.Color">
            <summary>
            It is used to set the color in the slider bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorRangeDataModel.End">
            <summary>
            It is used to get the end value for applying color.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ColorRangeDataModel.Start">
            <summary>
            It is used to get the starting value for applying color.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.PersistenceValues`1">
            <summary>
            Class that holds the persistence property details.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.TicksValues">
            <summary>
            Class that holds the tick's position.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ChangeEventData`1">
            <summary>
            Class that holds the previous and currentValue of slider component.
            </summary>
            <typeparam name="TValue">"TValue".</typeparam>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangeEventData`1.PreviousValue">
            <summary>
            Specifies the PreviousValue.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangeEventData`1.Value">
            <summary>
            Specifies the Value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangeEventData`1.IsValueChanged">
            <summary>
            Specifies the isValueChanged.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderEvents`1">
            <summary>
            Configure handlers to handle the events of the Slider component.
            </summary>
            <typeparam name="TValue">"TValue".</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderEvents`1.OnChange">
            <summary>
            We can trigger change event whenever Slider value is changed.
             In other term, this event will be triggered while drag the slider thumb.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderEvents`1.ValueChange">
            <summary>
            Fires whenever the Slider value is changed.
            In other term, this event will be triggered, while drag the slider thumb completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderEvents`1.Created">
            <summary>
            Triggers when the Slider is successfully created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderEvents`1.TicksRendered">
            <summary>
            Triggers when the ticks are rendered on the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderEvents`1.TicksRendering">
            <summary>
            Triggers on rendering the ticks element in the Slider,
            which is used to customize the ticks labels dynamically.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderEvents`1.OnTooltipChange">
            <summary>
            Triggers when the Sider tooltip value is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderEvents`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SliderEvents`1.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderLimitData">
            <summary>
            This class is used to set limit bar to slider component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderLimits">
            <summary>
            This class is used to set limit bar to slider component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.Parent">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.ChildContent">
            <summary>
            Specifies the ChildContent.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.Enabled">
            <summary>
            It is used to enable the limit in the slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.EndHandleFixed">
            <summary>
            It is used to lock the second handle.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.MaxEnd">
            <summary>
            It is used to set the maximum end limit value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.MaxStart">
            <summary>
            It is used to set the maximum start limit value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.MinEnd">
            <summary>
            It is used to set the minimum end limit value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.MinStart">
            <summary>
            It is used to set the minimum start limit value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderLimits.StartHandleFixed">
            <summary>
            It is used to lock the first handle.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SliderLimits.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SliderLimits.OnParametersSetAsync">
            <summary>
            Method invoked when any changes in component state occurs.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SliderLimits.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>"Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderTicks">
            <summary>
            This class is used to render ticks to slider component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTicks.ChildContent">
            <summary>
            Specifies the ChildContent.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTicks.Format">
            <summary>
            It is used to customize the Slider scale value to the desired format using Internationalization or events(custom formatting).
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTicks.LargeStep">
            <summary>
            It is used to denote the distance between two major (large) ticks from the scale of the Slider.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTicks.Placement">
            <summary>
            It is used to denote the position of the ticks in the Slider. The available options are:.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTicks.ShowSmallTicks">
            <summary>
            We can show or hide the small ticks in the Slider, which will be appeared in between the largeTicks.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTicks.SmallStep">
            <summary>
            It is used to denote the distance between two minor (small) ticks from the scale of the Slider.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SliderTicks.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderTicksData">
            <summary>
            This class is used to render ticks to slider component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderTooltip">
            <summary>
            This class is used to set a tooltip for slider component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTooltip.ChildContent">
            <summary>
            Specifies the ChildContent.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTooltip.CssClass">
            <summary>
            It is used to customize the Tooltip which accepts custom CSS class names that define
             specific user-defined styles and themes to be applied on the Tooltip element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTooltip.Format">
            <summary>
            It is used to customize the Tooltip content to the desired format
             using internationalization or events (custom formatting).
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTooltip.IsVisible">
            <summary>
            It is used to show or hide the Tooltip of Slider Component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTooltip.Placement">
            <summary>
            It is used to denote the position for the tooltip element in the Slider. The available options are:
              Before - Tooltip is shown in the top of the horizontal slider bar or at the left of the vertical slider bar.
              After - Tooltip is shown in the bottom of the horizontal slider bar or at the right of the vertical slider bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SliderTooltip.ShowOn">
            <summary>
            It is used to determine the device mode to show the Tooltip.
            If it is in desktop, it will show the Tooltip content when hovering on the target element.
            If it is in touch device. It will show the Tooltip content when tap and holding on the target element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SliderTooltip.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SliderTooltipData">
            <summary>
            This class is used to set a tooltip for slider component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.ChangedEventArgs">
            <summary>
            Interface for changed event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangedEventArgs.Container">
            <summary>
            Returns the TextBox container element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangedEventArgs.Event">
            <summary>
            Returns the event parameters from TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangedEventArgs.IsInteracted">
            <summary>
            Returns the original event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangedEventArgs.IsInteraction">
            <summary>
            DEPRECATED-Returns the original event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangedEventArgs.PreviousValue">
            <summary>
            Returns the previously entered value of the TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.ChangedEventArgs.Value">
            <summary>
            Returns the entered value of the TextBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.FocusInEventArgs">
            <summary>
            Interface for focus event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FocusInEventArgs.Container">
            <summary>
            Returns the TextBox container element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FocusInEventArgs.Event">
            <summary>
            Returns the event parameters from TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FocusInEventArgs.Value">
            <summary>
            Returns the entered value of the TextBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.FocusOutEventArgs">
            <summary>
            Interface for focus out event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FocusOutEventArgs.Container">
            <summary>
            Returns the TextBox container element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FocusOutEventArgs.Event">
            <summary>
            Returns the event parameters from TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.FocusOutEventArgs.Value">
            <summary>
            Returns the entered value of the TextBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.InputEventArgs">
            <summary>
            Interface for input event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.InputEventArgs.Container">
            <summary>
            Returns the TextBox container element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.InputEventArgs.Event">
            <summary>
            Returns the event parameters from TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.InputEventArgs.PreviousValue">
            <summary>
            Returns the previously updated value of the TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.InputEventArgs.Value">
            <summary>
            Returns the entered value of the TextBox.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.TextBoxModel">
            <summary>
            Interface for a class TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Autocomplete">
            <summary>
            Specifies whether the browser is allowed to automatically enter or select a value for the TextBox.
            <para>By default, autocomplete is enabled for TextBox.</para>
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>On</term>
            <description>Specifies that autocomplete is enabled</description>
            </item>
            <item>
            <term>Off</term>
            <description>Specifies that autocomplete is disabled.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the TextBox. One or more custom CSS classes can be added to a TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.EnablePersistence">
            <summary>
            Enable or disable the persisting TextBox state between page reloads. If enabled, the `Value` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the TextBox allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the TextBox that the placeholder text floats above the TextBox based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the TextBox when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the TextBox.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the TextBox after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the root element.
            <para>If you configured both property and equivalent html attributes, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            <para>If you configured both property and equivalent input attribute, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Locale">
            <summary>
            Specifies the global culture and localization of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Multiline">
            <summary>
            Specifies a boolean value that enables or disables the multiline on the TextBox.
            <para>The TextBox changes from a single line to multiline when enabling this multiline mode.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Placeholder">
            <summary>
            Specifies the text that is shown as a hint or placeholder until the user focuses or enter a value in TextBox. The property is depending on the FloatLabelType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Readonly">
            <summary>
            Specifies the boolean value whether the TextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.ShowClearButton">
            <summary>
            Specifies a boolean value that indicates whether the clear button is displayed in TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Type">
            <summary>
            Specifies the behavior of the TextBox such as text, password, email, and more.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Value">
            <summary>
            Sets the content of the TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.Width">
            <summary>
            Specifies the width of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.TextBoxModel.TabIndex">
            <summary>
            Specifies the tab order of the TextBox component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SfTextBox">
            <summary>
            The TextBox is an input element that allows to get input from the user. It allows the user to edit or display the text value.
            </summary>
            <summary>
            The TextBox is an input element that allows to get input from the user. It allows the user to edit or display the text value.
            </summary>
            <summary>
            The TextBox is an input element that allows to get input from the user. It allows the user to edit or display the text value.
            </summary>
            <summary>
            The TextBox is an input element that allows to get input from the user. It allows the user to edit or display the text value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Blur">
            <summary>
            Triggers when the TextBox has focus-out.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.ValueChange">
            <summary>
            Triggers when the content of TextBox has changed and gets focus-out.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Created">
            <summary>
            Triggers when the TextBox component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Destroyed">
            <summary>
            Triggers when the TextBox component is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Focus">
            <summary>
            Triggers when the TextBox gets focus.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Input">
            <summary>
            Triggers each time when the value of TextBox has changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Autocomplete">
            <summary>
            Specifies whether the browser is allowed to automatically enter or select a value for the TextBox.
            <para>By default, autocomplete is enabled for TextBox.</para>
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>On</term>
            <description>Specifies that autocomplete is enabled</description>
            </item>
            <item>
            <term>Off</term>
            <description>Specifies that autocomplete is disabled.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.FloatLabelType">
            <summary>
            Specifies the floating label behavior of the TextBox that the placeholder text floats above the TextBox based on the following values.
            <para>Possible values are:</para>
            <list type="bullet">
            <item>
            <term>Never</term>
            <description>Never floats the label in the TextBox when the placeholder is available.</description>
            </item>
            <item>
            <term>Always</term>
            <description>The floating label always floats above the TextBox.</description>
            </item>
            <item>
            <term>Auto</term>
            <description>The floating label floats above the TextBox after focusing it or when enters the value in it.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Placeholder">
            <summary>
            Specifies the boolean value whether the TextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Readonly">
            <summary>
            Specifies the boolean value whether the TextBox allows user to change the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.ShowClearButton">
            <summary>
            Specifies a boolean value that indicates whether the clear button is displayed in TextBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Width">
            <summary>
            Specifies the width of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.TabIndex">
            <summary>
            Specifies the tab order of the TextBox component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Multiline">
            <summary>
            Specifies a boolean value that enables or disables the multiline on the TextBox.
            The TextBox changes from a single line to multiline when enabling this multiline mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as styles, class, and more to the root element.
            If you configured both property and equivalent html attributes, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            If you configured both property and equivalent input attribute, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.Type">
            <summary>
            Specifies the behavior of the TextBox such as text, password, email, and more.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfTextBox.TextBoxParent">
            <summary>
            Parent component of TextBox.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.AddIcon(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Adding the icons to the TextBox component.
            </summary>
            <param name="position">The adding icons to the component based on position for prepend/append.</param>
            <param name="icons">The icons class is added to icon element.</param>
            <param name="events">The icon events are added to the events element</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.AddIconAsync(System.String,System.String)">
            <summary>
            Adding the icons to the TextBox component.
            </summary>
            <param name="position">The adding icons to the component based on position for prepend/append.</param>
            <param name="icons">The icons class is added to icon element.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.FocusIn">
            <summary>
            Sets the focus to TextBox component for interaction.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.FocusAsync">
            <summary>
            Sets the focus to TextBox component for interaction.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.FocusOut">
            <summary>
            Remove the focus from TextBox component, if the component is in focus state.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.FocusOutAsync">
            <summary>
            Remove the focus from TextBox component, if the component is in focus state.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.GetPersistData">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.GetPersistDataAsync">
            <summary>
            Gets the properties to be maintained in the persisted state.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.OnParametersSetAsync">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Triggers after the component was rendered.
            </summary>
            <param name="firstRender">true if the component rendered for the first time.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.InvokeInputEvent">
            <summary>
            Bind the input event to the input element for enabled clear button and floatlabel to the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfTextBox.UpdateParentClass(System.String,System.String)">
            <summary>
            Update the parent component class to the element.
            </summary>
            <param name="rootClass">Specifies the root class of the component.</param>
            <param name="containerClass">Specifies the container class of the component.</param>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.SfUploader">
            <summary>
            The uploader component is useful to upload images, documents, and other files to server.
            The component is the extended version of HTML5 that is uploaded with multiple file selection, auto upload, drag and drop, progress bar, preload files, and validation.
            </summary>
            <summary>
            Specifies the list of files that will be preloaded on rendering of uploader component.
            </summary>
            <summary>
            Specifies the list of files that will be preloaded on rendering of uploader component.
            </summary>
            <summary>
            The uploader component is useful to upload images, documents, and other files to server.
            The component is the extended version of HTML5 that is uploaded with multiple file selection, auto upload, drag and drop, progress bar, preload files, and validation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.ID">
            <summary>
            Specifies the id of the Uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.AllowedExtensions">
            <summary>
            Specifies the extensions of the file types allowed in the Uploader component and pass the extensions
            with comma separators.
            <para> For example,if you want to upload specific image files, pass `AllowedExtensions` as ".jpg,.png".</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.AsyncSettings">
            <summary>
            Configures the save and remove URL to perform the upload operations in the server asynchronously.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.AutoUpload">
            <summary>
            By default, the Uploader component initiates automatic upload when the files are added in upload queue.
            <para>If you want to manipulate the files before uploading to server, disable the AutoUpload property.</para>
            <para>The buttons "upload" and "clear" will be hided from file list when AutoUpload property is true.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.Buttons">
            <summary>
            You can customize the default text of "browse, clear, and upload" buttons with plain text or HTML elements.
            The buttons' text can be customized from localization also.
            <para>If you configured both Locale and Buttons property,the Uploader component considers the Buttons property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with root element of the Uploader.
            One or more custom CSS classes can be added to a Uploader.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.DirectoryUpload">
            <summary>
            Specifies a boolean value that indicates whether the folder of files can be browsed in the Uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.DropArea">
            <summary>
            Specifies the drop target to handle the drag-and-drop upload.
            By default, the Uploader creates wrapper around file input that will act as drop target.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.DropEffect">
            <summary>
            Specifies the drag operation effect to the Uploader component.
            <para> Possible values are .</para>
            <list type="bullet">
            <item>
            <term>Copy</term>
            </item>
            <item>
            <term>Move</term>
            </item>
            <item>
            <term>Link</term>
            </item>
            <item>
            <term>None</term>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.EnablePersistence">
            <summary>
            Enable or disable persisting Uploader state between page reloads. If enabled, the `Files` state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.EnableRtl">
            <summary>
            Enable or disable rendering Uploader in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.Enabled">
            <summary>
            Specifies a boolean value that indicates whether the Uploader allows the user to interact with it.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.Files">
            <summary>
            Specifies the list of files that will be preloaded on rendering of Uploader component.
            The property used to view and remove the uploaded files from server.
            <para> By default, the files are configured with uploaded successfully state. The following properties are mandatory to configure the preload files:</para>
            <list type="bullet">
            <item>
            <term>Name</term>
            </item>
            <item>
            <term>Size</term>
            </item>
            <item>
            <term>Type</term>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.HtmlAttributes">
            <summary>
            <para>You can add the additional html attributes such as styles, class, and more to the root element.</para>
            <para>If you configured both property and equivalent html attributes, then the component considers the property value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.InputAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            If you configured both property and equivalent input attribute, then the component considers the property value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.Locale">
            <summary>
            Specifies the global culture and localization of the Uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.MaxFileSize">
            <summary>
            Specifies the maximum allowed file size to be uploaded in bytes.
            The property used to make sure that you cannot upload too large files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.MinFileSize">
            <summary>
            Specifies the minimum file size to be uploaded in bytes.
            The property used to make sure that you cannot upload empty files and small files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.Multiple">
            <summary>
            Specifies a boolean value that indicates whether the multiple files can be browsed or
            dropped simultaneously in the Uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.AllowMultiple">
            <summary>
            Specifies a boolean value that indicates whether the multiple files can be browsed or dropped simultaneously in the Uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.SequentialUpload">
            <summary>
            By default, the file Uploader component is processing the multiple files simultaneously.
            <para>If SequentialUpload property is enabled, the file upload component performs the upload one after the other.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.ShowFileList">
            <summary>
            Specifies a boolean value that indicates whether the default file list can be rendered.
            The property used to prevent default file list and design own template for file list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.TabIndex">
            <summary>
            Specifies the tab order of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.Template">
            <summary>
            Specifies the HTML string that used to customize the content of each file in the list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.SfUploader.OnChange">
            <summary>
            Triggers when the content of input has changed and gets focus-out.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.PropertyInitialized">
            <summary>
            Method provides initial values to the properties.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.PropertyParametersSet">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.BytesToSize(System.Double)">
            <summary>
            It is used to convert bytes value into kilobytes or megabytes depending on the size based
            on [binary prefix](https://en.wikipedia.org/wiki/Binary_prefix).
            </summary>
            <param name="bytes">Specifies the file size in bytes.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.BytesToSizeAsync(System.Double)">
            <summary>
            It is used to convert bytes value into kilobytes or megabytes depending on the size based
            on [binary prefix](https://en.wikipedia.org/wiki/Binary_prefix).
            </summary>
            <param name="bytes">Specifies the file size in bytes.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.Cancel(Syncfusion.Blazor.Inputs.FileInfo[])">
            <summary>
            Stops the in-progress chunked upload based on the file data.
            When the file upload is canceled, the partially uploaded file is removed from server.
            </summary>
            <param name="fileData">specifies the files data to cancel the progressing file.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.CancelAsync(Syncfusion.Blazor.Inputs.FileInfo[])">
            <summary>
            Stops the in-progress chunked upload based on the file data.
            When the file upload is canceled, the partially uploaded file is removed from server.
            </summary>
            <param name="fileData">specifies the files data to cancel the progressing file.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ClearAll">
            <summary>
            Clear all the file entries from list that can be uploaded files or added in upload queue.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ClearAllAsync">
            <summary>
            Clear all the file entries from list that can be uploaded files or added in upload queue.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.CreateFileList(Syncfusion.Blazor.Inputs.FileInfo[],System.Nullable{System.Boolean})">
            <summary>
            Create the file list for specified files data.
            </summary>
            <param name="fileData">Specifies the file data.</param>
            <param name="isSelectedFile">true if the file is selected.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.GetFilesData(System.Nullable{System.Double})">
            <summary>
            Get the data of files which are shown in file list.
            </summary>
            <param name="index">Specifies the index.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.GetFilesDataAsync(System.Nullable{System.Double})">
            <summary>
            Get the data of files which are shown in file list.
            </summary>
            <param name="index">Specifies the index.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.Pause(System.Collections.Generic.List{Syncfusion.Blazor.Inputs.FileInfo},System.Nullable{System.Boolean})">
            <summary>
            Pauses the in-progress chunked upload based on the file data.
            </summary>
            <param name="fileData">specifies the files data to pause from uploading.</param>
            <param name="custom">Set true if used custom UI.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.PauseAsync(System.Collections.Generic.List{Syncfusion.Blazor.Inputs.FileInfo},System.Nullable{System.Boolean})">
            <summary>
            Pauses the in-progress chunked upload based on the file data.
            </summary>
            <param name="fileData">specifies the files data to pause from uploading.</param>
            <param name="custom">Set true if used custom UI.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.Remove(Syncfusion.Blazor.Inputs.FileInfo[],System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object)">
            <summary>
            Remove the uploaded file from server manually by calling the remove URL action.
            <para>If you pass an empty argument to this method, the complete file list can be cleared,
            otherwise remove the specific file based on its argument ("file_data").</para>
            </summary>
            <param name="fileData">specifies the files data to remove from file list/server.</param>
            <param name="customTemplate">Set true if the component rendering with customize template.</param>
            <param name="removeDirectly">Set true if files remove without removing event.</param>
            <param name="postRawFile">Set false, to post file name only to the remove action.</param>
            <param name="args"></param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.RemoveAsync(Syncfusion.Blazor.Inputs.FileInfo[],System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object)">
            <summary>
            Remove the uploaded file from server manually by calling the remove URL action.
            <para>If you pass an empty argument to this method, the complete file list can be cleared,
            otherwise remove the specific file based on its argument ("file_data").</para>
            </summary>
            <param name="fileData">specifies the files data to remove from file list/server.</param>
            <param name="customTemplate">Set true if the component rendering with customize template.</param>
            <param name="removeDirectly">Set true if files remove without removing event.</param>
            <param name="postRawFile">Set false, to post file name only to the remove action.</param>
            <param name="args"></param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.Resume(Syncfusion.Blazor.Inputs.FileInfo[],System.Nullable{System.Boolean})">
            <summary>
            Resumes the chunked upload that is previously paused based on the file data.
            </summary>
            <param name="fileData">specifies the files data to resume the paused file.</param>
            <param name="custom"></param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ResumeAsync(Syncfusion.Blazor.Inputs.FileInfo[],System.Nullable{System.Boolean})">
            <summary>
            Resumes the chunked upload that is previously paused based on the file data.
            </summary>
            <param name="fileData">specifies the files data to resume the paused file.</param>
            <param name="custom"></param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.Retry(Syncfusion.Blazor.Inputs.FileInfo[],System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Retries the canceled or failed file upload based on the file data.
            <param name="fileData">specifies the files data to retry the canceled or failed file</param>
            <param name="fromcanceledStage">Set true to retry from canceled stage and set false to retry from initial stage.</param>
            <param name="custom"></param>
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.RetryAsync(Syncfusion.Blazor.Inputs.FileInfo[],System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Retries the canceled or failed file upload based on the file data.
            <param name="fileData">specifies the files data to retry the canceled or failed file</param>
            <param name="fromcanceledStage">Set true to retry from canceled stage and set false to retry from initial stage.</param>
            <param name="custom"></param>
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.SortFileList(Syncfusion.Blazor.Inputs.FileInfo[])">
            <summary>
            Allows you to sort the file data alphabetically based on its file name clearly.
            </summary>
            <param name="filesData">specifies the files data for upload.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.SortFileListAsync(Syncfusion.Blazor.Inputs.FileInfo[])">
            <summary>
            Allows you to sort the file data alphabetically based on its file name clearly.
            </summary>
            <param name="filesData">specifies the files data for upload.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.Upload(Syncfusion.Blazor.Inputs.FileInfo[],System.Nullable{System.Boolean})">
            <summary>
            Allows you to call the upload process manually by calling save URL action.
            <para>To process the selected files (added in upload queue), pass an empty argument otherwise
            upload the specific file based on its argument.</para>
            </summary>
            <param name="files">specifies the files data for upload.</param>
            <param name="custom">specifies the custom files.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.UploadAsync(Syncfusion.Blazor.Inputs.FileInfo[],System.Nullable{System.Boolean})">
            <summary>
            Allows you to call the upload process manually by calling save URL action.
            <para>To process the selected files (added in upload queue), pass an empty argument otherwise
            upload the specific file based on its argument.</para>
            </summary>
            <param name="files">specifies the files data for upload.</param>
            <param name="custom">specifies the custom files.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.GetFileDetails(System.Collections.Generic.List{Syncfusion.Blazor.Inputs.FileInfo})">
            <summary>
            Task which retrieves the file data.
            </summary>
            <param name="file">Specifies the file.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.CreateFileList(System.Collections.Generic.List{Syncfusion.Blazor.Inputs.Internal.UploadFileDetails},System.Boolean)">
            <summary>
            Task which creates the file list.
            </summary>
            <param name="fileData">Specifies the file data.</param>
            <param name="isForm">true if the component inside form.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ClearAllFile">
            <summary>
            Task which clears the file list.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.RemoveFileData(System.Int32)">
            <summary>
            Method which removes the file data.
            </summary>
            <param name="index">Specifies the index.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.UpdateServerFileData(System.Collections.Generic.List{Syncfusion.Blazor.Inputs.Internal.UploadFileDetails},System.Boolean)">
            <summary>
            Method which update the file data  in server.
            </summary>
            <param name="fileData">Specifies the filedata.</param>
            <param name="isForm">true if the component rendered inside the form component.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.SelectedEvent(Syncfusion.Blazor.Inputs.SelectedEventArgs)">
            <summary>
            Task which specifies the selected event.
            </summary>
            <param name="args">Selected event arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.RemovingEvent(Syncfusion.Blazor.Inputs.RemovingEventArgs)">
            <summary>
            Task which specifies the RemovingEvent.
            </summary>
            <param name="args">Specifies the removing event arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ActionCompleteEvent(Syncfusion.Blazor.Inputs.ActionCompleteEventArgs)">
            <summary>
            Task which specifies the action complete event.
            </summary>
            <param name="args">Specifies the action complete event arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.SuccessEvent(Syncfusion.Blazor.Inputs.SuccessEventArgs)">
            <summary>
            Task which specifies the success event .
            </summary>
            <param name="args">Specifies the success event arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ChangeEvent(Syncfusion.Blazor.Inputs.UploadChangeEventArgs)">
            <summary>
            Task which specifies the change event.
            </summary>
            <param name="args">Specifies the upload change event arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.FailureEvent(Syncfusion.Blazor.Inputs.FailureEventArgs)">
            <summary>
            Task which specifies the failure event.
            </summary>
            <param name="args">FailureEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ChunkFailureEvent(Syncfusion.Blazor.Inputs.FailureEventArgs)">
            <summary>
            Task which specifies the chunk failure event.
            </summary>
            <param name="args">FailureEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.FileListRenderingEvent(Syncfusion.Blazor.Inputs.FileListRenderingEventArgs)">
            <summary>
            Task which specifies the file list rendering event.
            </summary>
            <param name="args">FileListRenderingEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ProgressEvent(Syncfusion.Blazor.Inputs.ProgressEventArgs)">
            <summary>
            Task which specifies the progress event.
            </summary>
            <param name="args">ProgressEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.CancelingEvent(Syncfusion.Blazor.Inputs.CancelEventArgs)">
            <summary>
            Task which specifies the canceling event.
            </summary>
            <param name="args">CancelEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.UploadingEvent(Syncfusion.Blazor.Inputs.UploadingEventArgs)">
            <summary>
            Task which specifies the uploading event.
            </summary>
            <param name="args">UploadingEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ChunkUploadingEvent(Syncfusion.Blazor.Inputs.UploadingEventArgs)">
            <summary>
            Task which specifies the chunk uploading event.
            </summary>
            <param name="args">UploadingEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ChunkSuccessEvent(Syncfusion.Blazor.Inputs.SuccessEventArgs)">
            <summary>
            Task which specifies the chunk success event.
            </summary>
            <param name="args">SuccessEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.PausingEvent(Syncfusion.Blazor.Inputs.PauseResumeEventArgs)">
            <summary>
            Task which specifies the pausing event.
            </summary>
            <param name="args">PauseResumeEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ResumingEvent(Syncfusion.Blazor.Inputs.PauseResumeEventArgs)">
            <summary>
            Task which specifies the resuming event.
            </summary>
            <param name="args">PauseResumeEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.BeforeUploadEvent(Syncfusion.Blazor.Inputs.BeforeUploadEventArgs)">
            <summary>
            Task which specifies the before upload event.
            </summary>
            <param name="args">BeforeUploadEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.BeforeRemoveEvent(Syncfusion.Blazor.Inputs.BeforeRemoveEventArgs)">
            <summary>
            Task specifies the before remove event.
            </summary>
            <param name="args">BeforeRemoveEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.ClearingEvent(Syncfusion.Blazor.Inputs.ClearingEventArgs)">
            <summary>
            Task specifies the clearing event.
            </summary>
            <param name="args">ClearingEventArgs arguments.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Triggers after the component was rendered.
            </summary>
            <param name="firstRender">true if the component rendered for the firts time.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.OnParametersSetAsync">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.SfUploader.UpdateChildProperties(System.String,System.Object)">
            <summary>
            Update the dropdownlist fileds.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploaderAsyncSettings">
            <summary>
            Specifies the Uploader Events of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderAsyncSettings.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderAsyncSettings.ChunkSize">
            <summary>
            Specifies the ChunkSize to split the large file into chunks, and upload it to the server in a sequential order.
            <para>If the ChunkSize property has value, the Uploader enables the chunk upload by default.
            It must be specified in bytes value.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderAsyncSettings.RemoveUrl">
            <summary>
            Specifies the URL of remove action that receives the file information and handle the remove operation in server.
            <para>The remove action type must be POST request and define "RemoveFileNames" attribute to get file information that will be removed.
            This property is optional.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderAsyncSettings.RetryAfterDelay">
            <summary>
            Specifies the delay time in milliseconds that the automatic retry happens after the delay.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderAsyncSettings.RetryCount">
            <summary>
            Specifies the number of retries that the Uploader can perform on the file failed to upload.
            By default, the Uploader set 3 as maximum retries. This property must be specified to prevent infinity looping.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderAsyncSettings.SaveUrl">
            <summary>
            Specifies the URL of save action that will receive the upload files and save in the server.
            <para>The save action type must be POST request and define the argument as same input name used to render the component.
            The upload operations could not perform without this property.</para>
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.UploaderAsyncSettings.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.UploaderAsyncSettings.OnParametersSetAsync">
            <summary>
            Triggers after the component was rendered.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploaderButtons">
            <summary>
            Customize the default text of browse, clear, and upload buttons with plain text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderButtons.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderButtons.Browse">
            <summary>
            Specifies the text or html content to browse button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderButtons.Clear">
            <summary>
            Specifies the text or html content to clear button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderButtons.Upload">
            <summary>
            Specifies the text or html content to upload button.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.UploaderButtons.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.UploaderButtons.OnParametersSetAsync">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploaderButtonsProps">
            <summary>
            Specifes the uploader button properties.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploaderEvents">
            <summary>
            Specifies the Uploader Events of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnActionComplete">
            <summary>
            Triggers after all the selected files has processed to upload successfully or failed to server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.BeforeRemove">
            <summary>
            Triggers on remove the uploaded file. The event used to get confirm before remove the file from server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.BeforeUpload">
            <summary>
            Triggers when the upload process before. This event is used to add additional parameter with upload request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnCancel">
            <summary>
            Fires if cancel the chunk file uploading.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.ValueChange">
            <summary>
            Triggers when changes occur in uploaded file list by selecting or dropping files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnChunkFailured">
            <summary>
            Fires if the chunk file failed to upload.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnChunkFailure">
            <summary>
            Fires if the chunk file failed to upload.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnChunkSuccess">
            <summary>
            Fires when the chunk file uploaded successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnChunkUploadStart">
            <summary>
            Fires when every chunk upload process gets started. This event is used to add additional parameter with upload request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnClear">
            <summary>
            Triggers before clearing the items in file list when clicking "clear".
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnFailured">
            <summary>
            Triggers when the AJAX request fails on uploading or removing files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnFailure">
            <summary>
            Triggers when the AJAX request fails on uploading or removing files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnFileListRender">
            <summary>
            Triggers before rendering each file item from the file list in a page.
            It helps to customize specific file item structure.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.Paused">
            <summary>
            Fires if pause the chunk file uploading.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.Progressing">
            <summary>
            Triggers when uploading a file to the server using the AJAX request.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnRemove">
            <summary>
            Triggers on removing the uploaded file. The event used to get confirm before removing the file from server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.Rendering">
            <summary>
            DEPRECATED-Triggers before rendering each file item from the file list in a page.
            It helps to customize specific file item structure.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnResume">
            <summary>
            Fires if resume the paused chunk file upload.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.FileSelected">
            <summary>
            Triggers after selecting or dropping the files by adding the files in upload queue.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.Success">
            <summary>
            Triggers when the AJAX request gets success on uploading files or removing files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderEvents.OnUploadStart">
            <summary>
            Triggers when the upload process gets started. This event is used to add additional parameter with upload request.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.UploaderEvents.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploaderFiles">
            <summary>
            Specifies the list of files that will be preloaded on rendering of uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderFiles.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderFiles.Files">
            <summary>
            Specifies the uploaded file list.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.UploaderFiles.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Inputs.UploaderUploadedFiles">
            <summary>
            Specifies the list of files that will be preloaded on rendering of uploader component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderUploadedFiles.ChildContent">
            <summary>
            Specifies the content that has to be passed.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderUploadedFiles.Name">
            <summary>
            Specifies the name of the file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderUploadedFiles.Size">
            <summary>
            Specifies the size of the file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderUploadedFiles.Type">
            <summary>
            Specifies the type of the file.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.UploaderUploadedFiles.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Inputs.UploaderUploadedFiles.OnParametersSetAsync">
            <summary>
            Triggers while dynamically updating the component properties.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Inputs.UploaderTemplates.ChildContent">
             <summary>
             Specifies the content that has to be passed.
             </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.UploaderLocale">
            <summary>
            Gets or sets the UploaderLocale property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.Browse">
            <summary>
            Gets or sets the Browse property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.Clear">
            <summary>
            Gets or sets the Clear property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.Upload">
            <summary>
            Gets or sets the Upload property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.DropFilesHint">
            <summary>
            Gets or sets the DropFilesHint property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.InvalidMaxFileSize">
            <summary>
            Gets or sets the InvalidMaxFileSize property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.InvalidMinFileSize">
            <summary>
            Gets or sets the InvalidMinFileSize property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.InvalidFileType">
            <summary>
            Gets or sets the InvalidFileType property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.UploadFailedMessage">
            <summary>
            Gets or sets the UploadFailedMessage property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.UploadSuccessMessage">
            <summary>
            Gets or sets the UploadSuccessMessage property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.RemovedSuccessMessage">
            <summary>
            Gets or sets the RemovedSuccessMessage property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.RemovedFailedMessage">
            <summary>
            Gets or sets the RemovedFailedMessage property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.InProgress">
            <summary>
            Gets or sets the InProgress property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.ReadyToUploadMessage">
            <summary>
            Gets or sets the ReadyToUploadMessage property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.Abort">
            <summary>
            Gets or sets the Abort property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.Remove">
            <summary>
            Gets or sets the Remove property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.Cancel">
            <summary>
            Gets or sets the Cancel property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.Delete">
            <summary>
            Gets or sets the Delete property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.PauseUpload">
            <summary>
            Gets or sets the PauseUpload property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.Pause">
            <summary>
            Gets or sets the Browse property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.Resume">
            <summary>
            Gets or sets the Resume property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.Retry">
            <summary>
            Gets or sets the Retry property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.UploaderLocale.FileUploadCancel">
            <summary>
            Gets or sets the FileUploadCancel property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.NumericTextBoxLocale">
            <summary>
            Gets or sets the NumericTextBoxLocale property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.NumericTextBoxLocale.IncrementTitle">
            <summary>
            Gets or sets the IncrementTitle property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.NumericTextBoxLocale.DecrementTitle">
            <summary>
            Gets or sets the DecrementTitle property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FormValidatorLocale">
            <summary>
            Gets or sets the FormValidatorLocale property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Required">
            <summary>
            Gets or sets the Required property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Email">
            <summary>
            Gets or sets the Email property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Url">
            <summary>
            Gets or sets the Url property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Date">
            <summary>
            Gets or sets the Date property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.DateIso">
            <summary>
            Gets or sets the DateIso property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Creditcard">
            <summary>
            Gets or sets the Creditcard property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Number">
            <summary>
            Gets or sets the Number property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Digits">
            <summary>
            Gets or sets the Digits property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.MaxLength">
            <summary>
            Gets or sets the MaxLength property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.MinLength">
            <summary>
            Gets or sets the MinLength property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.RangeLength">
            <summary>
            Gets or sets the RangeLength property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Range">
            <summary>
            Gets or sets the Range property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Max">
            <summary>
            Gets or sets the Max property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Min">
            <summary>
            Gets or sets the Min property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Regex">
            <summary>
            Gets or sets the Regex property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Tel">
            <summary>
            Gets or sets the Tel property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.Pattern">
            <summary>
            Gets or sets the Pattern property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FormValidatorLocale.EqualTo">
            <summary>
            Gets or sets the EqualTo property.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.DashboardLayoutEvents">
            <summary>
            Specifies the DashboardLayout events.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.Parent">
            <summary>
            DashboardLayout component reference.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.Changed">
            <summary>
            Triggers whenever the panel’s positions are changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.Created">
            <summary>
            Triggers when the Dashboard Layout is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.Destroyed">
            <summary>
            Triggers when the Dashboard Layout is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.Dragging">
            <summary>
            Triggers when a panel is dragged continuously.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnDragStart">
            <summary>
            Triggers when a panel is about to drag.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnDragStop">
            <summary>
            Triggers when a dragged panel is dropped.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.Resizing">
            <summary>
            Triggers when a panel is being resized continuously.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnResizeStart">
            <summary>
            Triggers when a panel is started to resize.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnResizeStop">
            <summary>
            Triggers when a panel resize ends.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnWindowResize">
            <summary>
            Triggers when re-sizing the window.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.DashboardLayoutPanels">
            <summary>
            Specifies the DashboardLayoutPanels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanels.ChildContent">
            <summary>
            Specifies the child content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanels.Panels">
            <summary>
            Specifies the Panels property.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.DashboardLayoutPanels.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.DashboardLayoutPanel">
            <summary>
            Specifies the DashboardLayoutPanel.
            </summary>
            <summary>
            DashboardLayout panel.
            </summary>
            <summary>
            Defines the DashboardLayout panel.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.GetIdValues(Syncfusion.Blazor.Layouts.DashboardLayoutPanel)">
            <summary>
            Get the panel id values.
            </summary>
            <param name="panel">panel.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.OnInitializedAsync">
            <summary>
            Override the initialized method to customize the panel at server side. Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.OnParametersSetAsync">
            <summary>
            Method invoked when any changes in component state occurs.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ChildContent">
            <summary>
            Defines the ChildContent of the panels.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.HeaderTemplate">
            <summary>
            Defines the HeaderTemplate of the panels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ContentTemplate">
            <summary>
            Defines the ContentTemplate of the panels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.AllowDragging">
            <summary>
            Defines the dragging panel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Col">
            <summary>
            Defines the column value where the panel to be placed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Column">
            <summary>
            Defines the column value where the panel to be placed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Content">
            <summary>
            Defines the template value that should be displayed as the panel's content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.CssClass">
            <summary>
            Defines the CSS class name that can be appended with each panel element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Enabled">
            <summary>
            Defines whether to the panel should be enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Header">
            <summary>
            Defines the template value that should be displayed as the panel's header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Id">
            <summary>
            Defines the id of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.MaxSizeX">
            <summary>
            Specifies the maximum width of the panel in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.MaxSizeY">
            <summary>
            Specifies the maximum height of the panel in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.MinSizeX">
            <summary>
            Specifies the minimum width of the panel in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.MinSizeY">
            <summary>
            Specifies the minimum height of the panel in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Row">
            <summary>
            Defines a row value where the panel should be placed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.SizeX">
            <summary>
            Specifies the width of the panel in the layout in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.SizeY">
            <summary>
            Specifies the height of the panel in the layout in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ZIndex">
            <summary>
            Specifies the z-index of the panel.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.ResizableHandle">
            <summary>
            Defines the dashboard panel’s resize handle position.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.ResizableHandle.SouthEast">
            <summary>
            Specifies south-east direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.ResizableHandle.SouthWest">
            <summary>
            Specifies south-west direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.ResizableHandle.NorthEast">
            <summary>
            Specifies north-east direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.ResizableHandle.NorthWest">
            <summary>
            Specifies north-west direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.ResizableHandle.North">
            <summary>
            Specifies north direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.ResizableHandle.South">
            <summary>
            Specifies south direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.ResizableHandle.East">
            <summary>
            Specifies east direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.ResizableHandle.West">
            <summary>
            Specifies west direction.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.ResizeArgs">
            <summary>
            Defines the resize event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeArgs.Element">
            <summary>
            Specifies the cell element being resized.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeArgs.Event">
            <summary>
            Specifies the original event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeArgs.IsInteracted">
            <summary>
            Specifies whether the event is triggered by user interaction or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeArgs.Name">
            <summary>
            Specifies the Event name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeArgs.Id">
            <summary>
            Specifies Resizing panel id.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.ChangeEventArgs">
            <summary>
            Defines the change event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ChangeEventArgs.AddedPanels">
            <summary>
            Specifies the panel added to the DashboardLayout.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ChangeEventArgs.ChangedPanels">
            <summary>
            Specifies the model values of the position changed panels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ChangeEventArgs.IsInteracted">
            <summary>
            Specifies whether the event is triggered by user interaction or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ChangeEventArgs.RemovedPanels">
            <summary>
            Specifies the panels removed from the DashboardLayout.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.DragStartArgs">
            <summary>
            Defines the dragstart event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DragStartArgs.Cancel">
            <summary>
            Illustrates whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DragStartArgs.Element">
            <summary>
            Specifies the cell element being dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DragStartArgs.Event">
            <summary>
            Specifies the original event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DragStartArgs.Id">
            <summary>
            Specifies dragging panel id.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.DragStopArgs">
            <summary>
            Defines the dragstop event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DragStopArgs.Element">
            <summary>
            Specifies the cell element being dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DragStopArgs.Event">
            <summary>
            Specifies the original event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DragStopArgs.Id">
            <summary>
            Specifies dragged panel id.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.DraggedEventArgs">
            <summary>
            Defines the Drag event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DraggedEventArgs.Element">
            <summary>
            Specifies the cell element being dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DraggedEventArgs.Event">
            <summary>
            Specifies the original event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DraggedEventArgs.Target">
            <summary>
            Specifies the element below the cell element being dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DraggedEventArgs.Id">
            <summary>
            Specifies dragging panel id.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.PanelModel">
            <summary>
            Defines the PanelModel class for Panel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.AllowDragging">
            <summary>
            Defines the dragging panel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.Col">
            <summary>
            Defines the column value where the panel to be placed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.Column">
            <summary>
            Defines the column value where the panel to be placed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.Content">
            <summary>
            Defines the template value that should be displayed as the panel's content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.CssClass">
            <summary>
            Defines the CSS class name that can be appended with each panel element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.Enabled">
            <summary>
            Defines whether the panel should be enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.Header">
            <summary>
            Defines the template value that should be displayed as the panel's header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.Id">
            <summary>
            Defines the id of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.MaxSizeX">
             <summary>
             Specifies the maximum width of the panel in cells count.
            
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.MaxSizeY">
             <summary>
             Specifies the maximum height of the panel in cells count.
            
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.MinSizeX">
             <summary>
             Specifies the minimum width of the panel in cells count.
            
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.MinSizeY">
            <summary>
            Specifies the minimum height of the panel in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.Row">
            <summary>
            Defines a row value where the panel should be placed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.SizeX">
            <summary>
            Specifies the width of the panel in the layout in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.SizeY">
            <summary>
            Specifies the height of the panel in the layout in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.ZIndex">
            <summary>
            Specifies the z-index of the panel.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.HeaderContentId">
            <summary>
            Defines the panels id and the header content element height.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.HeaderContentId.Id">
            <summary>
            Specifies the header content id.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.HeaderContentId.Height">
            <summary>
            Specifies the header content height.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.SfDashboardLayout">
            <summary>
            Specifies the DashboardLayout component.
            </summary>
            <summary>
            Specifies the DashboardLayout component.
            </summary>
            <summary>
            Specifies the DashboardLayout component.
            </summary>
            <summary>
            The DashboardLayout is a grid structured layout component, that helps to create a dashboard with panels.
            Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,
            that allows users to easily place the panels at a desired position within the grid layout.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.OnInitializedAsync">
            <summary>
            Override the initialized method to customize the component at server side. Method invoked when the component is ready to start.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.OnParametersSetAsync">
            <summary>
            Method invoked when any changes in component state occurs.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">firstRender.</param>
            <returns>"Task".</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.ID">
            <summary>
            Sets id attribute for the dashboard element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.ChildContent">
            <summary>
            Specifies the child content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.AllowDragging">
            <summary>
            If allowDragging is set to true, then the DashboardLayout allows you to drag and reorder the panels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.AllowFloating">
            <summary>
            If allowFloating is set to true, then the DashboardLayout will automatically move the panels upwards to fill the empty available cells while dragging or resizing the panels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.AllowResizing">
            <summary>
            If allowResizing is set to true, then the DashboardLayout allows you to resize the panels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.CellAspectRatio">
            <summary>
            Defines the cell aspect ratio of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.CellSpacing">
            <summary>
            Defines the spacing between the panels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.Columns">
            <summary>
            Defines the number of columns to be created in the DashboardLayout.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.DraggableHandle">
             <summary>
             Defines the draggable handle selector which will act as dragging handler for the panels.
            
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.MediaQuery">
            <summary>
            Defines the media query value where the dashboardlayout becomes stacked layout when the resolution meets.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.HtmlAttributes">
            <summary>
            Used to specify additional html attributes such as styles, class, and more to the root element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.Panels">
            <summary>
            Defines the panels property of the DashboardLayout component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.ResizableHandles">
            <summary>
            Defines the resizing handles directions used for resizing the panels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.ShowGridLines">
            <summary>
            Enables or disables the grid lines for the Dashboard Layout panels.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.MovePanel(System.String,System.Int32,System.Int32)">
            <summary>
            Moves the panel in the DashboardLayout.
            </summary>
            <param name="idValue">Specifies the Id value of moved panel.</param>
            <param name="rowValue">Specifies the Row value of moved panel.</param>
            <param name="colValue">Specifies the Column value of moved panel.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.MovePanelAsync(System.String,System.Int32,System.Int32)">
            <summary>
            Moves the panel in the DashboardLayout.
            </summary>
            <param name="idValue">Specifies the Id value of moved panel.</param>
            <param name="rowValue">Specifies the Row value of moved panel.</param>
            <param name="colValue">Specifies the Column value of moved panel.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.RemoveAll">
            <summary>
            Removes all the panels from the DashboardLayout.
            </summary>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.RemoveAllAsync">
            <summary>
            Removes all the panels from the DashboardLayout.
            </summary>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.RemovePanel(System.String)">
            <summary>
            Removes the panel from the DashboardLayout.
            idValue - Specifies the Id value of the removed panel.
            </summary>
            <param name="idValue">idValue.</param>
            <returns>="Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.RemovePanelAsync(System.String)">
            <summary>
            Removes the panel from the DashboardLayout.
            idValue - Specifies the Id value of the removed panel.
            </summary>
            <param name="idValue">idValue.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.ResizePanel(System.String,System.Int32,System.Int32)">
            <summary>
            Resizes the panel in the DashboardLayout.
            </summary>
            <param name="idValue">Specifies the Id value of the resized panel.</param>
            <param name="sizeXValue">Specifies the SizeX value of the resized panel.</param>
            <param name="sizeYValue">Specifies the SizeY value of the resized panel.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.ResizePanelAsync(System.String,System.Int32,System.Int32)">
            <summary>
            Resize the panel in the DashboardLayout.
            </summary>
            <param name="idValue">Specifies the Id value of resize panel.</param>
            <param name="sizeXValue">Specifies the SizeX value of resize panel.</param>
            <param name="sizeYValue">Specifies the SizeY value of resize panel.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.Serialize">
            <summary>
            Returns the panels as object of the DashboardLayout.
            </summary>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.AddPanel(Syncfusion.Blazor.Layouts.PanelModel)">
            <summary>
            Allows to add a panel to the Dashboardlayout.
            panel - Specifies the added panel.
            </summary>
            <param name="panel">panel.</param>
            <returns>="Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.AddPanelAsync(Syncfusion.Blazor.Layouts.PanelModel)">
            <summary>
            Allows to add a panel to the Dashboardlayout.
            panel - Specifies the added panel.
            </summary>
            <param name="panel">panel.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.Refresh">
            <summary>
            Refreshes the DashboardLayout component.
            </summary>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.RefreshAsync">
            <summary>
            Refreshes the DashboardLayout component.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.IsAddPanelCalled">
            <summary>
            protected variable declared.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.UpdatePanelContentHeight(Syncfusion.Blazor.Layouts.PanelModel[],System.Collections.Generic.List{Syncfusion.Blazor.Layouts.HeaderContentId})">
            <summary>
            Update panel position and content height after collision calculation.
            </summary>
            <param name="updatedValues">UpdatedValues.</param>
            <param name="contentId">contentId.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.UpdatedPanelsValues(Syncfusion.Blazor.Layouts.PanelModel[])">
            <summary>
            Update panel position after collision calculation.
            </summary>
            <param name="updatedValues">UpdatedValues.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.SetDragPanelHeight(System.Int32,System.Int32,System.Int32)">
            <summary>
            Update Dashboard height on dragging the panels.
            </summary>
            <param name="row"> Defines the row values.</param>
            <param name="sizeY">Defines the sizeY values.</param>
            <param name="addRows">Increments the row value.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.UpdateMaximumRow(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Update Dashboard height and max row value after dropping of panels.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.CalculateSize(System.Int32[],System.Boolean,System.Boolean,System.Collections.Generic.List{Syncfusion.Blazor.Layouts.HeaderContentId})">
            <summary>
            Update element offset values.
            </summary>
            <param name="offsets"> Defines the Offset values.</param>
            <param name="isMediaquery">Defines the isMediaquery variable.</param>
            <param name="isResized">Defines the isResized variable.</param>
            <param name="contentId">Defines the contentId of panel.</param>
            <exclude/>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.TriggerResizeStart(System.Boolean,System.String,System.String)">
            <summary>
            Trigger Resize Event for Dashboard component.
            </summary>
            <exclude/>
            <param name="isInteracted">Defines the isInteracted variable.</param>
            <param name="idValue">Defines the idValue.</param>
            <param name="name">Defines the name attribute.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.TriggerDragStart(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Trigger Drag start Event for dashboard component.
            </summary>
            <exclude/>
            <param name="idValue">Defines the idValue.</param>
            <param name="row"> Defines the row values.</param>
            <param name="sizeY">Defines the sizeY values.</param>
            <param name="addRows">Increments the row value.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.TriggerDragStop(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Trigger Resizing Event for dashboard component.
            </summary>
            <param name="idValue">Defines the idValue.</param>
            <param name="changedId">Defines the changedId.</param>
            <exclude/>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.TriggerDraging(System.String)">
            <summary>
            Trigger Dragging Event for dashboard component.
            </summary>
            <exclude/>
            <param name="idValue">Specifies the idValue.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.TriggerChange(System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Trigger change Event for Dashboard component.
            </summary>
            <param name="isInteracted">Specifies the isInteracted attribute.</param>
            <param name="changedId">Specifies the changedId of panel.</param>
            <exclude/>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.GetIdValues(Syncfusion.Blazor.Layouts.DashboardLayoutPanel)">
            <summary>
            Update the id values for panels.
            </summary>
            <param name="panel">Specifies the panel.</param>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.SplitterEvents">
            <summary>
            Configure the event handlers to handle the events with Splitter component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.Parent">
            <summary>
            The splitter is a layout user interface (UI) component that splits the layout into multiple panes with resizable and collapsible support.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.OnCollapse">
            <summary>
            Triggers on collapsing the panes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.OnExpand">
            <summary>
            Triggers on expanding the panes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.Collapsed">
            <summary>
            Triggers when the panes get collapsed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.Created">
            <summary>
            Triggers after creating the splitter component with its panes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.Expanded">
            <summary>
            Triggers when the panes get expanded.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.OnResizeStart">
            <summary>
            Triggers when the split pane is started to resize.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.OnResizeStop">
            <summary>
            Triggers when the resizing of split pane is stopped.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.Destroyed">
            <summary>
            The event triggers when the splitter is destroyed with its elements.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.Resizing">
            <summary>
            Triggers when a split pane is being resized.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SplitterEvents.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            /// <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.SplitterPane">
            <summary>
            Configure each pane and its properties to handle the pane behavior.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.ChildContent">
            <summary>
            Gets or sets the content of the splitter pane element.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.ContentTemplate">
            <summary>
            Defines the pane content as a template.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.Collapsed">
            <summary>
            Specifies whether a pane is collapsed on the initial rendering of the splitter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.CollapsedChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.Collapsible">
            <summary>
            Specifies whether a pane is capable to collapse.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.Content">
            <summary>
            Specifies the content of the split pane.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.CssClass">
            <summary>
            One or more custom CSS classes can be specified to the Splitter panes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.Max">
            <summary>
            Specifies the maximum size of a pane. The pane cannot be resized more than the specified maximum limit.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.MaxChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.Min">
            <summary>
            Specifies the minimum size of a pane. The pane cannot be resized less than the specified minimum size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.MinChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.Resizable">
            <summary>
            Specifies the value whether a pane is resizable or not. By default, the Splitter panes are resizable.
            You can disable resize functionality for any specific panes using this property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.Size">
            <summary>
            SizeConfigures the properties for each pane. For horizontal splitter, the size act as width.
            For vertical splitter, the size act as height.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.SizeChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.Visible">
            <summary>
            Specifies the value that represents whether the pane is visible.
            </summary>
            <remarks> If this property is set to `false`, the pane element will not be shown in the DOM. This property can be used to provide conditional pane rendering in Splitter. </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SplitterPane.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SplitterPane.OnParametersSetAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.SplitterPanes">
            <summary>
            Configure one or more panes to construct different layouts.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SplitterPanes.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SplitterPanes.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender"> Set to true if this is the first time OnAfterRender(Boolean) has been invoked.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPanes.ChildContent">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.SplitterTemplates">
            <summary>
            Configure each pane and its properties to handle the pane behavior.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterTemplates.Separator">
            <summary>
            Specifies the separator icon that can be displayed in the Splitter separator.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SplitterTemplates.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.SfSplitter">
            <summary>
            The splitter is a layout user interface (UI) component that splits the layout into multiple panes with resizable and collapsible support.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender"> Set to true if this is the first time OnAfterRender(Boolean) has been invoked.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.ID">
            <summary>
            Specifies the unique identifier.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.ChildContent">
            <summary>
            Sets the content for panes of the Splitter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.CssClass">
            <summary>
            Specifies the CSS class names that defines specific user-defined styles and
            themes to be appended on the root element of the Splitter.
            It is used to customize the Splitter component.
            One or more custom CSS classes can be specified to the Splitter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.EnableReversePanes">
            <summary>
            Specifies the value whether splitter panes are reordered or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left (RTL) direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.Enabled">
            <summary>
            Specifies a Boolean value that indicates whether the component is enabled or disabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.EnablePersistence">
            <summary>
            Enables or disables the persisting component's state between page reloads.
            If enabled, the pane settings of Splitter is persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.Height">
            <summary>
            Specifies the height of the Splitter component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.Orientation">
            <summary>
            Specifies a value that indicates whether to align the split panes horizontally or vertically.
            Set the orientation property as "Horizontal" to create a horizontal splitter that aligns the panes left-to-right.
            Set the orientation property as "Vertical" to create a vertical splitter that aligns the panes top-to-bottom.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.PaneSettings">
            <summary>
            Configures the individual pane behaviors such as content, size, resizable, minimum, maximum validation, collapsible, and collapsed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.Width">
            <summary>
            Specifies the width of the Splitter component. The value can be either in pixel or percentage format.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.HtmlAttributes">
            <summary>
            You can add the additional Html attributes such as id, title, etc., to the splitter element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.AddPane(Syncfusion.Blazor.Layouts.SplitterPane,System.Int32)">
            <summary>
            Allows you to add a pane dynamically to the specified index position by passing the pane properties.
            </summary>
            <param name="paneProperties"> Specifies the pane's properties that apply to new pane.</param>
            <param name="index">Specifies the index where the pane will be inserted.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.CollapseAsync(System.Double)">
            <summary>
            Collapses corresponding pane based on the index is passed.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <param name="index"> Specifies the index value of the corresponding pane to be collapsed.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.Collapse(System.Double)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.ExpandAsync(System.Double)">
            <summary>
            Expands the corresponding pane based on the index is passed.
            </summary>
            <param name="index"> Specifies the index value of the corresponding pane to be Expanded.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.Expand(System.Double)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.RemovePane(System.Int32)">
            <summary>
            Allows you to remove the specified pane dynamically by passing its index value.
            </summary>
            <param name="index">Specifies the index value to remove the corresponding pane.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.AddPaneAsync(Syncfusion.Blazor.Layouts.SplitterPane,System.Int32)">
            <summary>
            Allows you to add a pane dynamically to the specified index position by passing the pane properties.
            </summary>
            <param name="paneProperties"> Specifies the pane's properties that apply to new pane.</param>
            <param name="index">Specifies the index where the pane will be inserted.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.RemovePaneAsync(System.Int32)">
            <summary>
            Allows you to remove the specified pane dynamically by passing its index value.
            </summary>
            <param name="index">Specifies the index value to remove the corresponding pane.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.ToggleAsync(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double})">
            <summary>
            Expand and Collapse the Splitter panes based on the given indexes.
            </summary>
            <remarks> This method allows us to collapse and expand the multiple panes from the application end with a single method call. </remarks>
            <param name="expandIndices"> Specifies the indexes of the corresponding panes to be Expanded. </param>
            <param name="collapseIndices"> Specifies the indexes of the corresponding panes to be Collapsed. </param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <seealso cref="F:Syncfusion.Blazor.Layouts.SplitterPane.collapsible"/>
            <seealso cref="F:Syncfusion.Blazor.Layouts.SplitterPane.collapsed"/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.CreatedEvent">
            <summary>
            Method invoked after component has been created.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.ResizeStartEvent(Syncfusion.Blazor.Layouts.ResizeEventArgs)">
            <summary>
            Method invoked before resizing the separator.
            </summary>
            <param name="args"> Specifies the resize start event arguments.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.ResizingEvent(Syncfusion.Blazor.Layouts.ResizingEventArgs)">
            <summary>
            Method invoked while resizing the separator.
            </summary>
            <param name="args"> Specifies the resize event arguments.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.ResizeStopEvent(Syncfusion.Blazor.Layouts.ResizingEventArgs)">
            <summary>
            Method invoked after resized.
            </summary>
            <param name="args"> Specifies the resize event arguments.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.OnCollapseEvent(System.Int32,Syncfusion.Blazor.Layouts.BeforeExpandEventArgs)">
            <summary>
            Method invoked before collapsing the pane.
            </summary>
            <param name="index"> Specifies the collapsed pane index.</param>
            <param name="args"> Specifies the collapse event arguments.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.OnExpandEvent(Syncfusion.Blazor.Layouts.BeforeExpandEventArgs)">
            <summary>
            Method invoked before expanding the pane.
            </summary>
            <param name="args"> Specifies the expand event arguments.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.CollapsedEvent(Syncfusion.Blazor.Layouts.ExpandedEventArgs)">
            <summary>
            Method invoked after collapsed the pane.
            </summary>
            <param name="args"> Specifies the collapse event arguments.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.UpdateCollapsed(System.Int32,System.Boolean)">
            <summary>
            Method invoked for updating the collapsed property.
            </summary>
            <param name="index"> Specifies the updated pane index.</param>
            <param name="status"> Specifies the corresponding pane collapsed state.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.ExpandedEvent(Syncfusion.Blazor.Layouts.ExpandedEventArgs)">
            <summary>
            Method invoked after expanding the pane.
            </summary>
            <param name="args"> Specifies the expanded event args.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.Orientation">
            <summary>
            Specifies a value that indicates whether to align the split panes horizontally or vertically.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.Orientation.Horizontal">
            <summary>
             Defines Splitter as Horizontal.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.Orientation.Vertical">
            <summary>
            Defines Splitter as Vertical.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.BeforeExpandEventArgs">
            <summary>
            Provides data for the BeforeExpand event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.BeforeExpandEventArgs.Cancel">
            <summary>
            The argument determines whether the action can be canceled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.BeforeExpandEventArgs.Element">
            <summary>
            Returns the root element of the Splitter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.BeforeExpandEventArgs.Event">
            <summary>
            Returns the original event arguments when you trigger the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.BeforeExpandEventArgs.Index">
            <summary>
            Returns the index of a pane.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.BeforeExpandEventArgs.Pane">
            <summary>
            Returns the pane elements.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.BeforeExpandEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.BeforeExpandEventArgs.Separator">
            <summary>
            Returns the corresponding split-bar element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.ExpandedEventArgs">
            <summary>
            Provides data for the Expanded event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ExpandedEventArgs.Element">
            <summary>
            Returns the root element of the Splitter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ExpandedEventArgs.Event">
            <summary>
            Returns the original event arguments when you trigger the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ExpandedEventArgs.Index">
            <summary>
            Returns the index of a pane.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ExpandedEventArgs.Pane">
            <summary>
            Returns the pane elements.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ExpandedEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ExpandedEventArgs.Separator">
            <summary>
            Returns the corresponding split-bar element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.ResizeEventArgs">
            <summary>
            Provides data for a Resize event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeEventArgs.Cancel">
            <summary>
            Controls the resize action when the resize action happens continuously.
            When you set this argument to true, the resize process will be stopped.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeEventArgs.Element">
            <summary>
            Returns the root element of the Splitter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeEventArgs.Event">
            <summary>
            Returns the original event arguments when you trigger the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeEventArgs.Index">
            <summary>
            Returns the index of a pane.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeEventArgs.Pane">
            <summary>
            Contains the corresponding resizing pane.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeEventArgs.Separator">
            <summary>
            Contains the resizing panes separator element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.ResizingEventArgs">
            <summary>
            Provides data for a Resizing event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizingEventArgs.Element">
            <summary>
            Returns the root element of the Splitter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizingEventArgs.Event">
            <summary>
            Returns the original event arguments when you trigger the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizingEventArgs.Index">
            <summary>
            Returns the index of a pane.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizingEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizingEventArgs.Pane">
            <summary>
            Contains the corresponding resizing pane.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizingEventArgs.PaneSize">
            <summary>
            CContains the pane size when it resizes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizingEventArgs.Separator">
            <summary>
            Contains the resizing panes separator element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.PanePropertiesModel">
            <summary>
            Interface for a class PaneProperties.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanePropertiesModel.Collapsed">
            <summary>
            Specifies whether a pane is collapsed on the initial rendering of the splitter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanePropertiesModel.Collapsible">
            <summary>
            Specifies whether a pane is capable to collapse.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanePropertiesModel.Content">
            <summary>
            Specifies the content of the split pane.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanePropertiesModel.CssClass">
            <summary>
            Specifies the CSS class names that defines specific user-defined styles and themes
            to be appended on the corresponding pane of the Splitter.
            It is used to customize the Splitter component panes.
            One or more custom CSS classes can be specified to the Splitter panes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanePropertiesModel.Max">
            <summary>
            Specifies the maximum size of a pane. The pane cannot be resized more than the specified maximum limit.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanePropertiesModel.Min">
            <summary>
            Specifies the minimum size of a pane. The pane cannot be resized less than the specified minimum size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanePropertiesModel.Resizable">
            <summary>
            Specifies the value whether a pane is resizable or not. By default, the Splitter panes are resizable.
            You can disable resize functionality for any specific panes using this property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanePropertiesModel.Size">
            <summary>
            Configures the properties for each pane. For horizontal splitter, the size act as width.
            For vertical splitter, the size act as height.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.Internal.PaneSetting">
            <summary>
            Specifies PaneSettings value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.Internal.PaneSetting.Collapsed">
            <summary>
            Specifies whether a pane is collapsed on the initial rendering of the splitter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.Internal.PaneSetting.Max">
            <summary>
            Specifies the maximum size of a pane. The pane cannot be resized more than the specified maximum limit.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.Internal.PaneSetting.Min">
            <summary>
            Specifies the minimum size of a pane. The pane cannot be resized less than the specified minimum size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.Internal.PaneSetting.Size">
            <summary>
            Configures the properties for each pane. For horizontal splitter, the size act as width.
            For vertical splitter, the size act as height.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.Internal.Pane">
            <summary>
            Defines the splitter pane.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.Internal.Pane.PaneIndex">
            <summary>
            Specifies the current pane index.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.Internal.Pane.PaneSetting">
            <summary>
            Defines the PaneSettings.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.Internal.Panes">
            <summary>
            Used to render the panes.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.Internal.Separator">
            <summary>
            Class for create the separator.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.Internal.Separator.PaneIndex">
            <summary>
            Defines the current pane index.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.Internal.Separator.PaneSetting">
            <summary>
            Defines the current pane PaneSettings value.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.ListViewEffect">
            <summary>
            An enum type that denotes the animation effects of the ListView. Available options are as follows None, SlideLeft, SlideDown, Zoom, Fade.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.ListViewEffect.None">
            <summary>
            Navigation of the nested list item occurs with out any animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.ListViewEffect.SlideLeft">
            <summary>
            Navigation of the nested list item occurs with a slide left animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.ListViewEffect.SlideDown">
            <summary>
            Navigation of the nested list item occurs with a slide down animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.ListViewEffect.Zoom">
            <summary>
            Navigation of the nested list item occurs with a zooming animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.ListViewEffect.Fade">
            <summary>
            Navigation of the nested list item occurs with a fading animation effect.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.CheckBoxPosition">
            <summary>
            An enum type that denotes the position of checkbox of the ListView. Available options are as follows Left and Right.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.CheckBoxPosition.Left">
            <summary>
            Positions the checkbox to the left of the text content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.CheckBoxPosition.Right">
            <summary>
            Positions the checkbox to the right of the text content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.SortOrder">
            <summary>
            An enum type that denotes the sort order of the ListView. Available options are as follows None, Ascending, Descending.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.SortOrder.None">
            <summary>
            The list view items will be displayed without performing any sorting.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.SortOrder.Ascending">
            <summary>
            Sorts the list view items will be displayed in the ascending order.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.SortOrder.Descending">
            <summary>
            Sorts the list view items will be displayed in the descending order.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.ListBaseFoundation`1">
            <exclude/>
            <summary>
            A list base component for all the Syncfusion Blazor List dependant components to implement the common functionalities.
            </summary>
            <typeparam name="T">The first generic type parameter.</typeparam>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.Internal.ListBaseFoundation`1.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.Internal.ListBaseFoundation`1.MapSettings(Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel{`0})">
            <summary>
            maps the default setting for the list generated.
            </summary>
            <param name="options">Specifies mapping options.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.Internal.ListBaseFoundation`1.GetConvertedData(`0,System.String)">
            <summary>
            get the converted data using field values.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.Internal.ListBaseFoundation`1.GetSortedData">
            <summary>
            Sorts the given list items with complex datasource.
            </summary>
            <returns> Returns the sorted data.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.Internal.ListBaseFoundation`1.GetSortedArrayData">
            <summary>
            Sorts the given list items with primitive datasource.
            </summary>
            <returns> Returns the sorted array data.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.Internal.ListBaseFoundation`1.ComposeGroupData">
            <summary>
            groups the given list items with complex datasource.
            </summary>
            <returns> Returns the grouped data.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.Internal.ListBaseFoundation`1.InvokeItemCreate(`0,Syncfusion.Blazor.Lists.Internal.FieldsValueMapping{System.Collections.Generic.List{`0}},System.Boolean)">
            <summary>
            ItemCreated event invoke method.
            </summary>
            <param name="item">Specifies the item details.</param>
            <param name="mappedData">Specifies the mapped data.</param>
            <param name="isCreated">Specified the created parameter.</param>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.CreateListFromComplex`1">
            <exclude/>
            <summary>
            Component to create list from complex data for executing complex list items common functionalities.
            </summary>
            <typeparam name="TValue">The generic type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.CreateListFromComplex`1.ChildContent">
            <summary>
            Defines the content which has to be passed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.CreateListFromComplex`1.LiElementPosition">
            <summary>
            Defines the li element position.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.CreateListFromComplex`1.ListId">
            <summary>
            Defines the id property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.CreateListFromComplex`1.ListBase">
            <summary>
            Gets or sets ListBase component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.CreateListFromComplex`1.MappedData">
            <summary>
            Gets or sets MappedData.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.CreateListFromComplex`1.ListIsGroupItem">
            <summary>
            Gets or sets IsGroupItem field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.CreateListFromComplex`1.Data">
            <summary>
            Gets or sets Data field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.CreateListFromComplex`1.GroupItemData">
            <summary>
            Gets or sets GroupItemData field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.CreateListFromComplex`1.ListIsItemTemplate">
            <summary>
            Gets or sets the item template field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.CreateListFromComplex`1.ListIsGroupTemplate">
            <summary>
            Gets or sets the group item template field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.CreateListFromComplex`1.RandomID">
            <summary>
            Gets or sets the random id field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.CreateListFromComplex`1.Index">
            <summary>
            Gets or sets the index field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.CreateListFromComplex`1.ListClassNames">
            <summary>
            Gets or sets the class names field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.CreateListFromComplex`1.SfListBaseOptionModel">
            <summary>
            Gets or sets the ListBaseOptionModel field.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.Internal.CreateListFromComplex`1.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.Internal.CreateListFromComplex`1.OnParametersSetAsync">
            <summary>
            Method invoked when any changes in component state occurs.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.Internal.CreateListFromComplex`1.OnParametersSet">
            <summary>
            Method invoked when any changes in component state occurs.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.Internal.CreateListFromComplex`1.OnAfterRender(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.ListBaseFields`1">
            <summary>
            List base fields class.
            </summary>
            <typeparam name="TValue">The generic type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseFields`1.ListBase">
            <summary>
            Specifies that fields that mapped in DataSource.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseFields`1.Child">
            <summary>
            Specifies that fields that mapped in Child.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseFields`1.Enabled">
            <summary>
            Specifies that fields that mapped in Enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseFields`1.GroupBy">
            <summary>
            Specifies that fields that mapped in GroupBy.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseFields`1.HtmlAttributes">
            <summary>
            Specifies that fields that mapped in HtmlAttributes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseFields`1.IconCss">
            <summary>
            Specifies that fields that mapped in IconCss.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseFields`1.Id">
            <summary>
            Specifies that fields that mapped in Id.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseFields`1.IsChecked">
            <summary>
            Specifies that fields that mapped in IsChecked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseFields`1.IsVisible">
            <summary>
            Specifies that fields that mapped in IsVisible.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseFields`1.Text">
            <summary>
            Specifies that fields that mapped in Text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseFields`1.Tooltip">
            <summary>
            Specifies that fields that mapped in Tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseFields`1.Value">
            <summary>
            Specifies that fields that mapped in Value.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.Internal.ListBaseFields`1.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.Internal.ListBaseFields`1.ComponentDispose">
            <summary>
            The virtual method to override the Dispose method at component side.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.Position">
            <summary>
            An enum type that denotes the expand and collapse icon positions. Available options are as follows Right, Left.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.Internal.Position.Right">
            <summary>
            Positions the expand collapse icon to the right end of the item.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.Internal.Position.Left">
            <summary>
            Positions the expand collapse icon to the left end of the item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.ListElementReference">
            <exclude/>
            <summary>
            Class for data of each li element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListElementReference.ElementId">
            <summary>
            It is used to denote the element Id.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListElementReference.Key">
            <summary>
            It is used to denote the datasource key.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListElementReference.IsChecked">
            <summary>
            It is used to check whether the element is checked or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListElementReference.IsInteracted">
            <summary>
            It is used to check whether the element is interacted or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListElementReference.Level">
            <summary>
            It denotes the level of the nested list items.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.ClassList">
            <summary>
            An class that holds item class list.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ClassList.Check">
            <summary>
            Specifies the check.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ClassList.Checked">
            <summary>
            It is used to check the element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ClassList.Disabled">
            <summary>
            It is used to disable the element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ClassList.Group">
            <summary>
            It is used to group the elements.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ClassList.HasChild">
            <summary>
            It is used to check whether the li element has class child or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ClassList.Icon">
            <summary>
            It is used to specify the icons for list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ClassList.IconWrapper">
            <summary>
            It is used to specify the icon wrapper class.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ClassList.Level">
            <summary>
            It is used to specify the level of the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ClassList.Li">
            <summary>
            It is used to specify the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ClassList.Text">
            <summary>
            It is used to specify the text for list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ClassList.TextContent">
            <summary>
            It is used to specify the text content for list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ClassList.Ul">
            <summary>
            It is used to specify UI element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.FieldsValueMapping`1">
            <summary>
            An class that holds the field values Mapping.
            </summary>
            <typeparam name="T">The generic type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.FieldsValueMapping`1.Child">
            <summary>
            Specifies the Child field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.FieldsValueMapping`1.GroupBy">
            <summary>
            Specifies the GroupBy field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.FieldsValueMapping`1.IconCss">
            <summary>
            Specifies the IconCss field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.FieldsValueMapping`1.Id">
            <summary>
            Specifies the Id field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.FieldsValueMapping`1.Text">
            <summary>
            Specifies the Text field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.FieldsValueMapping`1.Value">
            <summary>
            Specifies the Value field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.FieldsValueMapping`1.Tooltip">
            <summary>
            Specifies the Tooltip field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.FieldsValueMapping`1.Enabled">
            <summary>
            Specifies the Enabled field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.FieldsValueMapping`1.IsChecked">
            <summary>
            Specifies the IsChecked field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.FieldsValueMapping`1.IsVisible">
            <summary>
            Specifies the IsVisible field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.FieldsValueMapping`1.HtmlAttributes">
            <summary>
            Specifies the HtmlAttributes field.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.ListItemBase`1">
            <summary>
            An class that holds list Item properties related arguments.
            </summary>
            <typeparam name="T">The generic type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListItemBase`1.ListBase">
            <summary>
            Gets or sets ListBase component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListItemBase`1.MappedData">
            <summary>
            Gets or sets MappedData.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListItemBase`1.IsGroupItem">
            <summary>
            Gets or sets IsGroupItem field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListItemBase`1.Data">
            <summary>
            Gets or sets Data field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListItemBase`1.GroupItemData">
            <summary>
            Gets or sets GroupItemData field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListItemBase`1.IsItemTemplate">
            <summary>
            Gets or sets the item template field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListItemBase`1.IsGroupTemplate">
            <summary>
            Gets or sets the group item template field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListItemBase`1.RandomID">
            <summary>
            Gets or sets the random id field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListItemBase`1.Index">
            <summary>
            Gets or sets the index field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListItemBase`1.ClassNames">
            <summary>
            Gets or sets the class names field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListItemBase`1.ListBaseOptionModel">
            <summary>
            Gets or sets the ListBaseOptionModel field.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.ListCommonBase`1">
            <summary>
            This class holds listbase properties related arguments.
            </summary>
            <typeparam name="T">The generic type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListCommonBase`1.ListParent">
            <summary>
            Gets or sets ListParent component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListCommonBase`1.DataSource">
            <summary>
            Gets or sets DataSource field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListCommonBase`1.ListBaseOptionModel">
            <summary>
            Gets or sets ListBaseOptionModel field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListCommonBase`1.Level">
            <summary>
            Gets or sets ListBaseOptionModel field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListCommonBase`1.ItemCreating">
            <summary>
            Specifies the callback function that triggered before each list creation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListCommonBase`1.ItemCreated">
            <summary>
            Specifies the callback function that triggered after each list creation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListCommonBase`1.ItemTemplatePropertyName">
            <summary>
            Gets or sets item template property name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListCommonBase`1.GroupTemplatePropertyName">
            <summary>
            Gets or sets group template property name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListCommonBase`1.StartingPosition">
            <summary>
            Gets or sets starting position.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListCommonBase`1.LiElementHeight">
            <summary>
            Gets or sets list element height.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListCommonBase`1.EndPosition">
            <summary>
            Gets or sets end position.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListCommonBase`1.Id">
            <summary>
            Gets or sets Id.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListCommonBase`1.VirtualScrolling">
            <summary>
            Gets or sets the virtual scrolling.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListCommonBase`1.CheckBoxPosition">
            <summary>
            Gets or sets the checkbox position.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListCommonBase`1.Template">
            <summary>
            Gets or sets the template.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListCommonBase`1.GroupTemplate">
            <summary>
            Gets or sets the group template.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs`1">
            <summary>
            An class that holds item created event arguments.
            </summary>
            <typeparam name="T">The generic type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs`1.CurData">
            <summary>
            Specifies the current data arguement.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs`1.ListsDataSource">
            <summary>
            Specifies the datasource arguement.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs`1.ListsFields">
            <summary>
            Specifies the fields arguement.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs`1.ListsItem">
            <summary>
            Specifies the item arguement.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs`1.ListsOptions">
            <summary>
            Specifies the options arguement.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs`1.Text">
            <summary>
            Specifies the text arguement.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ItemCreatedArgs`1.Name">
            <summary>
            Specifies the name arguement.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1">
            <summary>
            Basic ListBase Options.
            </summary>
            <typeparam name="T">The generic type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.IsSingleLevel">
            <summary>
            Specifies to data is singel level or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.AriaAttributes">
            <summary>
            Specifies the aria attributes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.ExpandCollapse">
            <summary>
            Specifies to show collapsible icon.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.ExpandIconClass">
            <summary>
            Specifies the customizable expand icon class.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.ExpandIconPosition">
            <summary>
            Specifies the expand/collapse icon position.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.Fields">
            <summary>
            Specifies that fields that mapped in dataSource.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.GroupTemplate">
            <summary>
            Specifies the group header template.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.HeaderTemplate">
            <summary>
            Specifies the ListView header template.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.ItemClass">
            <summary>
            Specifies when need to add additional LI item class.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.ItemCreated">
            <summary>
            Specifies the callback function that triggered after each list creation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.ItemCreating">
            <summary>
            Specifies the callback function that triggered before each list creation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.ModuleName">
            <summary>
            Specifies the customized class name based on their module name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.ShowCheckBox">
            <summary>
            Specifies to show checkBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.ShowIcon">
            <summary>
            Specifies to show icon.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.SortOrder">
            <summary>
            Specifies the sort order.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListBaseOptionModel`1.Template">
            <summary>
            Specifies the item template.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.CreateListFromPrimitive`1">
            <exclude/>
            /// <summary>
            Component for executing primitive list items common functionalities.
            </summary>
            <typeparam name="TValue">The generic type parameter.</typeparam>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.Internal.CreateListFromPrimitive`1.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.Internal.CreateListFromPrimitive`1.GetAttributes">
            <summary>
            Method used for get attributes.
            </summary>
            <returns>return attributes for ul element.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.PrimitiveListItem`1">
            <summary>
            Component to create list from primitive data for executing primitive list items common functionalities.
            </summary>
            <typeparam name="TValue">The generic type parameter.</typeparam>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.Internal.PrimitiveListItem`1.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.Internal.PrimitiveListItem`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>Task.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.SfListBase`1">
            <exclude/>
            <summary>
            A list base component for all the Syncfusion Blazor List dependant components to implement the common functionalities.
            </summary>
            /// <typeparam name="TValue">The generic type parameter.</typeparam>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.Internal.SfListBase`1.itemCreating">
            <summary>
            ItemCreating event of the listbase which triggers before creating every item of the list.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Lists.Internal.SfListBase`1.itemCreated">
            <summary>
            ItemCreating event of the listbase which triggers after every item of the list created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.SfListBase`1.ChildContent">
            <exclude/>
            <summary>
            Update child content from parent component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.Internal.SfListBase`1.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.DefaultListBaseOptions`1">
            <exclude/>
            <summary>
            List base default component model classes.
            </summary>
            <typeparam name="T">The generic type parameter.</typeparam>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.Internal.DefaultListBaseOptions`1.GetDefaultFieldsMapping">
            <summary>
             maps and returns default listbase fields values to the listbase fields
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.Internal.DefaultListBaseOptions`1.GetModuleClassList(System.String)">
            <summary>
            sets and returns default classlist for listbase.
            </summary>
            <param name="moduleName">Specifies the module name.</param>
            <returns>returns the module class list.</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.CheckedItemDetails.ElementId">
            <summary>
            It is used to denote checked Element id details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.CheckedItemDetails.Key">
            <summary>
            It is used to denote the datasource key.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.Internal.ListElementDetails`1">
            <exclude/>
            <summary>
            Referring given li element data details.
            </summary>
            <typeparam name="T">The generic type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListElementDetails`1.Child">
            <summary>
            Denotes the nested child data of the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListElementDetails`1.Id">
            <summary>
            Denotes the id of the item element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListElementDetails`1.ItemData">
            <summary>
            Denotes the data of the list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListElementDetails`1.ItemText">
            <summary>
            Denotes the list item text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.Internal.ListElementDetails`1.Index">
            <summary>
            Denotes index of the list element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.SfListView`1">
            <summary>
            Component for executing complex list items common functionalities.
            </summary>
            <typeparam name="TValue">The generic type parameter.</typeparam>
            <summary>
            Configure member properties of the ListView component.
            </summary>
            <summary>
            The SfListView control represents the data in interactive hierarchical structure interface across different layouts or views,
            that also has features such as data-binding, template, grouping and virtualization.
            </summary>
            <summary>
            The SfListView control represents the data in interactive hierarchical structure interface across different layouts or views,
            that also has features such as data-binding, template, grouping and virtualization.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.OnParametersSetAsync">
            <summary>
            Method invoked when any changes in component state occurs.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>Task.</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.ID">
            <summary>
            The `ID` property is used as a key to identify our element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.ChildContent">
            <exclude/>
            <summary>
            Update child content from parent component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.Animation">
            <summary>
            The `Animation` property provides an option to apply different
             animations to the ListView component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.CheckBoxPosition">
            <summary>
            The `CheckBoxPosition` is used to set the position of the check box in a list item.
            By default, the `checkBoxPosition` is Left, which will appear before the text content in a list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.CssClass">
            <summary>
            The `CssClass` property is used to add a user-preferred class name in the root element of the ListView,
             using which you can customize the component (both CSS and functionality customization).
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.DataSource">
            <summary>
            The `DataSource` provides the data to render the ListView component which is mapped with the fields of ListView.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.ListDataSource">
            <summary>
            This dataSource property is used for internal functionalities.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.CheckedItems">
            <summary>
            The `CheckedItems` property is used to set the item that need to be checked or
            get the details of items that are currently checked in the ListView component.
            The `CheckedItems` property depends upon the value of `showCheckBox` property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.Enabled">
            <summary>
            If `Enabled` is set to true, the list items will be enabled. 
            You can disable the component using this property by setting its value as false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.EnableVirtualization">
            <summary>
            If `EnableVirtualization` is set to true, the ListView’s performance will improve when loading a large amount of data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.ListFields">
            <summary>
            The `Fields` is used to map keys from the dataSource which extracts the appropriate data from the dataSource
             with specified mapped with the column fields to render the ListView.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.HeaderTitle">
            <summary>
            The `HeaderTitle` is used to set the title of the ListView component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.Height">
            <summary>
            Defines the height of the ListView component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.HtmlAttributes">
            <summary>
            The `HtmlAttributes` allows additional attributes such as id, class, etc., and
             accepts n number of attributes in a key-value pair format.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.Query">
            <summary>
            The `Query` is used to fetch specific data from the data source by using the where and select keywords.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.ShowCheckBox">
            <summary>
            If `ShowCheckBox` is set to true, the checkbox will  be shown or hidden.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.ShowHeader">
            <summary>
            If `ShowHeader` is set to true, the header of the ListView component will  be shown or hidden.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.ShowIcon">
            <summary>
            If `ShowIcon` is set to true, the icon of the list item will  be shown or hidden.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.SortOrder">
            <summary>
            The `SortOrder` is used to sort the data source. The available type of sort orders are,
             `None` - The data source will not be sorted.
             `Ascending` - The data source will be sorted in ascending order.
             `Descending` - The data source will be sorted in descending order.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.Width">
            <summary>
            Defines the width of the ListView component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.GroupTemplate">
            <summary>
            The ListView has an option to custom design the group header title with the help of the groupTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.HeaderTemplate">
            <summary>
            The ListView has an option to custom design the ListView header title with the help of the headerTemplate property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.Template">
            <summary>
            The ListView supports customizing the content of each list item with the help of template property.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.DisableItem(`0)">
            <summary>
            Disables the list items by passing the Id and text fields.
            listItem like fields: TValue { fieldName: fieldValue }.
            </summary>
            <param name="listItem">Specifies the list item arguement.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.DisableItemAsync(`0)">
            <summary>
            Disables the list items by passing the Id and text fields.
            listItem like fields: TValue { fieldName: fieldValue }.
            </summary>
            <param name="listItem">Specifies the list item arguement.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.EnableItem(`0)">
            <summary>
            Enables the disabled list items by passing the Id and text fields.
            listItem like fields: TValue { fieldName: fieldValue }.
            </summary>
            <param name="listItem">Specifies the list item arguement.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.EnableItemAsync(`0)">
            <summary>
            Enables the disabled list items by passing the Id and text fields.
            listItem like fields: TValue { fieldName: fieldValue }.
            </summary>
            <param name="listItem">Specifies the list item arguement.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.GetSelectedItem">
            <summary>
            Gets the details of the currently selected item from the list items.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.GetCheckedItems">
            <summary>
            Gets the details of the currently checked item from the list items.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.GetCheckedItemsAsync">
            <summary>
            Gets the details of the currently checked item from the list items.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.Remove(`0)">
            <exclude/>
            <summary>
            Remove Element from datasource based on given item details
            element like fields: TValue { fieldName: fieldValue }.
            </summary>
            <param name="listItem">Specifies the list item arguement.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.RemoveItems(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Removes item(s) from the ListView by passing the array of field objects.
            listItems like fields: TValue { fieldName: fieldValue }.
            </summary>
            <param name="listItems">Specifies the list items arguement.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.CheckItems(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Check the items in ListView
            To check the specific listItem by passing the fields like : TValue { fieldName: fieldValue }
            To check all the listItem by passing empty argument.
            </summary>
            <param name="listItems">Specifies the list items arguement.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.CheckItemsAsync(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Check the items in ListView
            To check the specific listItem by passing the fields like : TValue { fieldName: fieldValue }
            To check all the listItem by passing empty argument.
            </summary>
            <param name="listItems">Specifies the list items arguement.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.UncheckItems(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Uncheck the items in ListView.
            To uncheck the specific listItem by passing the fields like : TValue { fieldName: fieldValue }.
            To uncheck all the listItem by passing empty argument.
            </summary>
            <param name="listItems">Specifies the list item arguement.</param>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.UncheckItemsAsync(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Uncheck the items in ListView.
            To uncheck the specific listItem by passing the fields like : TValue { fieldName: fieldValue }.
            To uncheck all the listItem by passing empty argument.
            </summary>
            <param name="listItems">Specifies the list item arguement.</param>
            <returns>Task.</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.DataManager">
            <exclude/>
            <summary>
            Creating instance of object of DataManager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.ElementRef">
            <summary>
            Creating the element reference.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.SfListView`1.PersistenceValues">
            <summary>
            Referring the Persistence values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.PersistenceValues.AllCheckedItems">
            <summary>
            The `AllCheckedItems` property is used to set the list that need to be checked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.PersistenceValues.CssClass">
            <summary>
            The `CssClass` property is used to add a user-preferred class name in the root element of the ListView,
             using which we can customize the component (both CSS and functionality customization).
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.PersistenceValues.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.PersistenceValues.Enable">
            <summary>
            If `Enabled` set to true, the list items are enabled.
            And, we can disable the component using this property by setting its value as false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SfListView`1.PersistenceValues.SortOrder">
            <summary>
            The `SortOrder` is used to sort the data source. The available type of sort orders are,
             `None` - The data source is not sorting.
             `Ascending` - The data source is sorting with ascending order.
             `Descending` - The data source is sorting with descending order.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.TriggerActionComplete(System.Collections.Generic.IEnumerable{`0})">
            <exclude/>
            <summary>
            trigger action complete event.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.ListChildDataSource(Syncfusion.Blazor.Lists.Internal.ListElementReference)">
            <exclude/>
            <summary>
            Rendering Nested List.
            </summary>
            <param name="reference"> specifies the reference parameter.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.UpdateLiElementHeight(System.Double)">
            <exclude/>
            <summary>
            Update Li element height.
            </summary>
            <param name="height"> specifies the reference parameter.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.VirtualScrolling(System.Int32)">
            <exclude/>
            <summary>
            Update Li element based on scrolling Difference.
            </summary>
            <param name="listDifference"> specifies the list difference.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.GetComponenetHeight(System.Double)">
            <exclude/>
            <summary>
            Rendering the LI element based on window height in virtual scrolling.
            </summary>
            <param name="componentHeight"> specifies the component height.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.UpdateData(System.Boolean,System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.RecursiveUpdateData(System.Collections.Generic.List{`0},System.Boolean,System.String)">
            <summary>
             Specifies the method RecursiveUpdateData
            </summary>
            <param name="newDataSource"></param>
            <param name="isChecked"></param>
            <param name="id"></param>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.TriggerBackEvent(Syncfusion.Blazor.Lists.Internal.ListElementReference)">
            <exclude/>
            <summary>
            Back event handler invoke method.
            </summary>
            <param name="args"> specifies the list element arguements.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.TriggerClickEvent(Syncfusion.Blazor.Lists.Internal.ListElementReference)">
            <exclude/>
            <summary>
            Click event handler invoke method.
            </summary>
            <param name="args"> specifies the list element arguements.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.GetPropertyValue(`0,System.String)">
            <summary>
            get fields property values from TValue tye data source.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.UpdateTemplate(System.String,System.Object)">
            <summary>
            Update the template values.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.GetPropertyStyle">
            <summary>
            Get style Attributes value.
            </summary>
            <returns> returns property styles.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.UpdateStyle(System.String,System.String)">
            <summary>
            Get style Attributes value.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.SerializeModel(Syncfusion.Blazor.Lists.SfListView{`0})">
            <summary>
            Updating the persisting values to our component properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.GetProperties">
            <summary>
            Get Public property information.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.UpdateVirtualIndex">
            <summary>
            Updates the virtual index value.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.UpdateListViewDataSource(System.Boolean,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Updates listview datasource.
            </summary>
            <param name="updateSortedData"> specifies the update sorted data.</param>
            <param name="dataSource"> specifies the data source.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.UpdateAfterRenderDataSource">
            <summary>
            Updating DataSource After rendering the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.DyanamicPropertyUpdate">
            <summary>
            Updates the virtual index value.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.PersistProperties(Syncfusion.Blazor.Lists.SfListView{`0}.PersistenceValues)">
            <summary>
            Defines the properties of persisting component's state between page reloads.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.SetLocalStorage(System.String,System.String)">
            <summary>
            Update the Persistence value to local storage.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.GetSortedData(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Get the sorted data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.SfListView`1.GetLiElementData(Syncfusion.Blazor.Lists.Internal.ListElementReference,System.Boolean)">
            <summary>
            Returns list element related data based on given elementId and datasource key.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.ListViewEvents`1">
            <summary>
            Configure handlers to handle the events with the ListView component.
            </summary>
            <typeparam name="TValue">The generic type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewEvents`1.BaseParent">
            <summary>
            Specifies the base parent.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewEvents`1.OnActionBegin">
            <summary>
            Triggers when each ListView action begins.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewEvents`1.OnActionComplete">
            <summary>
            Triggers when each ListView action is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewEvents`1.OnActionFailure">
            <summary>
            Triggers when the data fetch request from the remote server fails.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewEvents`1.Clicked">
            <summary>
            Triggers when a list item in the component is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewEvents`1.OnBack">
            <summary>
            Triggers when the back icon is clicked in the nested list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewEvents`1.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewEvents`1.Destroyed">
            <summary>
            Triggers when the component is destroyed.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.ListViewEvents`1.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.ListViewFieldSettings`1">
            <summary>
            Configure handlers to handle the field settings with the ListView component.
            </summary>
            <typeparam name="TValue">The generic type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewFieldSettings`1.Child">
            <summary>
            The `Child` property is used for nested navigation of listed items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewFieldSettings`1.Enabled">
            <summary>
            Specifies the enabled state of the ListView component.
            You can disable the component using this property by setting its value as false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewFieldSettings`1.GroupBy">
            <summary>
            The `GroupBy` property is used to wraps the ListView elements into a group based on the field value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewFieldSettings`1.HtmlAttributes">
            <summary>
            The `HtmlAttributes` allows additional attributes such as id, class, etc., and
             accepts n number of attributes in a key-value pair format.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewFieldSettings`1.IconCss">
            <summary>
            The `IconCss` is used to customize the icon fo the list items dynamically.
             You can add a specific image to the icons using the `iconCss` property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewFieldSettings`1.Id">
            <summary>
            Specifies the id field mapped in data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewFieldSettings`1.IsChecked">
            <summary>
            The `IsChecked` property is used to check whether the list items are in a checked state or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewFieldSettings`1.ListIsVisible">
            <summary>
            The `IsVisible` property is used to check whether the list items are in visible state or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewFieldSettings`1.Text">
            <summary>
            The `Text` property is used to map the text value from the data source for each list item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewFieldSettings`1.Tooltip">
            <summary>
            The `Tooltip` is used to display the information about the target element while hovering on list items.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.ListViewFieldSettings`1.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.ListViewTemplates`1">
            <summary>
            Configure templates of the ListView component.
            </summary>
            <typeparam name="TValue">The generic type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewTemplates`1.Template">
            <summary>
            The ListView component supports to customize the content of each list items with the help of Template property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewTemplates`1.GroupTemplate">
            <summary>
            Accepts the template design and assigns it to the group headers present in the ListView.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ListViewTemplates`1.HeaderTemplate">
            <summary>
            The ListView has an option to custom design the ListView header title with the help of HeaderTemplate property.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Lists.ListViewTemplates`1.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.ClickEventArgs`1">
            <summary>
            The class that holds click event arguments.
            </summary>
            <typeparam name="T">The generic type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ClickEventArgs`1.ItemData">
            <summary>
            It denotes the clicked item dataSource JSON object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ClickEventArgs`1.Name">
            <summary>
            It denotes the event name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ClickEventArgs`1.IsChecked">
            <summary>
            It is used to check whether the element is checked or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ClickEventArgs`1.Index">
            <summary>
            It denotes the index position of cliked element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ClickEventArgs`1.IsInteracted">
            <summary>
            Specifies that event has triggered by user interaction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ClickEventArgs`1.Text">
            <summary>
            It denotes the selected item text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ClickEventArgs`1.Cancel">
            <summary>
            It denotes the cancel argument.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ClickEventArgs`1.Level">
            <summary>
            It denotes the level of the nested list items.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.BackEventArgs`1">
            <summary>
            The class that holds back event arguments.
            </summary>
            <typeparam name="T">The generic type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.BackEventArgs`1.IsInteracted">
            <summary>
            Specifies that event has triggered by user interaction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.BackEventArgs`1.Level">
            <summary>
            It denotes the level of the nested list items.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.ActionEventsArgs">
            <summary>
            The class that holds action event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ActionEventsArgs.Count">
            <summary>
            Return the total number of records.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ActionEventsArgs.Name">
            <summary>
            Specify the Event Name.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.ActionFailureEventsArgs">
            <summary>
            The class that holds action failure event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ActionFailureEventsArgs.Error">
            <summary>
            It denotes exception error.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.AnimationSettings">
            <summary>
            An interface that holds animation settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.AnimationSettings.Duration">
            <summary>
            It is used to specify the time duration of transform object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.AnimationSettings.Easing">
            <summary>
            It is used to specify the easing effect applied while transform.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.AnimationSettings.Effect">
            <summary>
            It is used to specify the effect which is shown in sub list transform.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.SelectedItems`1">
            <summary>
            An interface that holds list selected item.
            </summary>
            <typeparam name="T">The generic type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SelectedItems`1.Data">
            <summary>
            Specifies the selected item dataSource collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SelectedItems`1.Index">
            <summary>
            Specifies index of the selected element.
            Available only in virtualization.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SelectedItems`1.ParentId">
            <summary>
            Specifies the hierarchical parent id collection of the current view.
            Available only in nested list with checkbox enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.SelectedItems`1.Text">
            <summary>
            Specifies the selected item text collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.AriaAttributesMapping">
            <summary>
            An class that holds item aria attributes mapping.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.AriaAttributesMapping.GroupItemRole">
            <summary>
            Specifies the item aria attributes mapping for GroupItemRole.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.AriaAttributesMapping.ItemRole">
            <summary>
            Specifies the item aria attributes mapping for ItemRole.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.AriaAttributesMapping.ItemText">
            <summary>
            Specifies the item aria attributes mapping for ItemText.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.AriaAttributesMapping.Level">
            <summary>
            Specifies the item aria attributes mapping for Level.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.AriaAttributesMapping.ListRole">
            <summary>
            Specifies the item aria attributes mapping for ListRole.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.AriaAttributesMapping.WrapperRole">
            <summary>
            Specifies the item aria attributes mapping for WrapperRole.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Lists.ComposedItemModel`1">
            <summary>
            common class model for grouped list.
            </summary>
            <exclude/>
            <typeparam name="T">The generic type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ComposedItemModel`1.IsGroupItem">
            <summary>
            It used to check the list item is grouped item or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ComposedItemModel`1.Data">
            <summary>
            It used to specify the data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ComposedItemModel`1.Key">
            <summary>
            It used to specify the key.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ComposedItemModel`1.IsHeader">
            <summary>
            It used to check the group item is header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ComposedItemModel`1.Id">
            <summary>
            It used to specify the id.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ComposedItemModel`1.Text">
            <summary>
            It used to specify the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Lists.ComposedItemModel`1.Items">
            <summary>
            It used to specify the items.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.AccordionAnimationCollapse">
            <summary>
            Specifies the animation to appear while collapsing the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionAnimationCollapse.Duration">
            <summary>
            Specifies the time duration to transform content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionAnimationCollapse.Easing">
            <summary>
            Specifies the easing effect applied when transforming the content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionAnimationCollapse.Effect">
            <summary>
            Specifies the animation effect for collapsing the Accordion item.
            Default animation is given as SlideUp for collapsing accordion animation. You can also disable the animation by setting the animation effect as none.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.AccordionAnimationCollapse.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.AccordionAnimationExpand">
            <summary>
            Specifies the animation to appear while expanding the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionAnimationExpand.Duration">
            <summary>
            Specifies the time duration to transform content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionAnimationExpand.Easing">
            <summary>
            Specifies the easing effect applied when transforming the content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionAnimationExpand.Effect">
            <summary>
            Specifies the animation effect for expanding the Accordion item.
            Default animation is given as SlideDown for expanding accordion animation. You can also disable the animation by setting the animation effect as none.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.AccordionAnimationExpand.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.AccordionAnimationSettings">
            <summary>
            A class used for configuring the Accordion animation properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionAnimationSettings.ChildContent">
            <summary>
            Child Content for the Accordion Animation Settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionAnimationSettings.Collapse">
            <summary>
            Specifies the animation to appear while collapsing the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionAnimationSettings.Expand">
            <summary>
            Specifies the animation to appear while expanding the Accordion item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.AccordionAnimationSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ExpandMode">
            <summary>
            Specifies the option to expand single or multiple panel at a time.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ExpandMode.Single">
            <summary>
            Denotes single panel expansion.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ExpandMode.Multiple">
            <summary>
            Denotes multiple panel expansion.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.AccordionEvents">
            <summary>
            Configure event handlers to handle the events with the Accordion component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionEvents.Clicked">
            <summary>
            The event triggers when clicking anywhere within the Accordion.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionEvents.Created">
            <summary>
            The event triggers once the control rendering is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionEvents.Destroyed">
            <summary>
            The event triggers when the control gets destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionEvents.Expanded">
            <summary>
            The event triggers after the item gets expanded.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionEvents.Expanding">
            <summary>
            The event triggers before the item gets expanded.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionEvents.Collapsed">
            <summary>
            The event triggers after the item gets collapsed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionEvents.Collapsing">
            <summary>
            The event triggers before the item gets collapsed.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.AccordionEvents.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.AccordionItem">
            <summary>
            Defines accordion panels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItem.ChildContent">
            <summary>
            Child Content for the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItem.HeaderTemplate">
            <summary>
            Sets the header to be displayed for the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItem.ContentTemplate">
            <summary>
            Sets the content to be displayed for the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItem.Content">
            <summary>
            Sets the text content to be displayed for the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItem.CssClass">
            <summary>
            Defines the single/multiple classes (separated by a space) that should be used for Accordion item customization.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItem.Disabled">
            <summary>
            Specifies a value that indicates whether the accordion item is disabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItem.Expanded">
            <summary>
            Specify a Boolean value that indicates whether the accordion panel is expanded or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItem.Header">
            <summary>
            Sets the header text to be displayed for the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItem.IconCss">
            <summary>
            Defines an icon with the given custom CSS class that is to be rendered before the header text.
            Add the css classes to the `IconCss` property and write the css styles to the defined class to set the images/icons.
            Adding icon is applicable only to the header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItem.Visible">
            <summary>
            Specifies a Boolean value that indicates whether the accordion item is visible or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItem.Id">
            <summary>
            Sets Id attribute for accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItem.ExpandedChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.AccordionItem.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.AccordionItems">
            <summary>
            A list of items that are used to configure the Accordion component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItems.ChildContent">
            <summary>
            Child Content for the Accordion items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItems.Items">
            <summary>
            Specifies the collection of items for rendering Accordion items.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.AccordionItems.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.AccordionClickArgs">
            <summary>
            A class that holds options to control the accordion click action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionClickArgs.Item">
            <summary>
            Returns the current Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionClickArgs.Name">
            <summary>
            Returns the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionClickArgs.OriginalEvent">
            <summary>
            Supplies information about a mouse event that is being raised.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ExpandEventArgs">
            <summary>
            A class that holds options to control the expanding item action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ExpandEventArgs.Cancel">
            <summary>
            Specifies a value that indicates to prevent the current action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ExpandEventArgs.Index">
            <summary>
            Returns the Accordion Item Index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ExpandEventArgs.IsExpanded">
            <summary>
            Returns the expand or collapse state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ExpandEventArgs.Item">
            <summary>
            Returns the current Accordion Item Object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ExpandEventArgs.Name">
            <summary>
            Returns the name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.CollapseEventArgs">
            <summary>
            A class that holds options to control the collapsing item action.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ExpandedEventArgs">
            <summary>
            A class that holds options to control the expanded item action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ExpandedEventArgs.Index">
            <summary>
            Returns  the Accordion Item Index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ExpandedEventArgs.IsExpanded">
            <summary>
            Returns  the expand or collapse state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ExpandedEventArgs.Item">
            <summary>
            Returns the current Accordion Item Object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ExpandedEventArgs.Name">
            <summary>
            Returns the name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.CollapsedEventArgs">
            <summary>
            A class that holds options to control the collapsed item action.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.AccordionItemModel">
            <summary>
            A class that holds option for Accordion Items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItemModel.HeaderTemplate">
            <summary>
            Sets the header to be displayed for the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItemModel.ContentTemplate">
            <summary>
            Sets the content to be displayed for the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItemModel.Content">
            <summary>
            Sets the text content to be displayed for the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItemModel.CssClass">
            <summary>
            Defines the single/multiple classes (separated by a space) that should be used for Accordion item customization.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItemModel.Disabled">
            <summary>
            Specifies a value that indicates whether the accordion item is disabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItemModel.Expanded">
            <summary>
            Specifies a Boolean value that indicates whether the accordion pane is expanded or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItemModel.Header">
            <summary>
            Sets the header text to be displayed for the Accordion item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItemModel.IconCss">
            <summary>
            Defines an icon with the given custom CSS class that is to be rendered before the header text.
            Add the css classes to the `IconCss` property and write the css styles to the defined class to set the images/icons.
            Adding icon is applicable only to the header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItemModel.Visible">
            <summary>
            Specifies a Boolean value that indicates whether the accordion item is visible or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AccordionItemModel.Id">
            <summary>
            Sets Id attribute for accordion item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SfAccordion">
            <summary>
            Accordion is a vertically collapsible panel that displays one or more panels at a time.
            </summary>
            <summary>
            Accordion is a vertically collapsible panel that displays one or more panels at a time.
            </summary>
            <summary>
            Accordion is a vertically collapsible panel that displays one or more panels at a time.
            </summary>
            <summary>
            Accordion is a vertically collapsible panel that displays one or more panels at a time.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent in the render tree,
            and the incoming values have been assigned to properties.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfAccordion.ID">
            <summary>
            Sets ID attribute for the accordion element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfAccordion.ChildContent">
            <summary>
            Child Content for Accordion.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfAccordion.Items">
            <summary>
            Gets or sets the accordion items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfAccordion.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfAccordion.LoadOnDemand">
            <summary>
            Enable or disable content of all the accordion are rendered on the initial load and maintained in the DOM.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfAccordion.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfAccordion.ExpandMode">
            <summary>
            Specifies the options to expand a single or multiple panels at a time.
            The possible values are:
            - Single: Sets to expand only one Accordion item at a time.
            - Multiple: Sets to expand more than one Accordion item at a time.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfAccordion.ExpandedIndices">
            <summary>
            Specifies the index of items that is expanded on the initial load.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfAccordion.ExpandedIndicesChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfAccordion.Height">
            <summary>
            Specifies the height of the Accordion that can be represented in pixels/percentage.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfAccordion.Width">
            <summary>
            Specifies the width of the Accordion that can be represented as pixels/percentage.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfAccordion.HtmlAttributes">
            <exclude/>
            <summary>
            Gets or sets the html attributes.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.Select(System.Int32)">
            <summary>
            Sets focus to the specified index item header in Accordion.
            </summary>
            <param name="index">Number value that determines which item should be focused.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.SelectAsync(System.Int32)">
            <summary>
            Sets focus to the specified index item header in Accordion.
            </summary>
            <param name="index">Number value that determines which item should be focused.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.CreatedEvent">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.OnAccordionClick(System.Int32)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.TriggerExpandingEvent(System.Nullable{System.Int32})">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.TriggerExpandedEvent(Syncfusion.Blazor.Navigations.ExpandEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.TriggerCollapsingEvent(System.Nullable{System.Int32})">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfAccordion.TriggerCollapsedEvent(Syncfusion.Blazor.Navigations.ExpandEventArgs)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.AccordionItemRender">
            <summary>
            Specifies the accordion item renderer.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.AccordionItemRender.Item">
            <summary>
            Gets or sets the accordion item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.AccordionItemRender.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.AccordionItemRender.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent in the render tree,
            and the incoming values have been assigned to properties.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.AccordionItemRender.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.SfMenuBase`1.ChildContent">
            <summary>
            Child content for menu.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.SfMenuBase`1.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the Menu container.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.SfMenuBase`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.SfMenuBase`1.Items">
            <summary>
            Specifies menu items with its properties which will be rendered as ContextMenu.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.SfMenuBase`1.ShowItemOnClick">
            <summary>
            Specifies whether to show the sub menu or not on click.
            When set to true, the sub menu will open only on mouse click.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.SfMenuBase`1.EnableScrolling">
            <summary>
            Specifies whether to enable / disable the scrollable option in Menu.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.SfMenuBase`1.CloseMenuAsync(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.SfMenuBase`1.UpdateChildProperties(System.String,System.Object)">
            <summary>
            To update the child properties
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ItemModelBase.IconCss">
            <summary>
            Specifies the class to include icons.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ItemModelBase.Id">
            <summary>
            Specifies the menu item id.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ItemModelBase.Separator">
            <summary>
            Separator are either horizontal or vertical lines used to group menu items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ItemModelBase.Disabled">
            <summary>
            Specifies the menu item disable state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ItemModelBase.Hidden">
            <summary>
            Specifies the menu item hidden state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ItemModelBase.Text">
            <summary>
            Specifies the text of the menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ItemModelBase.Url">
            <summary>
            Specifies the URL of the menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ItemModelBase.HtmlAttributes">
            <summary>
            Used to add additional attributes to the menu item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.ToolbarContent">
            <summary>
            Specifies toolbar content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ToolbarContent.Item">
            <summary>
            Defines the toolbar item model.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ToolbarContent.Index">
            <summary>
            Defines toolbar item index.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.ToolbarContent.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent in the render tree,
            and the incoming values have been assigned to properties.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.ToolbarContent.Dispose">
            <summary>
            Disposes unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.ToolbarContent.Dispose(System.Boolean)">
            <summary>
            Dispose unmanaged resources in the Syncfusion Blazor toolbar component.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.ToolbarEventArgs">
            <summary>
            A class that holds options to control the toolbar item clicked action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ToolbarEventArgs.IsCloseIcon">
            <summary>
            Gets or sets the close icon.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ToolbarEventArgs.TargetParentDataIndex">
            <summary>
            Gets or sets the data index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ToolbarEventArgs.ToolbarItemIndex">
            <summary>
            Gets or sets the toolbar item index.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ToolbarEventArgs.IsPopupElement">
            <summary>
            Gets or sets the item from popup element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.ComplexListItems`1">
            <summary>
            Specifies the complex list items.
            </summary>
            <typeparam name="TValue">"TypeParam".</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ComplexListItems`1.TreeOptions">
            <summary>
            Specifies the TreeOption field values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ComplexListItems`1.HasChild">
            <summary>
            Specifies the treeview node has child or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ComplexListItems`1.MappedData">
            <summary>
            Specifies the Treeview mapped data values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ComplexListItems`1.RandomID">
            <summary>
            Specifies the Treeview node data id.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ComplexListItems`1.Index">
            <summary>
            Specifies the index position of Treeview node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ComplexListItems`1.ListModel">
            <summary>
            Specifies the treeview list base option model.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ComplexListItems`1.ListData">
            <summary>
            Specifies the datasource of list element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ComplexListItems`1.TreeNodeLevel">
            <summary>
            Specifies the tree node level of treeview nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.ComplexListItems`1.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.CreateListFromComplex`1">
            <summary>
            Specifies the ComplexCreateList.
            </summary>
            <typeparam name="TValue">"TypeParam".</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.CreateListFromComplex`1.ListData">
            <summary>
            Specifies the datasource of list element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.CreateListFromComplex`1.TreeOptions">
            <summary>
            Specifies the TreeOption field values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.CreateListFromComplex`1.TreeItemCreating">
            <summary>
            Specifies the TreeItemCreating event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.CreateListFromComplex`1.TreeNodeLevel">
            <summary>
            Specifies the tree node level of treeview nodes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.CreateListFromComplex`1.ListModel">
            <summary>
            Specifies the treeview list base option model.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.CreateListFromComplex`1.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.CreateListFromComplex`1.InvokeTreeItemCreating(`0,Syncfusion.Blazor.Navigations.Internal.FieldsValueMapping{System.Collections.Generic.List{`0}},System.Int32)">
            <summary>
            Returns TreeItemCreatedArgs for a list item for which TreeItemCreating event invoked.
            </summary>
            <param name="item">"Specifies the item".</param>
            <param name="mappedData">"Specifies the mappedData".</param>
            <param name="nodeLevel">"Specifies the nodeLevel".</param>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.CreateListFromComplex`1.MapSettings(Syncfusion.Blazor.Navigations.Internal.ListModel,System.Boolean)">
            <summary>
            Maps the default setting for the list generated.
            </summary>
            <param name="options">"Specifies the options field".</param>
            <param name="isField">"Specifies the isField attribute".</param>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.CreateListFromComplex`1.ListBasePropertyMapper`1">
            <summary>
            ListBase Property.
            </summary>
            <typeparam name="T">"T".</typeparam>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.CreateListFromComplex`1.ListBasePropertyMapper`1.PropertyMapper(`1,`1)">
            <summary>
            Specifies the property mapper.
            </summary>
            <param name="customizedProp">"Specifes the customised prop".</param>
            <param name="mappedProp">"Specifies the mapped property".</param>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.CreateListFromComplex`1.GetDefaultListOptions">
            <summary>
            Sets and returns default listbase properties values to the listbase options.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.TreeViewListItems`1">
            <exclude/>
            <summary>
            Specifies the TreeViewListItems class.
            </summary>
            <typeparam name="TValue">"TypeParam".</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewListItems`1.TreeItemCreating">
            <summary>
            TreeItem creating.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewListItems`1.ItemsCreating">
            <summary>
            ItemCreating variable.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1">
            <summary>
            Specifies the TreeOption class.
            </summary>
            <typeparam name="TValue">"TValue".</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.ChildData">
            <summary>
            Specifies the Child data of node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.TreeViewFields">
            <summary>
            Specifies the Treeview fields value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.IsExpanded">
            <summary>
            Specifies the Treeview node is expanded or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.IsFullRowSelect">
            <summary>
            Specifies the fullrow selection enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.IconClass">
            <summary>
            Specifies the IconClass of Treeview.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.IsSelected">
            <summary>
            Specifies the node is selected or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.IsChecked">
            <summary>
            Specifies the Treeview node checked or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.NodeLevel">
            <summary>
            Specifies the Treeview node level.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.IsTree">
            <summary>
            Specifies the tree.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.NodeTemplate">
            <summary>
            Specifies the Treeview node template.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.FullRowNavigate">
            <summary>
            Specifies the full row navigate of Treeview node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.IsEdit">
            <summary>
            Specifies the editing mode in node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.IsDisabled">
            <summary>
            Specifies the node disabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeOptions`1.IsLoaded">
            <summary>
            Specifies the node already loaded or not in DOM
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.TreeItemCreatedArgs`1">
            <summary>
            Specifies the TreeItemCreatedArgs.
            </summary>
            <typeparam name="T">"T".</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeItemCreatedArgs`1.TreeOptions">
            <summary>
            Specifies the TreeOptions.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeItemCreatedArgs`1.NodeLevel">
            <summary>
            Specifies the NodeLevel argument.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeItemCreatedArgs`1.ItemData">
            <summary>
            Specifies the ItemData argument.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeItemCreatedArgs`1.Item">
            <summary>
            Specifies the Item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeItemCreatedArgs`1.Options">
            <summary>
            Specifies the Options.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeItemCreatedArgs`1.Text">
            <summary>
            Specifies the Text.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.FieldsMapping">
            <summary>
            Specifies the Treeview field mappings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsMapping.Child">
            <summary>
            Specifies the child attribute.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsMapping.Enabled">
            <summary>
            Specifies the Enabled field attribute.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsMapping.Expanded">
            <summary>
            Specifies the Expanded field attribute.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsMapping.HasChildren">
            <summary>
            Specifies the HasChildren field attribute.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsMapping.HtmlAttributes">
            <summary>
            Specifies the HtmlAttributes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsMapping.IconCss">
            <summary>
            Specifies the IconCss field attribute.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsMapping.Id">
            <summary>
            Specifies the Id field attribute.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsMapping.ImageAttributes">
            <summary>
            Specifies the ImageAttribute.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsMapping.ImageUrl">
            <summary>
            Specifies the ImageUrl field attribute.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsMapping.IsChecked">
            <summary>
            Specifies the IsChecked field attribute.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsMapping.Selected">
            <summary>
            Specifies the Selected field attribute.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsMapping.Text">
            <summary>
            Specifies the Text field attribute.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsMapping.Tooltip">
            <summary>
            Specifies the Tooltip field attribute.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsMapping.Url">
            <summary>
            Specifies the Url field attribute.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsMapping.UrlAttributes">
            <summary>
            Specifies the UrlAttributes field attribute.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsMapping.Value">
            <summary>
            Specifies the value field attribute.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.FieldsValueMapping`1">
            <summary>
            Specifies the field values Mapping.
            </summary>
            <typeparam name="T">"T".</typeparam>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsValueMapping`1.Child">
            <summary>
            Specifies the child field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsValueMapping`1.Enabled">
            <summary>
            Specifies the Enabled field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsValueMapping`1.Expanded">
            <summary>
            Specifies the Expanded field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsValueMapping`1.HasChildren">
            <summary>
            Specifies the HasChildren field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsValueMapping`1.IconCss">
            <summary>
            Specifies the IconCss field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsValueMapping`1.Id">
            <summary>
            Specifies the Id field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsValueMapping`1.ImageUrl">
            <summary>
            Specifies the child field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsValueMapping`1.IsChecked">
            <summary>
            Specifies the IsChecked field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsValueMapping`1.Selected">
            <summary>
            Specifies the Selected field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsValueMapping`1.Text">
            <summary>
            Specifies the Text field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsValueMapping`1.Tooltip">
            <summary>
            Specifies the child field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsValueMapping`1.Url">
            <summary>
            Specifies the URL field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsValueMapping`1.HtmlAttributes">
            <summary>
            Specifies the HtmlAttriibutes field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsValueMapping`1.ImageAttributes">
            <summary>
            Specifies the child field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsValueMapping`1.UrlAttributes">
            <summary>
            Specifies the UrlAttributes field.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.FieldsValueMapping`1.Value">
            <summary>
            Specifies the Value field.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.ItemCreatedArgs`1">
            <summary>
            Specifies the item created event arguments.
            </summary>
            <typeparam name="T">"T".</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ItemCreatedArgs`1.ItemData">
            <summary>
            Specifies the ItemData.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ItemCreatedArgs`1.Item">
            <summary>
            Specifies the Item value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ItemCreatedArgs`1.Text">
            <summary>
            Specifies the Text of the item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.TreeFieldsMapping">
            <summary>
            Specifies the TreeFieldsMapping.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeFieldsMapping.ParentID">
            <summary>
            Specifies the ParentId.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeFieldsMapping.DataManager">
            <summary>
            Specifies the item DataManager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeFieldsMapping.Query">
            <summary>
            Specifies the Query.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeFieldsMapping.TableName">
            <summary>
            Specifies the TableName.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeFieldsMapping.Children">
            <summary>
            Specifies the Children.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.ListModel">
            <summary>
            Specifies Treeview Options.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ListModel.ExpandCollapse">
            <summary>
            Specifies to show collapsible icon.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ListModel.ExpandIconClass">
            <summary>
            Specifies the customizable expand icon class.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ListModel.Fields">
            <summary>
            Specifies that fields that mapped in dataSource.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ListModel.ItemNavigable">
            <summary>
            If set true to this property then the entire list will be navigate-able instead of text element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ListModel.ShowIcon">
            <summary>
            Specifies to show icon.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.AnimationSettingsModel">
            <summary>
            Specifies class for expand / collapse animation settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.AnimationSettingsModel.Duration">
            <summary>
            Specifies the time duration to transform content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.AnimationSettingsModel.Easing">
            <summary>
            Specifies the easing effect applied when transforming the content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.AnimationExpandModel">
            <summary>
            Specifies the class for expand animation settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.AnimationExpandModel.Effect">
            <summary>
            Specifies the animation effect for expanding the TreeView node.
            Default animation is given as SlideDown. You can also disable the animation by setting the animation effect as None.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.AnimationCollapseModel">
            <summary>
            Specifies the class for collapse animation settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.AnimationCollapseModel.Effect">
            <summary>
            Specifies the animation effect for collapsing the TreeView node.
            Default animation is given as SlideUp. You can also disable the animation by setting the animation effect as None.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.SelectionEventArgs">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.SelectionEventArgs.IsMultiSelect">
            <summary>
            Specifies the MultiSelect argument.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.SelectionEventArgs.IsCtrKey">
            <summary>
            Specifies the control key is pressed or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.SelectionEventArgs.IsShiftKey">
            <summary>
            Specifies the shift key is pressed or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.SelectionEventArgs.Nodes">
            <summary>
            Specifies the Node data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.SelectionEventArgs.IsInteracted">
            <summary>
            Specifies the nodes are selected in manual interaction or dynamic interaction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.SelectionEventArgs.Action">
            <summary>
            Specifies the action to be performed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.SelectionEventArgs.NodeData">
            <summary>
            Specifies the Node Data.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.ExpandEventArgs">
            <summary>
            Expand event args.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ExpandEventArgs.IsLoaded">
            <summary>
            Specifies the loaded argument.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.ExpandEventArgs.NodeLevel">
            <summary>
            Specifies the Node level.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.DropTreeArgs">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.DropTreeArgs.DragLi">
            <summary>
            Specifies the Drageed List item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.DropTreeArgs.DropLi">
            <summary>
            Specifies the Dropped List item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.DropTreeArgs.DropParentLi">
            <summary>
            Specifies the Dropped parent List item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.DropTreeArgs.DragParentLi">
            <summary>
            Specifies the Dragged parent List item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.DropTreeArgs.Pre">
            <summary>
            Specifies the value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.DropTreeArgs.SrcTree">
            <summary>
            Specifies the Source Tree.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.DropTreeArgs.IsExternalDrag">
            <summary>
            Specifies the external drag and drop is true or not.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.ITreeView">
            <summary>
            Interface for SfTreeView component.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.ITreeView.UpdateAnimationProperties(Syncfusion.Blazor.Navigations.TreeViewNodeAnimationSettings)">
            <summary>
            Update animation settings property.
            </summary>
            <param name="animationSettings">"Specifies the animationSettings parameter".</param>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.TreeViewDataType">
            <summary>
            An enum type that denotes the Treeview data source types.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.Internal.TreeViewDataType.SelfReferential">
            <summary>
            Specifies 'SelfReferential' Data type.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.Internal.TreeViewDataType.Hierarchical">
            <summary>
            Specifies 'Hierarchical' Data type.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.Internal.TreeViewDataType.RemoteData">
            <summary>
            Specifies 'RemoteData' Data type.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.ListGeneration`1">
            <summary>
            List generation of TreeView component.
            </summary>
            <typeparam name="TValue">"TValue paramater".</typeparam>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.ListGeneration`1.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.ListGeneration`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">"First render".</param>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.ListGeneration`1.GettingQuery(Syncfusion.Blazor.Navigations.Internal.TreeFieldsMapping,System.Object)">
            <summary>
            Getting Query values for Remote data source.
            </summary>
            <param name="mapper">"Specfies the mapper field".</param>
            <param name="value">"Specifies the value".</param>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.ListGeneration`1.GetQuery(Syncfusion.Blazor.Data.Query)">
            <summary>
            Update Cloned query value for Remote data binding.
            </summary>
            <param name="query">"Specifies the QUERY parameter".</param>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.ListGeneration`1.SetLocalStorage(System.String,System.String)">
            <summary>
            Update the Persistence value to local storage.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.ListGeneration`1.SerializeModel">
            <summary>
            Updating the persisting values to our component properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.ListGeneration`1.AddNodeData(System.Collections.Generic.List{`0},System.String)">
            <summary>
            Adding treeview nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.ListGeneration`1.CheckForRemoteHasChild(System.Collections.Generic.List{System.Object})">
            <summary>
            Update Has Child after remove operation in Remote Data
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.ListGeneration`1.RemoveNodes(System.String[])">
            <summary>
            Removing treeview nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.ListGeneration`1.GetTreeViewData(System.String)">
            <summary>
            Return treeview node data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.ListGeneration`1.GetRemoteNodeData(System.String)">
            <summary>
            Get the node data for remote data
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.ListGeneration`1.GetNodeDetails(System.String)">
            <summary>
            Get the node's data such as id, text, parentID, selected, isChecked, and expanded by passing the node element or it's ID.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1">
            <summary>
             A class used for configuring the TreeView fields setting properties.
            </summary>
            <typeparam name="TValue">"Specifies the Tvalue parameter".</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.Child">
            <summary>
            Binds the field settings for child nodes or mapping field for nested nodes objects that contain array of JSON objects.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.DataSource">
            <summary>
            Specifies the array of JavaScript objects or instance of DataManager to populate the nodes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.Expanded">
            <summary>
            Specifies the mapping field for expand state of the TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.HasChildren">
            <summary>
            Specifies the mapping field for hasChildren to check whether a node has child nodes or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.HtmlAttributes">
            <summary>
            Specifies the mapping field for htmlAttributes to be added to the TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.DataManager">
            <summary>
            The DataManager is used to performing data operations in applications.
            It acts as an abstraction for using local data source - IEnumerable and remote data source - web services returning JSON or oData.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.IconCss">
            <summary>
            Specifies the mapping field for icon class of each TreeView node that will be added before the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.Id">
            <summary>
            Specifies the ID field mapped in dataSource.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.ImageUrl">
            <summary>
            Specifies the mapping field for image URL of each TreeView node where image will be added before the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.IsChecked">
            <summary>
            Specifies the field for checked state of the TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.NavigateUrl">
            <summary>
            Specifies the mapping field for navigateUrl to be added as hyper-link of the TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.ParentID">
            <summary>
            Specifies the parent ID field mapped in dataSource.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.Query">
            <summary>
            This paramter will execute along with data processing.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.Selected">
            <summary>
            Specifies the mapping field for selected state of the TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.TableName">
            <summary>
            Specifies the table name used to fetch data from a specific table in the server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.Text">
            <summary>
            Specifies the mapping field for text displayed as TreeView node's display text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.Tooltip">
            <summary>
            Specifies the mapping field for tooltip that will be displayed as hovering text of the TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.Children">
            <summary>
            Specifies the child.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.UpdateChildProperties(System.String,System.Object)">
            <summary>
            Specifies the child property update.
            </summary>
            <param name="prop">"Specifies the prop details".</param>
            <param name="details">"Specifies the details".</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.Internal.TreeViewCommonFieldsSettings`1.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.BreadcrumbItem">
            <summary>
            A class that represents breadcrumb component item of <see cref="T:Syncfusion.Blazor.Navigations.SfBreadcrumb"/> component.
            </summary>
            <remarks>
            You can render icon only, text only, icon and text breadcrumb item by specifying value to corresponding property.
            Additional attributes can be added to Breadcrumb item using <c>@attributes</c> directive.
            </remarks>
            <example>
            In the below code example, a basic Breadcrumb item has been added using <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbItem"/> tag directive.
            <code><![CDATA[
            <SfBreadcrumb>
                <BreadcrumbItems>
                    <BreadcrumbItem Text="Home" Url="https://blazor.syncfusion.com/demos/"></BreadcrumbItem>
                    <BreadcrumbItem Text="Components" Url="https://blazor.syncfusion.com/demos/datagrid/overview"></BreadcrumbItem>
                    <BreadcrumbItem Text="Navigations" Url="https://blazor.syncfusion.com/demos/menu-bar/default-functionalities"></BreadcrumbItem>
                    <BreadcrumbItem Text="Breadcrumb" Url="https://blazor.syncfusion.com/demos/breadcrumb/default-functionalities"></BreadcrumbItem>
                </BreadcrumbItems>
            </SfBreadcrumb>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BreadcrumbItem.ChildContent">
            <summary>
            Gets or sets the child content for the Breadcrumb item. If the child content is not specified breadcrumb item is rendered using <see cref="P:Syncfusion.Blazor.Navigations.BreadcrumbItem.Text"/> content.
            </summary>
            <value>
            The template content. The default value in <c>null</c>.
            </value>
            <example>
            In the below code example, content has been set to <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbItem"/> using <see cref="P:Syncfusion.Blazor.Navigations.BreadcrumbItem.Text"/> property and <see cref="P:Syncfusion.Blazor.Navigations.BreadcrumbItem.ChildContent"/> property.
            <code><![CDATA[
            <SfBreadcrumb>
                <BreadcrumbItems>
                    <BreadcrumbItem><span>Components</span></BreadcrumbItem>
                </BreadcrumbItems>
            </SfBreadcrumb>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BreadcrumbItem.Text">
            <summary>
            Gets or sets the text content of the Breadcrumb item.
            </summary>
            <value>
            Accepts a string value. The default value is <c>String.Empty</c>.
            </value>
            <remarks>
            Set child content within <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbItem"/> tag directive, to render as HTML content.
            </remarks>
            <example>
            In the below code example, content has been set to <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbItem"/> using <see cref="P:Syncfusion.Blazor.Navigations.BreadcrumbItem.Text"/> property and <c>ChildContent</c> property.
            <code><![CDATA[
            <SfBreadcrumb>
                <BreadcrumbItems>
                    <BreadcrumbItem Text="Home"></BreadcrumbItem>
                </BreadcrumbItems>
            </SfBreadcrumb>
            <SfBreadcrumb>
                <BreadcrumbItems>
                    <BreadcrumbItem>Home</BreadcrumbItem>
                    <BreadcrumbItem><span>Components</span></BreadcrumbItem>
                </BreadcrumbItems>
            </SfBreadcrumb>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BreadcrumbItem.Url">
            <summary>
            Gets or sets the Url of the Breadcrumb item and that will be navigated when clicked.
            </summary>
            <value>
            Accepts Url string value. The default value is <c>String.Empty</c>.
            </value>
            <remarks>
            When Url has not been set, you can customize the item navigation using <see cref="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.ItemClicked"/> event.
            </remarks>
            <example>
            <code><![CDATA[
            <SfBreadcrumb">
                <BreadcrumbItems>
                    <BreadcrumbItem Text="Home" Url="https://blazor.syncfusion.com/demos/"></BreadcrumbItem>
                    <BreadcrumbItem Text="Components" Url="https://blazor.syncfusion.com/demos/datagrid/overview"></BreadcrumbItem>
                    <BreadcrumbItem Text="Navigations" Url="https://blazor.syncfusion.com/demos/menu-bar/default-functionalities"></BreadcrumbItem>
                </BreadcrumbItems>
            </SfBreadcrumb>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BreadcrumbItem.IconCss">
            <summary>
            Gets or sets a CSS class string to include an icon or image for the breadcrumb item. 
            </summary>
            <value>
            Accepts a CSS class string separated by space to include an icon or image for the breadcrumb item. The default value is <c>String.Empty</c>.
            </value>
            <example>
            <code><![CDATA[
            <SfBreadcrumb>
                <BreadcrumbItems>
                    <BreadcrumbItem IconCss="e-icons e-home"></BreadcrumbItem>
                </BreadcrumbItems>
            </SfBreadcrumb>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BreadcrumbItem.HtmlAttributes">
            <summary>
            Gets or sets a collection of additional attributes that will be applied to the breadcrumb item element.
            </summary>
            <remarks>
            Additional attributes can be added by specifying as inline attributes or by specifying <c>@attributes</c> directive.
            </remarks>
            <example>
            In the below code example, title attribute added as inline in <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbItem"/> tag directive.
            <code><![CDATA[
            <SfBreadcrumb>
                <BreadcrumbItems>
                    <BreadcrumbItem Text="Home" title="Home"></BreadcrumbItem>
                </BreadcrumbItems>
            </SfBreadcrumb>
            ]]></code>
            </example>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.BreadcrumbItems">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbItem"/>.
            </summary>
            <remarks>
            To generate dynamic <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbItem"/> based on collection, use <c>@foreach</c> within <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbItems"/> tag directive.
            </remarks>
            <example>
            In the below code example, a basic Breadcrumb has been rendered using <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbItems"/> tag directive.
            <code><![CDATA[
            <SfBreadcrumb>
                <BreadcrumbItems>
                    <BreadcrumbItem Text="Home"></BreadcrumbItem>
                    <BreadcrumbItem Text="Components"></BreadcrumbItem>
                    <BreadcrumbItem Text="Navigations"></BreadcrumbItem>
                </BreadcrumbItems>
            </SfBreadcrumb>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BreadcrumbItems.ChildContent">
            <exclude/>
            <summary>
            Specifies the child content for the Breadcrumb items.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.BreadcrumbTemplates">
            <summary>
            Represents template options in <see cref="T:Syncfusion.Blazor.Navigations.SfBreadcrumb"/> component.
            </summary>
            <remarks>
            <see cref="P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.ItemTemplate"/> or <see cref="P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.SeparatorTemplate"/> can be set <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbTemplates"/> tag directive.
            To access template's context parameter use <c>@context</c> in both <see cref="P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.ItemTemplate"/> and <see cref="P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.SeparatorTemplate"/>.
            </remarks>
            <example>
            In the below code example, both <see cref="P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.ItemTemplate"/> and <see cref="P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.SeparatorTemplate"/> has been specified.
            <code><![CDATA[
            <SfBreadcrumb>
                <BreadcrumbItems>
                    <BreadcrumbItem Text="Home"></BreadcrumbItem>
                    <BreadcrumbItem Text="Components"></BreadcrumbItem>
                    <BreadcrumbItem Text="Navigations"></BreadcrumbItem>
                </BreadcrumbItems>
                <BreadcrumbTemplates>
                    <ItemTemplate>
                        <i>@context.Text</i>
                    </ItemTemplate>
                    <SeparatorTemplate>
                        <span class="e-icons e-arrow"></span>
                    </SeparatorTemplate>
                </BreadcrumbTemplates>
            </SfBreadcrumb>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.ItemTemplate">
            <summary>
            Gets or sets template as <see cref="T:Microsoft.AspNetCore.Components.RenderFragment"/>, that defines custom appearance of breadcrumb items.
            Here, context refers to the <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbItem"/> for which the template is applied.
            </summary>
            <value>
            A template content that specifies the visualization of breadcrumb items. The default value in <c>null</c>.
            </value>
            <remarks>
            The <c>ItemTemplate</c> used to define appearance of breadcrumb items. Use the template’s context parameter to access the <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbItem"/> properties.
            Specify <see cref="P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.ItemTemplate"/> within <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbTemplates"/> tag directive.
            </remarks>        
            <example>
            In the below code example, <b>italic</b> style Breadcrumb item text has been rendered using <c>ItemTemplate</c>.
            <code><![CDATA[
            <SfBreadcrumb>
                <BreadcrumbItems>
                    <BreadcrumbItem Text="Home"></BreadcrumbItem>
                    <BreadcrumbItem Text="Components"></BreadcrumbItem>
                    <BreadcrumbItem Text="Navigations"></BreadcrumbItem>
                </BreadcrumbItems>
                <BreadcrumbTemplates>
                    <ItemTemplate>
                        <i>@context.Text</i>
                    </ItemTemplate>
                </BreadcrumbTemplates>
            </SfBreadcrumb>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.SeparatorTemplate">
            <summary>
            Gets or sets template as <see cref="T:Microsoft.AspNetCore.Components.RenderFragment"/>, that defines custom appearance of breadcrumb items separator.
            Here, context refers to the <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbItem"/> for previous and current item which the template is applied.
            </summary>
            <value>
            A template content that specifies the visualization of breadcrumb items separator. The default value in <c>null</c>.
            </value>
            <remarks>
            The <c>SeparatorTemplate</c> used to define appearance of breadcrumb items separator. Use the template’s context parameter to access the previous and current <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbItem"/> properties.
            Specify <see cref="P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.SeparatorTemplate"/> within <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbTemplates"/> tag directive.
            </remarks>
            <example>
            In the below code example, caret icon is rendered as Breadcrumb items separator using <c>SeparatorTemplate</c>.
            <code><![CDATA[
            <SfBreadcrumb>
                <BreadcrumbItems>
                    <BreadcrumbItem Text="Home"></BreadcrumbItem>
                    <BreadcrumbItem Text="Components"></BreadcrumbItem>
                    <BreadcrumbItem Text="Navigations"></BreadcrumbItem>
                </BreadcrumbItems>
                <BreadcrumbTemplates>
                    <SeparatorTemplate>
                        <span class="e-icons e-arrow"></span>
                    </SeparatorTemplate>
                </BreadcrumbTemplates>
            </SfBreadcrumb>
            ]]></code>
            </example>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.BreadcrumbOverflowMode">
            <summary>
            Specifies how to display breadcrumb items in <see cref="T:Syncfusion.Blazor.Navigations.SfBreadcrumb"/> component when the Breadcrumb items exceeds Breadcrumb container or <see cref="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.MaxItems"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.BreadcrumbOverflowMode.Default">
            <summary>
            The specified <see cref="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.MaxItems"/> count will be visible and the remaining items will be hidden. While clicking on the previous item, the hidden item will become visible.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.BreadcrumbOverflowMode.Collapsed">
            <summary>
            Only the first and last items will be visible, and the remaining items will be hidden with collapsed icon. When the collapsed icon is clicked, all items become visible and scroll will be enabled if the space is not enough to show all items.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.BreadcrumbItemRenderingEventArgs">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.ItemRendering"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BreadcrumbItemRenderingEventArgs.Item">
            <summary>
            Gets or sets the breadcrumb item that is being render. 
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.BreadcrumbClickedEventArgs">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.ItemClicked"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BreadcrumbClickedEventArgs.Item">
            <summary>
            Gets the clicked breadcrumb item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SfBreadcrumb">
            <summary>
            Breadcrumb component is a graphical user interface that helps to identify or highlight the current location within a hierarchical structure of websites.
            The aim is to make the user aware of their current position in a hierarchy of website links.
            </summary>
            <remarks>
            Breadcrumb items can be populated either by specifying <see cref="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.Url"/> property or by specifying <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbItem"/> within <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbItems"/> tag directive.
            <see cref="P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.ItemTemplate"/> and <see cref="P:Syncfusion.Blazor.Navigations.BreadcrumbTemplates.SeparatorTemplate"/> can be used to customize the Breadcrumb component UI using <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbTemplates"/> tag directive.
            </remarks>
            <example>
            In the below code example, a basic Breadcrumb component initialized with <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbItems"/> tag directive.
            <code><![CDATA[
            <SfBreadcrumb>
                <BreadcrumbItems>
                    <BreadcrumbItem Text="Home" Url="https://blazor.syncfusion.com/demos/"></BreadcrumbItem>
                    <BreadcrumbItem Text="Components" Url="https://blazor.syncfusion.com/demos/datagrid/overview"></BreadcrumbItem>
                    <BreadcrumbItem Text="Navigations" Url="https://blazor.syncfusion.com/demos/menu-bar/default-functionalities"></BreadcrumbItem>
                    <BreadcrumbItem Text="Breadcrumb" Url="https://blazor.syncfusion.com/demos/breadcrumb/default-functionalities"></BreadcrumbItem>
                </BreadcrumbItems>
            </SfBreadcrumb>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.Url">
            <summary>
            Gets or sets the Url based on which the Breadcrumb items are generated.
            </summary>
            <value>
            The value as a Url string to generate Breadcrumb items. The default value is <c>String.Empty</c>.
            </value>
            <remarks>
            You can specify only absolute Url to this property.
            </remarks>
            <example>
            <code><![CDATA[
            <SfBreadcrumb Url="https://blazor.syncfusion.com/demos/breadcrumb/navigation">
            </SfBreadcrumb>
            ]]></code>
            </example>
            <seealso cref="T:Syncfusion.Blazor.Navigations.BreadcrumbItems"/>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.Items">
            <summary>
            Gets or sets the list of breadcrumb items that will be populated using the <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbItems"/> tag directive. 
            </summary>
            <value>
            <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbItems"/>
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.ActiveItem">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.Blazor.Navigations.BreadcrumbItem.Url"/> of the active breadcrumb item.
            </summary>
            <value>
            This property contains Url string of active breadcrumb item.
            </value>
            <remarks>
            This property is updated only when the <see cref="P:Syncfusion.Blazor.Navigations.BreadcrumbItem.Url" /> has value.
            </remarks>
            <example>
            <code><![CDATA[
            <SfBreadcrumb>
                <BreadcrumbItems ActiveItem="@activeItem">
                    <BreadcrumbItem Text="Home" Url="https://blazor.syncfusion.com/demos/"></BreadcrumbItem>
                    <BreadcrumbItem Text="Components" Url="https://blazor.syncfusion.com/demos/datagrid/overview"></BreadcrumbItem>
                    <BreadcrumbItem Text="Navigations" Url="https://blazor.syncfusion.com/demos/menu-bar/default-functionalities"></BreadcrumbItem>
                    <BreadcrumbItem Text="Breadcrumb" Url="https://blazor.syncfusion.com/demos/breadcrumb/default-functionalities"></BreadcrumbItem>
                </BreadcrumbItems>
            </SfBreadcrumb>
            @code {
                private string activeItem = "https://blazor.syncfusion.com/demos/menu-bar/default-functionalities";
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.MaxItems">
            <summary>
            Gets or sets the maximum number of breadcrumb items to be visible in the breadcrumb component.
            If the number of items exceeds this count, then items are rendered based on <see cref="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.OverflowMode"/> property. 
            </summary>
            <value>
            The number of breadcrumb items to be visible in breadcrumb component. The default value is <c>0</c>. 
            </value>
            <remarks>
            The <see cref="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.MaxItems"/> is applicable only if the number of <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbItem"/> is greater than <c>2</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.OverflowMode">
            <summary>
            Gets or sets a value that indicates how to display breadcrumb items when the breadcrumb items count exceeds <see cref="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.MaxItems"/>.
            </summary>
            <value>
            One of the <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbOverflowMode"/> enumeration. The default value is <see cref="F:Syncfusion.Blazor.Navigations.BreadcrumbOverflowMode.Default"/>
            </value>
            <remarks>
            If the <c>OverflowMode</c> is <c>Default</c>, the exceeded items will be hidden and while clicking on the previous item, the hidden item will become visible.
            If the <c>OverflowMode</c> is <c>Collapsed</c>,  only the first and last items will be visible, and the remaining items will be hidden with collapsed icon.
            When the collapsed icon is clicked, all items become visible and scroll will be enabled if the space is not enough to show all items. 
            </remarks>
            <seealso cref="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.Width"/>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.Width">
            <summary>
            Gets or sets the width for the Breadcrumb component container element.
            If the Breadcrumb items overflows the container width, the browser scrollbar will be activated.
            </summary>
            <value>
            It contains component width in pixel or percentage. The default value is <c>String.Empty</c>.
            </value>
            <remarks>
            If the <see cref="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.MaxItems"/> property is specified, the <see cref="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.MaxItems"/> property will be prioritized than Breadcrumb container width and responsive UI will be activated based on <see cref="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.OverflowMode"/>.
            You can set container width using CSS and HTML style attribute using <c>@attributes</c>.
            </remarks>
            <seealso cref="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.MaxItems"/>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.EnableNavigation">
            <summary>
            Gets or sets whether the built-in item navigation is enabled or not. The breadcrumb component navigates to url based on the item clicked by user.
            </summary>
            <value>
            <c>true</c>, if built-in item navigation is enabled; otherwise, <b>false</b>.The default value is <c>true</c>.
            </value>
            <remarks>
            You can handle navigation in using <see cref="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.ItemClicked"/> event by setting <see cref="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.EnableNavigation"/> as <c>false</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.EnableActiveItemNavigation">
            <summary>
            Gets or sets whether the navigation is enabled for active item (last breadcrumb item).
            </summary>
            <value>
            <c>true</c>, if the navigation is enabled for last breadcrumb item and it is clickable. otherwise, <b>false</b>.The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.EnablePersistence">
            <summary>
            Gets or sets whether to persist component's state between page reloads. When set to <c>true</c>, the <see cref="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.ActiveItem" /> property is persisted.
            </summary>
            <value>
            <c>true</c>, if the component's state persistence is enabled. The default value is <c>false</c>.
            </value>
            <remarks>
            Component's <see cref="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.ActiveItem"/> property will be stored in browser local storage to persist component's state when page reloads.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.HtmlAttributes">
            <summary>
            Gets or sets a collection of additional attributes that will applied to the Breadcrumb container element.
            </summary>
            <remarks>
            Additional attributes can be added by specifying as inline attributes or by specifying <c>@attributes</c> directive.
            </remarks>
            <example>
            In the below code example, Breadcrumb width has been specified as style attribute in <see cref="T:Syncfusion.Blazor.Navigations.SfBreadcrumb"/> tag directive.
            <code><![CDATA[
            <SfBreadcrumb style="width:200px">
                <BreadcrumbItems>
                    <BreadcrumbItem Text="Home" Url="https://blazor.syncfusion.com/demos/"></BreadcrumbItem>
                    <BreadcrumbItem Text="Components" Url="https://blazor.syncfusion.com/demos/datagrid/overview"></BreadcrumbItem>
                    <BreadcrumbItem Text="Navigations" Url="https://blazor.syncfusion.com/demos/menu-bar/default-functionalities"></BreadcrumbItem>
                    <BreadcrumbItem Text="Breadcrumb" Url="https://blazor.syncfusion.com/demos/breadcrumb/default-functionalities"></BreadcrumbItem>
                </BreadcrumbItems>
            </SfBreadcrumb>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.ChildContent">
            <exclude />
            <summary>
            Gets or sets the child content of Breadcrumb component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.ActiveItemChanged">
            <exclude/>
            <summary>
            Gets or sets a callback that updates the bound active item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.ItemRendering">
            <summary>
            Gets or sets an event callback that is raised while rendering <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbItem"/>.
            </summary>
            <remarks>
            You can customize the breadcrumb items rendering using <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbItemRenderingEventArgs"/>.
            </remarks>
            <example>
            In the below code example, the breadcrumb item text is changed to lower casing using <c>ItemRendering</c> event.
            <code><![CDATA[
            <SfBreadcrumb ItemRendering="@ItemRendering">
                <BreadcrumbItems>
                    <BreadcrumbItem Text="Program Files"></BreadcrumbItem>
                    <BreadcrumbItem Text="Commom Files"></BreadcrumbItem>
                    <BreadcrumbItem Text="Services"></BreadcrumbItem>
                    <BreadcrumbItem Text="Config.json"></BreadcrumbItem>
                </BreadcrumbItems>
            </SfBreadcrumb>
            @code {
                private void ItemRendering(BreadcrumbItemRenderingEventArgs args) {
                    args.Item.Text = args.Item.Text.ToLower();
                }
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.ItemClicked">
            <summary>
            Gets or sets an event callback that is raised when the <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbItem"/> is clicked. 
            </summary>
            <remarks>
            You can customize the item navigation using <see cref="T:Syncfusion.Blazor.Navigations.BreadcrumbClickedEventArgs"/> by setting <seealso cref="P:Syncfusion.Blazor.Navigations.SfBreadcrumb.EnableNavigation"/> as <c>false</c>.
            The event is raised for UI based click only.
            </remarks>
            <example>
            <code><![CDATA[
            @inject NavigationManager NavigationManager
            <SfBreadcrumb ItemClicked="@ItemClicked" EnableNavigation="false">
                <BreadcrumbItems>
                    <BreadcrumbItem Text="Program Files" Url="programfiles"></BreadcrumbItem>
                    <BreadcrumbItem Text="Commom Files" Url="commomfiles"></BreadcrumbItem>
                    <BreadcrumbItem Text="Services" Url="services"></BreadcrumbItem>
                    <BreadcrumbItem Text="Config" Url="config"></BreadcrumbItem>
                </BreadcrumbItems>
            </SfBreadcrumb>
            @code {
                private void ItemClicked(BreadcrumbClickedEventArgs args) {
                    NavigationManager.NavigateTo(args.Item.Url);
                }
            }
            ]]></code>
            </example>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SfContextMenu`1">
            <summary>
            ContextMenu is a graphical user interface that appears on the user right click/touch hold operation.
            </summary>
            <summary>
            ContextMenu is a graphical user interface that appears on the user right click/touch hold operation.
            </summary>
            <summary>
            ContextMenu is a graphical user interface that appears on the user right click/touch hold operation.
            </summary>
            <summary>
            ContextMenu is a graphical user interface that appears on the user right click/touch hold operation.
            </summary>
            <summary>
            ContextMenu is a graphical user interface that appears on the user right click/touch hold operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfContextMenu`1.Filter">
            <summary>
            Specifies the filter selector for elements inside the target in that the context menu will be opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfContextMenu`1.Target">
            <summary>
            Specifies target element selector in which the ContextMenu should be opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfContextMenu`1.ShowOn">
            <summary>
            Specifies the ContextMenu triggering event name.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfContextMenu`1.Close">
            <summary>
            Closes the ContextMenu if it is opened.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfContextMenu`1.Open(System.Nullable{System.Double},System.Nullable{System.Double},System.Boolean)">
            <summary>
            This method is used to open the ContextMenu in specified position. If the positions are not specified, the context menu
            will open at its rendered position.
            </summary>
            <param name = "clientX">Specifies the horizontal position of the context menu.</param>
            <param name = "clientY">Specifies the vertical position of the context menu.</param>
            <param name = "enableCollision">Specifies the collision detection of the context menu.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfContextMenu`1.OpenContextMenuAsync(System.Double,System.Double)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.MenuEffect">
            <summary>
            Menu animation effects.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.MenuEffect.SlideDown">
            <summary>
            Defines menu effect as SlideDown.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.MenuEffect.None">
            <summary>
            Defines menu effect as None.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.MenuEffect.ZoomIn">
            <summary>
            Defines menu effect as ZoomIn.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.MenuEffect.FadeIn">
            <summary>
            Defines menu effect as FadeIn.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.Orientation">
            <summary>
            Specifies the option for orientation mode of Menu. By default, component rendered in Horizontal orientation mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.Orientation.Horizontal">
            <summary>
            Defines menu orientation as Horizontal.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.Orientation.Vertical">
            <summary>
            Defines menu orientation as Vertical.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs`1">
            <summary>
            Interface for OnOpen/OnClose event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs`1.Cancel">
            <summary>
            Set true to prevent menu from opening.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs`1.Element">
            <summary>
            Specifies the menu container element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs`1.Items">
            <summary>
            Specifies the current menu items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs`1.ParentItem">
            <summary>
            Specifies the parent item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs`1.ScrollHeight">
            <summary>
            Specifies the menu container height to show the scrollable menu.
            It is applicable only when the EnableScrolling property is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs`1.Top">
            <summary>
            Specifies the clientY position of the menu.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs`1.Left">
            <summary>
            Specifies the clientX position of the menu.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.MenuEventArgs`1">
            <summary>
            Interface for OnItemRender/ItemSelected event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuEventArgs`1.Element">
            <summary>
            Specifies the menu container element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuEventArgs`1.Event">
            <summary>
            Specifies the item select event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuEventArgs`1.Item">
            <summary>
            Specifies the selected item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.OpenCloseMenuEventArgs`1">
            <summary>
            Interface for Opened/Closed event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.OpenCloseMenuEventArgs`1.Element">
            <summary>
            Specifies the menu container element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.OpenCloseMenuEventArgs`1.Items">
            <summary>
            Specifies the current menu items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.OpenCloseMenuEventArgs`1.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.OpenCloseMenuEventArgs`1.ParentItem">
            <summary>
            Specifies the parent item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.OpenCloseMenuEventArgs`1.NavigationIndex">
            <summary>
            Specifies the Navigation Index.
            <exclude/>
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.MenuItemModel">
            <summary>
            Interface for MenuItem.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuItemModel.Items">
            <summary>
            Specifies the list of menu item model.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.MenuAnimationSettings">
            <summary>
            Specifies the animation settings for the menu open.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuAnimationSettings.Duration">
            <summary>
            Specifies the time duration to transform object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuAnimationSettings.Easing">
            <summary>
            Specifies the easing effect applied while transform.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuAnimationSettings.Effect">
            <summary>
            Specifies the effect that shown in the sub menu transform.
            The possible effects are:
             None: Specifies the sub menu transform with no animation effect.
             SlideDown: Specifies the sub menu transform with slide down effect.
             ZoomIn: Specifies the sub menu transform with zoom in effect.
             FadeIn: Specifies the sub menu transform with fade in effect.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.MenuEvents`1">
            <summary>
            Used to configure the menu events.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuEvents`1.OnClose">
            <summary>
            Triggers before closing the menu.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuEvents`1.OnItemRender">
            <summary>
            Triggers while rendering each menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuEvents`1.OnOpen">
            <summary>
            Triggers before opening the menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuEvents`1.Created">
            <summary>
            Triggers once the component rendering is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuEvents`1.Closed">
            <summary>
            Triggers while closing the menu.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuEvents`1.Opened">
            <summary>
            Triggers while opening the menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuEvents`1.ItemSelected">
            <summary>
            Triggers while selecting menu item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.MenuFieldSettings">
            <summary>
            Configures the field options of the Menu.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuFieldSettings.Children">
            <summary>
            Specifies the children field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuFieldSettings.IconCss">
            <summary>
            Specifies the CSS icon field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuFieldSettings.ItemId">
            <summary>
            Specifies the itemId field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuFieldSettings.ParentId">
            <summary>
            Specifies the parentId field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuFieldSettings.Separator">
            <summary>
            Specifies the separator field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuFieldSettings.Disabled">
            <summary>
            Specifies the disabled field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuFieldSettings.Hidden">
            <summary>
            Specifies the hidden field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuFieldSettings.Text">
            <summary>
            Specifies the text field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuFieldSettings.Url">
            <summary>
            Specifies the URL field for Menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuFieldSettings.HtmlAttributes">
            <summary>
            Specifies the @attributes (additional attributes) field for Menu item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.MenuItem">
            <summary>
            Used to configure the items which is going to render as menu.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuItem.ChildContent">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuItem.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the menu Item that is used to include an icon.
            Menu Item can include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuItem.Id">
            <summary>
            Specifies the id for menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuItem.Items">
            <summary>
            Specifies the sub menu items that is the array of MenuItem.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuItem.Separator">
            <summary>
            Specifies separator between the menu items. Separator are either horizontal or vertical lines used to group menu items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuItem.Disabled">
            <summary>
            Used to enable or disable the menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuItem.Hidden">
            <summary>
            Used to hide or show the menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuItem.Text">
            <summary>
            Specifies text for menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuItem.Url">
            <summary>
            Specifies URL for menu item that creates the anchor link to navigate to the url provided.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuItem.HtmlAttributes">
            <summary>
            You can add the additional HTML attributes such as style, title etc., to the menu item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.MenuItems">
            <summary>
            A list of items that is used to configure menu items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuItems.ChildContent">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.MenuTemplates`1">
            <summary>
            Used to specify templates for rendering menu items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.MenuTemplates`1.Template">
            <summary>
            Specifies the template for Menu.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SfMenu`1">
            <summary>
            Menu is a graphical user interface that serve as navigation headers for your application.
            </summary>
            <summary>
            Menu is a graphical user interface that serve as navigation headers for your application.
            </summary>
            <summary>
            Menu is a graphical user interface that serve as navigation headers for your application.
            </summary>
            <summary>
            Menu is a graphical user interface that serve as navigation headers for your application.
            </summary>
            <summary>
            Menu is a graphical user interface that serve as navigation headers for your application.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfMenu`1.HamburgerMode">
            <summary>
            Specifies whether to enable / disable the hamburger mode in Menu.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfMenu`1.Orientation">
            <summary>
            Specified the orientation of Menu whether it can be horizontal or vertical.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfMenu`1.Target">
            <summary>
            Specifies target element to open/close Menu while click in Hamburger mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfMenu`1.Title">
            <summary>
            Specifies the title text for hamburger mode in Menu.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfMenu`1.GetItemIndex(`0,System.Boolean)">
            <summary>
            This method is used to get the index of the menu item in the Menu based on the argument.
            </summary>
            <param name = "item">Item be passed to get the index.</param>
            <param name = "isUniqueId">Set `true` if it is a unique id.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfMenu`1.Open">
            <summary>
            Used to open the Menu in hamburger mode.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfMenu`1.OpenAsync">
            <summary>
            Used to open the Menu in hamburger mode.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfMenu`1.Close">
            <summary>
            Closes the Menu if it is opened in hamburger mode.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfMenu`1.CloseAsync">
            <summary>
            Closes the Menu if it is opened in hamburger mode.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfMenu`1.DocumentMouseDownAsync(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SidebarPosition">
            <summary>
            Specifies the Sidebar positions.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.SidebarPosition.Left">
            <summary>
            Specifies the position of the Left Sidebar corresponding to the main content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.SidebarPosition.Right">
            <summary>
            Specifies the position of the Right Sidebar corresponding to the main content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SidebarType">
            <summary>
            Specifies the Sidebar types.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.SidebarType.Slide">
            <summary>
            The sidebar translates the x and y positions of the main content area based on the sidebar width.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.SidebarType.Over">
            <summary>
            The sidebar floats over the main content area.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.SidebarType.Push">
            <summary>
            The sidebar pushes the main content area to appear side-by-side, and shrinks the main content within the screen width.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.SidebarType.Auto">
            <summary>
            Sidebar with `Over` type in mobile resolution and `Push` type in other higher resolutions.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.EventArgs">
            <summary>
            Interface for open and close events.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.EventArgs.Cancel">
            <summary>
            Determines whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.EventArgs.Element">
            <summary>
            Returns the element reference.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.EventArgs.Name">
            <summary>
            Returns the event name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.EventArgs.IsInteracted">
            <summary>
            Defines the boolean that returns true when the Sidebar is closed by user interaction, otherwise returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.EventArgs.Top">
            <summary>
            Specifies the clientY position of the target element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.EventArgs.Left">
            <summary>
            Specifies the clientX position of the target element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ChangeEventArgs">
            <summary>
            Defines the event arguments for the change event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ChangeEventArgs.Element">
            <summary>
            Returns the element reference.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ChangeEventArgs.Name">
            <summary>
            Returns event name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ChangeEventArgs.IsInteracted">
            <summary>
            Defines the boolean that returns true when the Sidebar is closed by user interaction, otherwise returns false.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.PersistenceValues">
            <summary>
            Interface for persistence values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.PersistenceValues.IsOpen">
            <summary>
            Gets or sets the Sidebar component is open or close.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SfSidebar">
            <summary>
            Partial Class SfSidebar.
            </summary>
            <summary>
            Partial Class SfSidebar.
            </summary>
            <summary>
            Partial Class SfSidebar.
            </summary>
            <summary>
            Partial Class SfSidebar.
            </summary>
            <summary>
            The SfSidebar component is an expandable and collapsible component that typically acts as a side container to place primary or secondary content alongside the main content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.Changed">
            <summary>
            Triggers when the state(expand/collapse) of the component is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.OnClose">
            <summary>
            Triggers when the component is ready to close.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.Created">
            <summary>
            Triggers when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.Destroyed">
            <summary>
            Triggers when the component gets destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.OnOpen">
            <summary>
            Triggers when the component is ready to open.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.OnParametersSetAsync">
            <summary>
            Method invoked when any changes in component state occurs.
            </summary>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>="Task".</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.ID">
            <summary>
            Sets id attribute for the sidebar element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.ChildContent">
            <summary>
            Specifies the child content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.Animate">
            <summary>
            Enable or disable the animation transitions on expanding or collapsing the Sidebar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.CloseOnDocumentClick">
            <summary>
            Specifies whether the Sidebar needs to be closed or not when the document area is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.DockSize">
            <summary>
            Specifies the size of the Sidebar in dock state. Dock size can be set in pixel values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.EnableDock">
            <summary>
            Specifies the docking state of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.EnableGestures">
            <summary>
            Enables the expand or collapse while swiping in the touch devices.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.EnablePersistence">
            <summary>
            Enable or disable the persisting component's state between page reloads. If enabled, isOpen state will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.EnableRtl">
            <summary>
            Enable or disable rendering Sidebar in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.IsOpen">
            <summary>
            Gets or sets the Sidebar component is open or close.
            When the Sidebar type is set to `Auto`,
            the component will be expanded in the desktop and collapsed in the mobile mode regardless of the isOpen property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.IsOpenChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.MediaQuery">
            <summary>
            Specifies the media query string for resolution, when opens the Sidebar.
            Example: assigning media query value to '(min-width: 600px)' will open the sidebar component only when the provided resolution is met else the sidebar will be in closed state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.Position">
            <summary>
            Specifies the position of the Sidebar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.ShowBackdrop">
            <summary>
            Specifies whether to apply overlay options to the main content or not when the Sidebar is in an open state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.Target">
            <summary>
            Allows to place the sidebar inside the target element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.Type">
            <summary>
            Specifies the expanding types of the Sidebar.
            `Over` - The sidebar floats over the main content area.
            `Push` - The sidebar pushes the main content area to appear side-by-side and shrinks the main content within the screen width.
            `Slide` - The sidebar translates the x and y positions of the main content area based on the sidebar width.
            The main content area will not be adjusted within the screen width.
             `Auto` - Sidebar with `Over` type in mobile resolution and `Push` type in other higher resolutions.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.Width">
            <summary>
            Specifies the width of the Sidebar. By default, the width of the Sidebar sets based on the size of its content.
            Width can also be set in pixel values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.ZIndex">
            <summary>
            Specifies the z-index of the Sidebar. It is applicable only when sidebar act as the overlay type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfSidebar.HtmlAttributes">
            <summary>
            You can add the additional input attributes such as disabled, value, and more to the root element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.Hide">
            <summary>
            Hide the Sidebar component, if it is in an open state.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.SidebarHide">
            <summary>
            Hide the Sidebar component, if it is in an open state.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.Show">
            <summary>
            Shows the Sidebar component, if it is in closed state.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.SidebarShow">
            <summary>
            Shows the Sidebar component, if it is in closed state.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.Toggle">
            <summary>
            Shows or hides the Sidebar based on the current state.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.SetLocalStorage(System.String,System.String)">
            <summary>
            Update the Persistence value to local storage.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.SerializeModel">
            <summary>
            Updating the persisting values to our component properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.UpdateAttributes">
            <summay>
            Updates attributes added for the Sidebar component.
            </summay>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.SetDock">
            <summary>
              Updates the dock styles and classes for the sidebar element.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.TriggerChange(System.Boolean,Syncfusion.Blazor.Navigations.ChangeEventArgs)">
            <summary>
            Triggers change event.
            </summary>
            <exclude/>
            <param name="visible">visibles.</param>
            <param name="argsvalue">argsvalue.</param>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.TriggerShow(Syncfusion.Blazor.Navigations.EventArgs)">
            <summary>
             Invoke show method from client.
            </summary>
            <exclude/>
            <param name="args">args.</param>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.TriggerHide(Syncfusion.Blazor.Navigations.EventArgs)">
            <summary>
             Invoke hide method from client.
             </summary>
            <exclude/>
            <param name="args">args.</param>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfSidebar.GetProperties">
            <summary>
             Method to Get Properties.
            </summary>
            <returns>properties.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.AddEventArgs">
            <summary>
            A class that holds options to control the adding or added item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AddEventArgs.AddedItems">
            <summary>
            Defines the added Tab item element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AddEventArgs.Cancel">
            <summary>
            Specifies a value whether to prevent the current action or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.AddEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.RemoveEventArgs">
            <summary>
            A class that holds options to control the removing and removed item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.RemoveEventArgs.Cancel">
            <summary>
            Specifies a value whether to prevent the current action or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.RemoveEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.RemoveEventArgs.RemovedIndex">
            <summary>
            Returns the removed Tab item index.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.DragEventArgs">
            <summary>
            A class that holds options to control the dragged item action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragEventArgs.Cancel">
            <summary>
            Specify a value whether to prevent the drag action or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragEventArgs.Index">
            <summary>
            Returns the index of Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragEventArgs.DraggedItem">
            <summary>
            Returns the index of dragged Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragEventArgs.DroppedItem">
            <summary>
            Returns the index of dropped Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragEventArgs.Left">
            <summary>
            Return the Client X value of target element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragEventArgs.Top">
            <summary>
            Return the Client Y value of target element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SelectEventArgs">
            <summary>
            A class that holds options to control the selected item action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectEventArgs.Cancel">
            <summary>
            Specify a value whether to prevent the current action or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectEventArgs.IsSwiped">
            <summary>
            Returns a value whether content selection is done through swiping or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectEventArgs.PreviousIndex">
            <summary>
            Returns the index of previous Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectEventArgs.SelectedIndex">
            <summary>
            Returns the index of selected Tab item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SelectingEventArgs">
            <summary>
            A class that holds options to control the selecting item action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectingEventArgs.Cancel">
            <summary>
            Specifies a value whether to prevent the current action or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectingEventArgs.IsSwiped">
            <summary>
            Returns a value whether the content selection is done through swiping or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectingEventArgs.Name">
            <summary>
            Returns the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectingEventArgs.PreviousIndex">
            <summary>
            Returns the index of the previous Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectingEventArgs.SelectedIndex">
            <summary>
            Returns the index of the selected Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SelectingEventArgs.SelectingIndex">
            <summary>
            Returns the index of the selecting Tab item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.HeaderModel">
            <summary>
            A class to define the properties of a tab header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.HeaderModel.IconCss">
            <summary>
            Specifies the icon class that is used to render an icon in the Tab header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.HeaderModel.IconPosition">
            <summary>
            Options for positioning the icon in the Tab item header. This property depends on the `IconCss` property.
            The possible values are:
            - left: Places the icon to the `left` of the item.
            - top: Places the icon on the `top` of the item.
            - right: Places the icon to the `right` end of the item.
            - bottom: Places the icon at the `bottom` of the item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.HeaderModel.Text">
            <summary>
            Specifies the display text of the Tab header.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TabItemModel">
            <summary>
            A class to define the properties of a tab Item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItemModel.Content">
            <summary>
            Specifies the content of Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItemModel.CssClass">
            <summary>
            Sets the CSS classes to the Tab item to customize its styles.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItemModel.Disabled">
            <summary>
            Specifies a value that indicates whether the control is disabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItemModel.Header">
            <summary>
            The object used for configuring the Tab item header properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItemModel.HeaderTemplate">
            <summary>
            Specifies the header content of the Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItemModel.Visible">
            <summary>
            Specifies a value that indicates whether the tab is visible or not.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SfTab">
            <summary>
            Tab is a content panel to show multiple contents in a compact space. Also, only one tab is active at a time. Each Tab item has an associated content, that will be displayed based on the active Tab.
            </summary>
            <summary>
            Tab is a content panel to show multiple contents in a compact space. Also, only one tab is active at a time. Each Tab item has an associated content, that will be displayed based on the active Tab.
            </summary>
            <summary>
            Tab is a content panel to show multiple contents in a compact space. Also, only one tab is active at a time. Each Tab item has an associated content, that will be displayed based on the active Tab.
            </summary>
            <summary>
            Tab is a content panel to show multiple contents in a compact space. Also, only one tab is active at a time. Each Tab item has an associated content, that will be displayed based on the active Tab.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent in the render tree,
            and the incoming values have been assigned to properties.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.ID">
            <summary>
            Sets ID attribute for the tab element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.ChildContent">
            <summary>
            Child Content for Tab.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.Animation">
            <summary>
            Specifies the animation settings of the Tabs component. The animation effect can be applied to activate the tab with duration and delay.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.CssClass">
            <summary>
            Sets the CSS classes to the root element of the Tabs that helps to customize the component styles.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.EnablePersistence">
            <summary>
            Enable or disable persisting component's state between page reloads.
            If enabled, the tab’s selected item will be persisted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.AllowDragAndDrop">
            <summary>
            Indicates whether the Tab allows drag and drop over tab items. Tab item has been reordered based on the dropped item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.DragArea">
            <summary>
            Defines the area in which the draggable element movement will be occurring. Outside that area will be restricted
            for the draggable element movement. By default, the draggable element movement occurs with Tabitems.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left (RTL) direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.HeaderPlacement">
            <summary>
            Specifies the orientation of the Tab header.
            The possible values are:
            - Top: Places the Tab header on the top.
            - Bottom: Places the Tab header at the bottom.
            - Left: Places the Tab header at the left.
            - Right: Places the Tab header at the right.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.Height">
            <summary>
            Specifies the height of the Tabs component. By default, Tab height is set based on the height of its parent.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.Items">
            <summary>
            A list of items that are used to configure the Tabs component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.LoadOn">
            <summary>
            Specifies the modes for the Tab content.
            The possible modes are:
            `Dynamic` Load the Tab content dynamically, which is rendering its content when switching its header.
            `Init` Loads all the tab contents on initial loading.
            `Demand` Loads the Tab content when required but keeps the content once it is rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.OverflowMode">
            <summary>
            Specifies the display mode which will be applied when the Tabs exceeds the viewing area.
            The possible modes are:
            - Scrollable: All the elements will be displayed in a single line with horizontal scrolling enabled.
            - Popup: Tab container will hold the items that can be placed within the available space and the rest of the items will be moved to the popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.ScrollStep">
            <summary>
            Specifies the scrolling distance that applies when scrolling in Tab and enabled Scrollable mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.SelectedItem">
            <summary>
            Specifies the index for activating the Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.SelectedItemChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.ShowCloseButton">
            <summary>
            Specifies a value that indicates whether to show the close button in the Tab header or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.Width">
            <summary>
            Specifies the width of the Tabs component. By default, Tab width sets based on the width of its parent.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTab.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as id, title etc., to the tab element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.AddTab(System.Collections.Generic.List{Syncfusion.Blazor.Navigations.TabItem},System.Int32)">
            <summary>
            Adds new items to the Tab that accepts a list of Tab items.
            </summary>
            <param name="items">A list of items that are added to the Tab.</param>
            <param name="index">Specifies an index value that determines where the items to be added.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.RemoveTab(System.Int32)">
            <summary>
            Removes a particular Tab based on index from the Tabs.
            </summary>
            <param name="index">Index of tab item that is going to be removed.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.EnableTab(System.Int32,System.Boolean)">
            <summary>
            Enables or disables a particular tab item. On passing the value as `false`, the tab will be disabled.
            </summary>
            <param name="index">Index value of target Tab item.</param>
            <param name="isEnable">Specify a Boolean value that determines whether the command should be enabled or disabled. By default, isEnable has true.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.EnableTabAsync(System.Int32,System.Boolean)">
            <summary>
            Enables or disables a particular tab item. On passing the value as `false`, the tab will be disabled.
            </summary>
            <param name="index">Index value of target Tab item.</param>
            <param name="isEnable">Specify a Boolean value that determines whether the command should be enabled or disabled. By default, isEnable has true.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.HideTab(System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Shows or hides a particular Tab based on the specified index.
            </summary>
            <param name="index">Index value of target item.</param>
            <param name="isHide">Based on this Boolean value, item will be hide (false) or show (true).</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.HideTabAsync(System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Shows or hides a particular Tab based on the specified index.
            </summary>
            <param name="index">Index value of target item.</param>
            <param name="isHide">Based on this Boolean value, item will be hide (false) or show (true).</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.Select(System.Int32)">
            <summary>
            Select (activate) a particular tab based on the specified index.
            </summary>
            <param name="index">Index is used for selecting an item from the Tab.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.SelectAsync(System.Int32)">
            <summary>
            Select (activate) a particular tab based on the specified index.
            </summary>
            <param name="index">Index is used for selecting an item from the Tab.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.Disable(System.Boolean)">
            <summary>
            Specifies the value to disable or enable the Tabs component. When set to `true`, the component will be disabled.
            </summary>
            <param name="disable">Based on this Boolean value, Tab will be enabled (false) or disabled (true).</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.DisableAsync(System.Boolean)">
            <summary>
            Specifies the value to disable or enable the Tabs component. When set to `true`, the component will be disabled.
            </summary>
            <param name="disable">Based on this Boolean value, Tab will be enabled (false) or disabled (true).</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.GetTabItem(System.Int32)">
            <summary>
            Return a tab item element based on the specified index.
            </summary>
            <param name="index">Index is used for accessing tab header item element from the Tab.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.GetTabContent(System.Int32)">
            <summary>
            Returns the tab content element based on the specified index.
            </summary>
            <param name="index">Index is used for accessing tab content element from the Tab.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.Refresh">
            <summary>
            Refresh the entire tabs component.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.RefreshAsync">
            <summary>
            Refresh the entire tabs component.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.CreatedEvent">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.OnDragStart(System.Int32)">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.Dragged(System.Int32,System.Int32,System.Int32,System.Int32)">
            <exclude />
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTab.SelectingEvent(Syncfusion.Blazor.Navigations.SelectingEventArgs,System.Nullable{System.Int32})">
            <exclude />
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TabAnimationNext">
            <summary>
            Specifies the animation to appear when moving to the next Tab content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabAnimationNext.Duration">
            <summary>
            Specifies the time duration to transform content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabAnimationNext.Easing">
            <summary>
            Specifies the easing effect applied when transforming the content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabAnimationNext.Effect">
            <summary>
            Specifies the animation effect for displaying the next Tab content.
            Default animation is given as SlideRightIn for next tab animation. You can also disable the animation by setting the animation effect as none.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.TabAnimationNext.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.TabAnimationNext.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent in the render tree,
            and the incoming values have been assigned to properties.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TabAnimationPrevious">
            <summary>
            Specifies the animation to appear when moving to the previous Tab content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabAnimationPrevious.Duration">
            <summary>
            Specifies the time duration to transform the content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabAnimationPrevious.Easing">
            <summary>
            Specifies the easing effect applied when transforming the content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabAnimationPrevious.Effect">
            <summary>
            Specifies the animation effect for displaying the previous Tab content.
            Default animation is given as SlideLeftIn for previous tab animation. You can also disable the animation by setting the animation effect as none.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.TabAnimationPrevious.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.TabAnimationPrevious.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent in the render tree,
            and the incoming values have been assigned to properties.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TabAnimationSettings">
            <summary>
            A class used for configuring the Tab animation properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabAnimationSettings.ChildContent">
            <summary>
            Child Content for the Tab Animation Settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabAnimationSettings.Next">
            <summary>
            Specifies the animation to appear when moving to the next Tab content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabAnimationSettings.Previous">
            <summary>
            Specifies the animation to appear when moving to the previous Tab content.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.TabAnimationSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.TabAnimationSettings.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent in the render tree,
            and the incoming values have been assigned to properties.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.HeaderPosition">
            <summary>
            Options to set the orientation of Tab header.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.HeaderPosition.Top">
            <summary>
            Places the Tab header on the top.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.HeaderPosition.Bottom">
            <summary>
            Places the Tab header at the bottom.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.HeaderPosition.Left">
            <summary>
            Places the Tab header on the left.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.HeaderPosition.Right">
            <summary>
            Places the Tab header on the right.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ContentLoad">
            <summary>
            Specifies the options of Tab content display mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ContentLoad.Dynamic">
            <summary>
            The content of the selected tab alone will be loaded and available in DOM and it will be replaced with the corresponding content if you select the tab dynamically.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ContentLoad.Init">
            <summary>
            The content of all the tabs are rendered on the initial load and maintained in the DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ContentLoad.Demand">
            <summary>
            The content of the selected tab alone is loaded initially. The content of the tabs which were loaded once will be maintained in the DOM.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TabEvents">
            <summary>
            Configure event handlers to handle the events with the Tabs component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabEvents.Added">
            <summary>
            The event triggers after adding the item to the Tabs.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabEvents.Adding">
            <summary>
            The event triggers before adding the tab item to the Tabs.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabEvents.Created">
            <summary>
            The event triggers once the component rendering is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabEvents.Destroyed">
            <summary>
            The event triggers when the component gets destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabEvents.Removed">
            <summary>
            The event triggers after removing the item from the Tabs.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabEvents.Removing">
            <summary>
            The event triggers before removing the item from the Tabs.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabEvents.Selected">
            <summary>
            The event triggers after the tab item gets selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabEvents.Selecting">
            <summary>
            The event triggers before the tab item gets selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabEvents.OnDragStart">
            <summary>
            The event triggers when the Tab item drag starts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabEvents.Dragged">
            <summary>
            The event triggers after the tab item gets dropped.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.TabEvents.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TabHeader">
            <summary>
            A class used for configuring the Tab header properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabHeader.IconCss">
            <summary>
            Specifies the icon class that is used to render an icon in the Tab header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabHeader.IconPosition">
            <summary>
            Options for positioning the icon in the Tab item header. This property depends on the `IconCss` property.
            The possible values are:
            - left: Places the icon to the `left` of the item.
            - top: Places the icon on the `top` of the item.
            - right: Places the icon to the `right` end of the item.
            - bottom: Places the icon at the `bottom` of the item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabHeader.Text">
            <summary>
            Specifies the display text of the Tab header.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.TabHeader.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.TabHeader.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent in the render tree,
            and the incoming values have been assigned to properties.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TabItem">
            <summary>
            An item object that is used to configure the Tab.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItem.ChildContent">
            <summary>
            Child Content for the Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItem.ContentTemplate">
            <summary>
            Specifies the content template of the Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItem.Content">
            <summary>
            Specifies the content of Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItem.CssClass">
            <summary>
            Sets the CSS classes to the Tab item to customize its styles.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItem.Disabled">
            <summary>
            Specifies a value that indicates whether the control is disabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItem.Header">
            <summary>
            The object used for configuring the Tab item header properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItem.HeaderTemplate">
            <summary>
            Specifies the header content of the Tab item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItem.Visible">
            <summary>
            Specifies a value that indicates whether the tab is visible or not.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.TabItem.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.TabItem.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent in the render tree,
            and the incoming values have been assigned to properties.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TabItems">
            <summary>
            A list of items that are used to configure the Tabs component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItems.ChildContent">
            <summary>
            Child Content for the Tab items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TabItems.Items">
            <summary>
            A list of items that are used to configure the tab item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.TabItems.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ClickEventArgs">
            <summary>
            A class that holds options to control the toolbar clicked action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ClickEventArgs.Cancel">
            <summary>
            Defines the prevent action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ClickEventArgs.Item">
            <summary>
            Defines the current Toolbar Item Object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ClickEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ClickEventArgs.OriginalEvent">
            <summary>
            Defines the current Event arguments.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ItemModel">
            <summary>
            A class for a toolbar Item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.Click">
            <summary>
            Event triggers when `click` the toolbar item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.Align">
            <summary>
            Specifies the location for aligning Toolbar items on the Toolbar. Each command will be aligned according to the `Align` property.
            Possible values are:
            - Left: To align commands to the left side of the Toolbar.
            - Center: To align commands at the center of the Toolbar.
            - Right: To align commands to the right side of the Toolbar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.CssClass">
            <summary>
            Defines single/multiple classes (separated by space) to be used for customization of commands.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.Disabled">
            <summary>
            Specifies whether an item should be disabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.HtmlAttributes">
            <summary>
            Defines htmlAttributes used to add custom attributes to Toolbar command.
            Supports HTML attributes such as style, class, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.Id">
            <summary>
            Specifies the unique ID to be used with button or input element of Toolbar items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.Overflow">
            <summary>
            Specifies the Toolbar command display area when an element's content is too large to fit available space.
            This is applicable only to `Popup` mode. Possible values are:
            - Show:  Always shows the item as the primary priority on the Toolbar.
            - Hide: Always shows the item as the secondary priority on the popup.
            - None: No priority for display, and as per normal order moves to popup when content exceeds.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.PrefixIcon">
            <summary>
            Defines single/multiple classes separated by space used to specify an icon for the button.
            The icon will be positioned before the text content if text is available, otherwise the icon alone will be rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.ShowAlwaysInPopup">
            <summary>
            Defines the priority of items to display it in popup always.
            It allows to maintain toolbar item on popup always but it does not work for toolbar priority items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.ShowTextOn">
            <summary>
            Specifies where the button text will be displayed on popup mode of the Toolbar.
            Possible values are:
            - Toolbar:  Text will be displayed on Toolbar only.
            - Overflow: Text will be displayed only when content overflows to popup.
            - Both: Text will be displayed on popup and Toolbar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.SuffixIcon">
            <summary>
            Defines single/multiple classes separated by space used to specify an icon for the button.
            The icon will be positioned after the text content if text is available.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.Template">
            <summary>
            Specifies the template that can be added as a Toolbar command.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.Text">
            <summary>
            Specifies the text to be displayed on the Toolbar button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.TooltipText">
            <summary>
            Specifies the text to be displayed on hovering the Toolbar button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.Type">
            <summary>
            Specifies the types of command to be rendered in the Toolbar.
            Supported types are:
            - Button: Creates the Button control with its given properties like text, prefixIcon, etc.
            - Separator: Adds a horizontal line that separates the Toolbar commands.
            - Input: Creates an input element that is applicable to template rendering with Syncfusion controls like DropDownList,
            AutoComplete, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.Visible">
            <summary>
            Specifies whether an item should be hidden or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ItemModel.Width">
            <summary>
            Specifies the width of the Toolbar button commands.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SfToolbar">
            <summary>
            The Toolbar control contains a group of commands that are aligned horizontally.
            </summary>
            <summary>
            The Toolbar control contains a group of commands that are aligned horizontally.
            </summary>
            <summary>
            The Toolbar control contains a group of commands that are aligned horizontally.
            </summary>
            <summary>
            The Toolbar control contains a group of commands that are aligned horizontally.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent in the render tree,
            and the incoming values have been assigned to properties.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.ID">
            <summary>
            Sets ID attribute for toolbar element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.ChildContent">
            <summary>
            Child Content for Toolbar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.AllowKeyboard">
            <summary>
            When this property is set to true, it allows the keyboard interaction in toolbar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.CssClass">
            <summary>
            Sets the CSS classes to root element of the Toolbar that helps to customize component styles.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.EnableCollision">
            <summary>
            Enable or disable the popup collision.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.Height">
            <summary>
            Specifies the height of the Toolbar in pixels/number/percentage. Number value is considered as pixels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.Items">
            <summary>
            A list of items that is used to configure Toolbar commands.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.OverflowMode">
            <summary>
            Specifies the Toolbar display mode when Toolbar content exceeds the viewing area.
            Possible modes are:
            - Scrollable: All the elements are displayed in a single line with horizontal scrolling enabled.
            - Popup: Prioritized elements are displayed on the Toolbar and the rest of elements are moved to the popup.
            - MultiRow: Displays the overflow toolbar items as an in-line of a toolbar.
            - Extended: Hide the overflowing toolbar items in the next row.  Show the overflowing toolbar items when you click the expand icons.
            If the popup content overflows the height of the page, the rest of the elements will be hidden.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.ScrollStep">
            <summary>
            Specifies the scrolling distance in scroller.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.Width">
            <summary>
            Specifies the width of the Toolbar in pixels/numbers/percentage. Number value is considered as pixels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfToolbar.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as id, title etc., to the toolbar element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.AddItems(System.Collections.Generic.List{Syncfusion.Blazor.Navigations.ToolbarItem},System.Int32)">
            <summary>
            Adds new items to the Toolbar that accepts an list of Toolbar items.
            </summary>
            <param name="items">A list of items to be added to the Toolbar.</param>
            <param name="index">Number value that determines where the command is to be added.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.RemoveItems(System.Int32)">
            <summary>
            Removes the items from the Toolbar at the specified index.
            </summary>
            <param name="index">Index of item which is to be removed from the Toolbar.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.EnableItems(System.Collections.Generic.List{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Enables or disables the specified Toolbar item.
            </summary>
            <param name="items">A list of toolbar item index to be enabled or disabled.</param>
            <param name="isEnable">Boolean value that determines whether the command should be enabled or disabled. By default, `isEnable` is set to true.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.HideItem(System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Shows or hides the Toolbar item that is in the specified index.
            </summary>
            <param name="index">Index value of target item to be hidden or shown.</param>
            <param name="isHide">Based on this Boolean value, item will be hide (true) or show (false). By default, isHide is false.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.HideItemAsync(System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Shows or hides the Toolbar item that is in the specified index.
            </summary>
            <param name="index">Index value of target item to be hidden or shown.</param>
            <param name="isHide">Based on this Boolean value, item will be hide (true) or show (false). By default, isHide is false.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.Disable(System.Boolean)">
            <summary>
            Specifies the value to disable/enable the Toolbar component.
            When set to `True`, the component will be disabled.
            </summary>
            <param name="disable">Based on this Boolean value, Toolbar will be enabled (false) or disabled (true).</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.DisableAsync(System.Boolean)">
            <summary>
            Specifies the value to disable/enable the Toolbar component.
            When set to `True`, the component will be disabled.
            </summary>
            <param name="disable">Based on this Boolean value, Toolbar will be enabled (false) or disabled (true).</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.RefreshOverflow">
            <summary>
            Refresh the whole Toolbar component without re-rendering.
            - It is used to manually refresh the Toolbar overflow modes such as scrollable, popup, multi row, and extended.
            - It will refresh the Toolbar component after loading items dynamically.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.RefreshOverflowAsync">
            <summary>
            Refresh the whole Toolbar component without re-rendering.
            - It is used to manually refresh the Toolbar overflow modes such as scrollable, popup, multi row, and extended.
            - It will refresh the Toolbar component after loading items dynamically.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.Refresh">
            <summary>
            Applies all the pending property changes and render the component again.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.RefreshAsync">
            <summary>
            Applies all the pending property changes and render the component again.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfToolbar.TriggerClickEvent(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Boolean,System.Boolean,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <exclude />
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.OverflowMode">
            <summary>
            Specifies the options of Toolbar display mode. Display option is considered when Toolbar content exceeds the available space.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.OverflowMode.Scrollable">
            <summary>
             Scrollable - All the elements are displayed in a single line with horizontal scrolling enabled.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.OverflowMode.Popup">
            <summary>
             Popup - Prioritized elements are displayed on the Toolbar and the rest of elements are moved to the popup.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.OverflowMode.MultiRow">
            <summary>
             MultiRow - Displays the overflow toolbar items as an in-line of a toolbar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.OverflowMode.Extended">
            <summary>
             Extended - Hide the overflowing toolbar items in the next row. Show the overflowing toolbar items when you click the expand icons. If the popup content overflows the height of the page, the rest of the elements will be hidden.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.DisplayMode">
            <summary>
            Specifies the options of where the text will be displayed in popup mode of the Toolbar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.DisplayMode.Both">
            <summary>
             Both - Text will be displayed on popup and Toolbar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.DisplayMode.Overflow">
            <summary>
             Overflow - Text will be displayed only when content overflows to popup.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.DisplayMode.Toolbar">
            <summary>
             Toolbar - Text will be displayed on Toolbar only.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ItemAlign">
            <summary>
            Specifies the options for aligning the Toolbar items.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ItemAlign.Left">
            <summary>
             Left - To align commands to the left side of the Toolbar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ItemAlign.Center">
            <summary>
             Center - To align commands at the center of the Toolbar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ItemAlign.Right">
            <summary>
             Right - To align commands to the right side of the Toolbar.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ItemType">
            <summary>
            Specifies the options for supporting element types of Toolbar command.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ItemType.Button">
            <summary>
             Button - Creates the Button control with its given properties like text, prefixIcon, etc.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ItemType.Separator">
            <summary>
             Separator - Adds a horizontal line that separates the Toolbar commands.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ItemType.Input">
            <summary>
             Input - Creates an input element that is applicable to template rendering with Syncfusion controls like DropDownList, AutoComplete, etc.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.OverflowOption">
            <summary>
            Specifies the options of the Toolbar item display area when the Toolbar content overflows to available space.Applicable to `Popup` mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.OverflowOption.None">
            <summary>
             None - No priority for display, and as per normal order moves to popup when content exceeds.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.OverflowOption.Show">
            <summary>
             Show - Always shows the item as the primary priority on the Toolbar.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.OverflowOption.Hide">
            <summary>
             Hide - Always shows the item as the secondary priority on the popup.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ToolbarItem">
            <summary>
            An item object that is used to configure Toolbar commands.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.ChildContent">
            <summary>
            Child Content for Toolbar item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.OnClick">
            <summary>
            Event triggers when click the toolbar item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.Align">
             <summary>
             Specifies the location for aligning Toolbar items on the Toolbar. Each command will be aligned according to the `Align` property.
             Possible values are:
             - Left: To align commands to the left side of the Toolbar.
             - Center: To align commands at the center of the Toolbar.
             - Right: To align commands to the right side of the Toolbar.
            
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.CssClass">
            <summary>
            Defines single/multiple classes (separated by space) to be used for customization of commands.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.Disabled">
            <summary>
            Specifies whether an item should be disabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.HtmlAttributes">
            <summary>
            Defines htmlAttributes used to add custom attributes to Toolbar command.
            Supports HTML attributes such as style, class, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.Id">
            <summary>
            Specifies the unique ID to be used with button or input element of Toolbar items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.Overflow">
            <summary>
            Specifies the Toolbar command display area when an element's content is too large to fit available space.
            This is applicable only to `Popup` mode. Possible values are:
            - Show:  Always shows the item as the primary priority on the Toolbar.
            - Hide: Always shows the item as the secondary priority on the popup.
            - None: No priority for display, and as per normal order moves to popup when content exceeds.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.PrefixIcon">
            <summary>
            Defines single/multiple classes separated by space used to specify an icon for the button.
            The icon will be positioned before the text content if text is available, otherwise the icon alone will be rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.ShowAlwaysInPopup">
            <summary>
            Defines the priority of items to display it in popup always.
            It allows to maintain toolbar item on popup always but it does not work for toolbar priority items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.ShowTextOn">
            <summary>
            Specifies where the button text will be displayed on popup mode of the Toolbar.
            Possible values are:
            - Toolbar:  Text will be displayed on Toolbar only.
            - Overflow: Text will be displayed only when content overflows to popup.
            - Both: Text will be displayed on popup and Toolbar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.SuffixIcon">
            <summary>
            Defines single/multiple classes separated by space used to specify an icon for the button.
            The icon will be positioned after the text content if text is available.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.Template">
             <summary>
             Specifies the HTML element/element ID as a string that can be added as a Toolbar command.
            
             </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.Text">
            <summary>
            Specifies the text to be displayed on the Toolbar button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.TooltipText">
            <summary>
            Specifies the text to be displayed on hovering the Toolbar button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.Type">
            <summary>
            Specifies the types of command to be rendered in the Toolbar.
            Supported types are:
            - Button: Creates the Button control with its given properties like text, prefixIcon, etc.
            - Separator: Adds a horizontal line that separates the Toolbar commands.
            - Input: Creates an input element that is applicable to template rendering with Syncfusion controls like DropDownList,
            AutoComplete, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.Visible">
            <summary>
            Specifies whether an item should be hidden or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItem.Width">
            <summary>
            Specifies the width of the Toolbar button commands.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.ToolbarItem.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.ToolbarItem.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent in the render tree,
            and the incoming values have been assigned to properties.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ToolbarItems">
            <summary>
            A list of items that is used to configure Toolbar commands.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItems.ChildContent">
            <summary>
            Child Content for Toolbar items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarItems.Items">
            <summary>
            A list of items that is used to configure Toolbar commands.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.ToolbarItems.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ExpandAction">
            <summary>
            Defines the expand type of the TreeView node.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ExpandAction.DoubleClick">
            <summary>
            Specifies the action on 'DoubleClick' the node expands or collapses. The expand/collapse operation happens when you double-click the node.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ExpandAction.Click">
            <summary>
            Specifies the action on 'Click' the node expands or collapses. The expand/collapse operation happens when you single-click the node.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.ExpandAction.None">
            <summary>
            The expand/collapse operation will not happen when you single-click or double-click the node.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SortOrder">
            <summary>
            Defines the sorting order type for TreeView.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.SortOrder.None">
            <summary>
            Specifies the nodes are not sorted.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.SortOrder.Ascending">
            <summary>
            Specifies the nodes are sorted in the 'Ascending' order.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.SortOrder.Descending">
            <summary>
            Specifies the nodes are sorted in the 'Descending' order.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TreeEffect">
            <summary>
            TreeView animation effects.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.TreeEffect.SlideDown">
            <summary>
            Specifies 'SlideDown' type of animation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.TreeEffect.None">
            <summary>
            Specifies animation type 'None'.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.TreeEffect.ZoomIn">
            <summary>
            Specifies 'ZoomIn' type of animation.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Navigations.TreeEffect.FadeIn">
            <summary>
            Specifies 'FadeIn' type of animation.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.DataSourceChangedEventArgs`1">
            <summary>
            Specifies class for DataSourceChanged event arguments.
            </summary>
            <typeparam name="T">"T".</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DataSourceChangedEventArgs`1.Data">
            <summary>
            Return the updated TreeView data. The data source will be updated after performing some operation like
            drag and drop, node editing, adding and removing node. If you want to get updated data source after performing operation like
            selecting/unSelecting, checking/unChecking, expanding/collapsing the node, then you can use getTreeData method.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DataSourceChangedEventArgs`1.Name">
            <summary>
            Return the Event name.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.DataBoundEventArgs`1">
            <summary>
            Specifies class for DataBound event arguments.
            </summary>
            <typeparam name="T">"T".</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DataBoundEventArgs`1.Data">
            <summary>
            Return the updated TreeView data. The data source will be updated after performing some operation like
            drag and drop, node editing, adding and removing node. If you want to get updated data source after performing operation like
            selecting/unSelecting, checking/unChecking, expanding/collapsing the node, then you can use getTreeData method.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DataBoundEventArgs`1.Name">
            <summary>
            Return the Event name.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.DragAndDropEventArgs">
            <summary>
            Specifies class for DragAndDrop event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.Cancel">
            <summary>
            If you want to cancel this event then, set cancel as true. Otherwise, false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.ClonedNode">
            <summary>
            Return the cloned element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.DraggedNode">
            <summary>
            Return the currently dragged TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.DraggedNodeData">
            <summary>
            Return the currently dragged node as array of JSON object from data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.DraggedParentNode">
            <summary>
            Return the dragged element's source parent.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.DropIndex">
            <summary>
            Returns the dragged/dropped element's target index position.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.DropIndicator">
            <summary>
            Return the cloned element's drop status icon while dragging.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.DropLevel">
            <summary>
            Returns the dragged/dropped element's target level.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.DropTarget">
            <summary>
            Return the dragged element's destination parent.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.DroppedNode">
            <summary>
            Return the dropped TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.DroppedNodeData">
            <summary>
            Return the dropped node as array of JSON object from data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.Event">
            <summary>
            Return the actual event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.PreventTargetExpand">
            <summary>
            Return boolean value for preventing auto-expanding of parent node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.Target">
            <summary>
            Return the target element from which drag starts/end.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.Name">
            <summary>
            Return the Event name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.Left">
            <summary>
            Return the Client X value of target element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.DragAndDropEventArgs.Top">
            <summary>
            Return the Client Y value of target element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.NodeRenderEventArgs`1">
            <summary>
            Specifies class for node render event arguments.
            </summary>
            <typeparam name="T">"T".</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeRenderEventArgs`1.Node">
            <summary>
            Return the current rendering node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeRenderEventArgs`1.NodeData">
            <summary>
            Return the current rendering node as JSON object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeRenderEventArgs`1.Text">
            <summary>
            Return the current rendering node text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeRenderEventArgs`1.Name">
            <summary>
            Return the Event name.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.FailureEventArgs">
            <summary>
            Specifies class for Failure event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.FailureEventArgs.Error">
            <summary>
            Defines the error information.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.NodeCheckEventArgs">
            <summary>
            Specifies class for NodeCheck event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeCheckEventArgs.Action">
            <summary>
            Return the name of action like check or un-check.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeCheckEventArgs.Cancel">
            <summary>
            If you want to cancel this event then, set cancel as true. Otherwise, false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeCheckEventArgs.NodeData">
            <summary>
            Return the currently checked node as JSON object from data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeCheckEventArgs.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeCheckEventArgs.Node">
            <summary>
            Return the currently checked TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeCheckEventArgs.Name">
            <summary>
            Return the Event name.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.NodeClickEventArgs">
            <summary>
            Specifies class for NodeClick event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeClickEventArgs.Event">
            <summary>
            Return the actual event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeClickEventArgs.Node">
            <summary>
            Return the current clicked TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeClickEventArgs.NodeData">
            <summary>
            Return the current clicked TreeView node data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeClickEventArgs.Name">
            <summary>
            Return the Event name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeClickEventArgs.Left">
            <summary>
            Return the Client X value of target element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeClickEventArgs.Top">
            <summary>
            Return the Client Y value of target element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.NodeData">
            <summary>
            Specifies class that holds the node details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeData.Expanded">
            <summary>
            Specifies the mapping field for expand state of the TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeData.HasChildren">
            <summary>
            Specifies the mapping field for hasChildren to check whether a node has child nodes or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeData.Id">
            <summary>
            Specifies the ID field mapped in dataSource.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeData.IsChecked">
            <summary>
            Specifies the field for checked state of the TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeData.ParentID">
            <summary>
            Specifies the parent ID field mapped in dataSource.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeData.Selected">
            <summary>
            Specifies the mapping field for selected state of the TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeData.Text">
            <summary>
            Specifies the mapping field for text displayed as TreeView node's display text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeData.Name">
            <summary>
            Return the Event name.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.NodeEditEventArgs">
            <summary>
            Specifies class for NodeEdit event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeEditEventArgs.Cancel">
            <summary>
            If you want to cancel this event then, set cancel as true. Otherwise, false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeEditEventArgs.InnerHtml">
            <summary>
            Gets or sets the inner HTML of TreeView node while editing.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeEditEventArgs.NewText">
            <summary>
            Return the current TreeView node new text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeEditEventArgs.Node">
            <summary>
            Return the current TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeEditEventArgs.NodeData">
            <summary>
            Return the current node as JSON object from data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeEditEventArgs.OldText">
            <summary>
            Return the current TreeView node old text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeEditEventArgs.Name">
            <summary>
            Return the Event name.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.NodeExpandEventArgs">
            <summary>
            Specifies class for NodeExpand event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeExpandEventArgs.Cancel">
            <summary>
            If you want to cancel this event then, set cancel as true. Otherwise, false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeExpandEventArgs.Event">
            <summary>
            Event argument.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeExpandEventArgs.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeExpandEventArgs.Node">
            <summary>
            Return the expanded/collapsed TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeExpandEventArgs.NodeData">
            <summary>
            Return the expanded/collapsed node as JSON object from data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeExpandEventArgs.Name">
            <summary>
            Return the Event name.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.NodeKeyPressEventArgs">
            <summary>
            Specifies class for NodeKeyPress event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeKeyPressEventArgs.Cancel">
            <summary>
            If you want to cancel this event then, set cancel as true. Otherwise, false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeKeyPressEventArgs.Event">
            <summary>
            Return the actual event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeKeyPressEventArgs.Node">
            <summary>
            Return the current active TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeKeyPressEventArgs.NodeData">
            <summary>
            Return the current active node as JSON object from data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeKeyPressEventArgs.Name">
            <summary>
            Return the Event name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeKeyPressEventArgs.Action">
            <summary>
            Return the Key Action of Event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeKeyPressEventArgs.Key">
            <summary>
            Return the Key value of Event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.NodeSelectEventArgs">
            <summary>
            Specifies class for NodeSelect event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeSelectEventArgs.Action">
            <summary>
            Return the name of action like select or un-select.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeSelectEventArgs.Cancel">
            <summary>
            If you want to cancel this event then, set cancel as true. Otherwise, false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeSelectEventArgs.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeSelectEventArgs.Node">
            <summary>
            Return the currently selected TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeSelectEventArgs.NodeData">
            <summary>
            Return the currently selected node as JSON object from data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.NodeSelectEventArgs.Name">
            <summary>
            Return the Event name.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.ActionEventArgs">
            <summary>
            Specifies class for denotes the event name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ActionEventArgs.Name">
            <summary>
            Return the Event name.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TreePersistenceValues">
            <summary>
            class for persistence values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreePersistenceValues.SelectedNodes">
            <summary>
            Gets or sets SelectedNodes of the TreeView component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreePersistenceValues.CheckedNodes">
            <summary>
            Gets or sets CheckedNodes of the TreeViewcomponent.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreePersistenceValues.ExpandedNodes">
            <summary>
            Gets or sets ExpandedNodes of the TreeViewcomponent.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.SfTreeView`1">
            <summary>
            Specifies the TreeView component.
            </summary>
            <summary>
            Specifies the TreeView component.
            </summary>
            <summary>
            SfTreeView component.
            </summary>
            <summary>
            The TreeView component is used to represent hierarchical data in a tree like structure with advanced functions to edit, drag and drop, select with CheckBox and more.
            TreeView can be populated from a data source such as an array of data's or from DataManager.
            </summary>
            <typeparam name="TValue">"TValue parameter".</typeparam>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">"First render parameter".</param>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.OnParametersSetAsync">
            <summary>
            Method invoked when any changes in component state occurs.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.ChildContent">
            <exclude/>
            <summary>
            Get the RenderFragment content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.AllowDragAndDrop">
            <summary>
            Indicates whether the TreeView allows drag and drop of nodes. To drag and drop a node in
            desktop, hold the mouse on the node, drag it to the target node and drop the node by releasing
            the mouse. For touch devices, drag and drop operation is performed by touch, touch move
            and touch end.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.AllowEditing">
            <summary>
            Enables or disables editing of the text in the TreeView node. When `AllowEditing` property is set
            to true, the TreeView allows you to edit the node by double clicking the node or by navigating to
            the node and pressing F2 key.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.AllowMultiSelection">
            <summary>
            Enables or disables multi-selection of nodes. To select multiple nodes:
             Select the nodes by holding down the CTRL key while clicking on the nodes.
             Select consecutive nodes by clicking the first node to select and hold down the SHIFT key
            and click the last node to select.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.AllowTextWrap">
            <summary>
            Enables or disables to wrap the text in the TreeView node. 
            When the `AllowTextWrap` property is set to true, the TreeView node text content will wrap to the next line
            when its text content exceeds the width of the TreeView node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.Animation">
            <summary>
            Specifies the type of animation applied on expanding and collapsing the nodes along with duration.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.AutoCheck">
            <summary>
            Allow us to specify the parent and child nodes to get auto check while we check or uncheck a node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.CheckedNodes">
            <summary>
            The `CheckedNodes` property is used to set the nodes that need to be checked or
            get the ID of nodes that are currently checked in the TreeView component.
            The `checkedNodes` property depends upon the value of `showCheckBox` property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.CheckedNodesChanged">
            <summary>
            Specifies the callback to trigger when the checked nodes changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.CssClass">
            <summary>
            Specifies the CSS classes to be added with root element of the TreeView to help customize the appearance of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.Disabled">
            <summary>
            Specifies a value that indicates whether the TreeView component is disabled or not.
            When set to true, user interaction will not be occurred in TreeView.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.DropArea">
            <summary>
            Defines the area in which the draggable element movement will be occurring. Outside that area will be restricted
            for the draggable element movement. By default, the draggable element movement occurs in the entire page.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.EnableHtmlSanitizer">
            <summary>
            Defines whether to allow the cross-scripting site or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.EnablePersistence">
            <summary>
            Enables or disables persisting TreeView state between page reloads. If enabled, following APIs will persist.
            1. `SelectedNodes` - Represents the nodes that are selected in the TreeView component.
            2. `checkedNodes`  - Represents the nodes that are checked in the TreeView component.
            3. `expandedNodes` - Represents the nodes that are expanded in the TreeView component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.ExpandOn">
            <summary>
            Specifies the action on which the node expands or collapses. The available actions are,
             `Click` - The expand/collapse operation happens when you single-click the node in both desktop and mobile devices.
             `DblClick` - The expand/collapse operation happens when you double-click the node in both desktop and mobile devices.
             `None` - The expand/collapse operation will not happen when you single-click or double-click the node in both desktop
             and mobile devices.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.ExpandedNodes">
            <summary>
            Represents the expanded nodes in the TreeView component. We can set the nodes that need to be
            expanded or get the ID of the nodes that are currently expanded by using this property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.ExpandedNodesChanged">
            <summary>
            Specifies the callback to trigger when the expanded nodes changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.Fields">
            <summary>
            Specifies the data source and mapping fields to render TreeView nodes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.FullRowNavigable">
            <summary>
            If this property is set to true, then the entire TreeView node will be navigate-able instead of text element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.FullRowSelect">
            <summary>
            On enabling this property, the entire row of the TreeView node gets selected by clicking a node.
            When disabled only the corresponding node's text gets selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.LoadOnDemand">
            <summary>
            By default, the load on demand (Lazy load) is set to true. By disabling this property, all the tree nodes are rendered at the
            beginning itself.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.SelectedNodes">
            <summary>
            Represents the selected nodes in the TreeView component. We can set the nodes that need to be
            selected or get the ID of the nodes that are currently selected by using this property.
            On enabling `AllowMultiSelection` property we can select multiple nodes and on disabling
            it we can select only a single node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.SelectedNodesChanged">
            <summary>
            Specifies the callback to trigger when the selected nodes changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.ShowCheckBox">
            <summary>
            Indicates that the nodes will display CheckBoxes in the TreeView.
            The CheckBox will be displayed next to the expand/collapse icon of the node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.SortOrder">
            <summary>
            Specifies a value that indicates whether the nodes are sorted in the ascending or descending order,
            or are not sorted at all. The available types of sort order are,
             `None` - The nodes are not sorted.
             `Ascending` - The nodes are sorted in the ascending order.
             `Descending` - The nodes are sorted in the ascending order.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.HtmlAttributes">
            <summary>
            Specify the HtmlAttributes for TreeView.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.TreeViewTemplates">
            <summary>
            Specifies the custom item template of TreeView Node item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.SfTreeView`1.ID">
            <summary>
            Sets id attribute for the treeview element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.UpdateAnimationProperties(Syncfusion.Blazor.Navigations.TreeViewNodeAnimationSettings)">
            <summary>
            Specifies the Animation properties.
            </summary>
            <param name="animationSettings">"Specifies the animation settings".</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.AddNodes(System.Collections.Generic.List{`0},System.String)">
            <summary>
            Adds the collection of TreeView nodes based on target and index position. If target node is not specified,
            then the nodes are added as children of the given parentID or in the root level of TreeView.
            </summary>
            <param name="nodes">A list of nodes to be added to the TreeView.</param>
            <param name="target">Based on target nodes are added as children of the given parentID or in the root level of TreeView.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.BeginEdit(System.String)">
            <summary>
            Instead of clicking on the TreeView node for editing, we can enable it by using
            `BeginEdit` property. On passing the node ID or element through this property, the edit textBox
            will be created for the particular node thus allowing us to edit it.
            </summary>
            <param name="node">Specifies ID of TreeView node.</param>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.BeginEditAsync(System.String)">
            <summary>
            Instead of clicking on the TreeView node for editing, we can enable it by using
            `BeginEdit` property. On passing the node ID or element through this property, the edit textBox
            will be created for the particular node thus allowing us to edit it.
            </summary>
            <param name="node">Specifies ID of TreeView node.</param>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.CheckAll(System.String[])">
            <summary>
            Checks all the unchecked nodes. You can also check specific nodes by passing array of unchecked nodes
            as argument to this method.
            </summary>
            <param name="nodesId">"Specifies the NodeId".</param>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.CheckAllAsync(System.String[])">
            <summary>
            Checks all the unchecked nodes. You can also check specific nodes by passing array of unchecked nodes
            as argument to this method.
            </summary>
            <param name="nodesId">"Specifies the NodeId".</param>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.ClearState">
            <summary>
            This method clears the Expanded, Selected and Checked interaction states in the TreeView. This method is useful when changing the data source dynamically.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.ClearStateAsync">
            <summary>
            This method clears the Expanded, Selected and Checked interaction states in the TreeView. This method is useful when changing the data source dynamically.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.CollapseAll(System.String[])">
            <summary>
            Collapses all the expanded TreeView nodes. You can collapse specific nodes by passing array of nodes as argument to this method.
            </summary>
            <param name="nodesId">"Specifes the NodeID".</param>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.CollapseAllAsync(System.String[])">
            <summary>
            Collapses all the expanded TreeView nodes. You can collapse specific nodes by passing array of nodes as argument to this method.
            </summary>
            <param name="nodesId">"Specifes the NodeID".</param>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.DisableNodes(System.String[])">
            <summary>
            Disables the collection of nodes by passing the ID of nodes or node elements in the array.
            </summary>
            <param name="nodes">Specifies the array of TreeView nodes ID.</param>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.DisableNodesAsync(System.String[])">
            <summary>
            Disables the collection of nodes by passing the ID of nodes or node elements in the array.
            </summary>
            <param name="nodes">Specifies the array of TreeView nodes ID.</param>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.EnableNodes(System.String[])">
            <summary>
            Enables the collection of disabled nodes by passing the ID of nodes or node elements in the array.
            </summary>
            <param name="nodes">Specifies the array of TreeView nodes ID.</param>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.EnableNodesAsync(System.String[])">
            <summary>
            Enables the collection of disabled nodes by passing the ID of nodes or node elements in the array.
            </summary>
            <param name="nodes">Specifies the array of TreeView nodes ID.</param>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.EnsureVisible(System.String)">
            <summary>
            Ensures visibility of the TreeView node by using node ID or node element.
            When many TreeView nodes are present and we need to find a particular node, `EnsureVisible` property
            helps bring the node to visibility by expanding the TreeView and scrolling to the specific node.
            </summary>
            <param name="node">Specifies ID of TreeView node.</param>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.EnsureVisibleAsync(System.String)">
            <summary>
            Ensures visibility of the TreeView node by using node ID or node element.
            When many TreeView nodes are present and we need to find a particular node, `EnsureVisible` property
            helps bring the node to visibility by expanding the TreeView and scrolling to the specific node.
            </summary>
            <param name="node">Specifies ID of TreeView node.</param>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.ExpandAll(System.String[])">
            <summary>
            Expands all the collapsed TreeView nodes. You can expand the specific nodes by passing the array of collapsed nodes.
            </summary>
            <param name="nodesId">"Specifies the NodeId".</param>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.ExpandAllAsync(System.String[])">
            <summary>
            Expands all the collapsed TreeView nodes. You can expand the specific nodes by passing the array of collapsed nodes.
            </summary>
            <param name="nodesId">"Specifies the NodeId".</param>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.GetAllCheckedNodes">
            <summary>
            Gets all the checked nodes including child, whether it is loaded or not.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.GetDisabledNodes">
            <summary>
            Gets all the disabled nodes including child, whether it is loaded or not.
            </summary>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.GetDisabledNodesAsync">
            <summary>
            Gets all the disabled nodes including child, whether it is loaded or not.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.GetNode(System.String)">
            <summary>
            Get the node's data such as id, text, parentID, selected, isChecked, and expanded by passing the node element or it's ID.
            </summary>
            <param name="node">Specifies ID of TreeView node.</param>
            <returns>"Return TreeData".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.GetTreeData(System.String)">
            <summary>
            To get the updated data source of TreeView after performing some operation like drag and drop, node editing,
            node selecting/unSelecting, node expanding/collapsing, node checking/unChecking, adding and removing node.
             If you pass the ID of TreeView node as arguments for this method then it will return the updated data source
            of the corresponding node otherwise it will return the entire updated data source of TreeView.
             The updated data source also contains custom attributes if you specified in data source.
            </summary>
            <param name="node">Specifies ID of TreeView node.</param>
            <returns>"Return TreeData".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.RemoveNodes(System.String[])">
            <summary>
            Removes the collection of TreeView nodes by passing the array of node details as argument to this method.
            </summary>
            <param name="nodes">Specifies the array of TreeView nodes ID.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.UncheckAll(System.String[])">
            <summary>
            Unchecks all the checked nodes. You can also uncheck the specific nodes by passing array of checked nodes
            as argument to this method.
            </summary>
            <returns>"Task".</returns>
            <param name="nodesId">"Specifies the Id of the node".</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.UncheckAllAsync(System.String[])">
            <summary>
            Unchecks all the checked nodes. You can also uncheck the specific nodes by passing array of checked nodes
            as argument to this method.
            </summary>
            <returns>"Task".</returns>
            <param name="nodesId">"Specifies the Id of the node".</param>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.UpdateNode(System.String,System.String)">
            <summary>
            Replaces the text of the TreeView node with the given text.
            </summary>
            <param name="target">Specifies ID of TreeView node.</param>
            <param name="newText">Specifies the new text of TreeView node.</param>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.Refresh">
            <summary>
            Applies all the pending property changes and render the component again.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.RefreshNode(System.String,System.Collections.Generic.List{`0})">
            <summary>
            Replaces the text of the TreeView node with the given text.
            </summary>
            <param name="target">Specifies ID of TreeView node.</param>
            <param name="newData">Specifies the new Data of TreeView node.</param>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.RefreshNodeAsync(System.String,System.Collections.Generic.List{`0})">
            <summary>
            Replaces the text of the TreeView node with the given text.
            </summary>
            <param name="target">Specifies ID of TreeView node.</param>
            <param name="newData">Specifies the new Data of TreeView node.</param>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.GetRootElement">
            <summary>
            Returns the route element reference of the component.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.MoveNodes(System.String[],System.String,System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Replaces the text of the TreeView node with the given text.
            </summary>
            <param name="sourceNodes">Specifies the array of TreeView nodes ID.</param>
            <param name="target">Specifies ID of TreeView node.</param>
            <param name="index">Specifies the index to place the moved nodes in the target element.</param>
            <param name="preventTargetExpand">If set to true, the target parent node will be prevented from auto expanding.</param>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.GetPropertyChanges">
            <summary>
            Specifies the particular property is changes or not.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.DropNodeAsSibling(Syncfusion.Blazor.Navigations.Internal.DropTreeArgs)">
            <summary>
            Drop Node as Sibling for TreeView component.
            </summary>
            <returns>"Task".</returns>
            <param name="args">"Specifies the DropTree argument".</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.DropNodeAsChild(Syncfusion.Blazor.Navigations.Internal.DropTreeArgs)">
            <summary>
            Drop Node as Sibling for TreeView component.
            </summary>
            <param name="args">"Specifies the DropTree argument".</param>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerDragStartEvent(Syncfusion.Blazor.Navigations.DragAndDropEventArgs,System.Double,System.Double)">
            <summary>
            Trigger Node Drag Start Event for TreeView component.
            </summary>
            <param name="args">"Node Drag Start argument".</param>
            <param name="left">"Dragged Node position".</param>
            <param name="top">"Dragged Node top position".</param>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerNodeDraggingEvent(Syncfusion.Blazor.Navigations.DragAndDropEventArgs,System.Double,System.Double)">
            <summary>
            Trigger Node Dragging Event for TreeView component.
            </summary>
            <param name="args">"Node Drag Start argument".</param>
            <param name="left">"Dragging Node position".</param>
            <param name="top">"Dragging Node top position".</param>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerDragStopEvent(Syncfusion.Blazor.Navigations.DragAndDropEventArgs,System.Double,System.Double)">
            <summary>
            Trigger Node Drag Stop Event for TreeView component.
            </summary>
            <param name="args">"Node Drop Start argument".</param>
            <param name="left">"Drag stop Node position".</param>
            <param name="top">"Drag stop Node top position".</param>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerNodeDropped(Syncfusion.Blazor.Navigations.DragAndDropEventArgs,System.Double,System.Double)">
            <summary>
            Trigger Node Drag Stop Event for TreeView component.
            </summary>
            <param name="args">"Dropped argument".</param>
            <param name="left">"Dropped stop Node position".</param>
            <param name="top">"Dropped stop Node top position".</param>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.UpdateExpandedNode(System.String[])">
            <summary>
            Trigger Node Drag Stop Event for TreeView component.
            </summary>
            <param name="parentNodes">"Parent node".</param>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerNodeSelectingEvent(Syncfusion.Blazor.Navigations.Internal.SelectionEventArgs)">
            <summary>
            Trigger Node Selecting Event for TreeView component.
            </summary>
            <param name="selectEventArgs">"Select event argument".</param>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerNodeEditingEvent(Syncfusion.Blazor.Navigations.NodeEditEventArgs)">
            <summary>
            Trigger Node Editing Event for TreeView component.
            </summary>
            <param name="args">"Node Edit event argument".</param>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.CreatedEvent">
            <summary>
            Trigger TreeView created event.
            </summary>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerNodeExpandingEvent(Syncfusion.Blazor.Navigations.Internal.ExpandEventArgs)">
            <summary>
            Trigger Node Expanding Event for TreeView component.
            </summary>
            <param name="arguments">"Expand event argument".</param>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerNodeCheckingEvent(Syncfusion.Blazor.Navigations.NodeCheckEventArgs)">
            <summary>
            Trigger Node Checking Event for TreeView component.
            </summary>
            <param name="args">"NodeCheck event argument".</param>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerNodeClickingEvent(Syncfusion.Blazor.Navigations.ClickEventArgs,System.String,System.Double,System.Double)">
            <summary>
            Trigger Node Click Event for TreeView component.
            </summary>
            <param name="eventArgs">"NodeClick event argument".</param>
            <param name="id">"Clicked node id".</param>
            <param name="left">"Clicked node Left position".</param>
            <param name="top">"Clicked node Top position".</param>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerNodeExpandedEvent(Syncfusion.Blazor.Navigations.NodeExpandEventArgs)">
            <summary>
            Trigger Node Expanded Event for TreeView component.
            </summary>
            <param name="args">"Node Expanded event argument".</param>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.UpdateData(System.Collections.Generic.List{`0},System.Boolean)">
            <summary>
            Update the latest data source values to TreeView component (Drag and drop).
            </summary>
            <param name="dataSource">"Specifies the datasource".</param>
            <param name="isUpdateChecked">"Specifies the checked is true or not".</param>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerNodeCollapsingEvent(Syncfusion.Blazor.Navigations.NodeExpandEventArgs)">
            <summary>
            Collapse Action for TreeView.
            </summary>
            <param name="args">"NodeCollapsing event argument".</param>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerKeyboardEvent(Syncfusion.Blazor.Navigations.NodeKeyPressEventArgs,System.String,System.String,System.String)">
            <summary>
            Collapsed Action for TreeView.
            </summary>
            <param name="args">"Key press event argument".</param>
            <param name="id">"Specifies the Id".</param>
            <param name="keyAction">"Specifies the key action".</param>
            <param name="keyValue">"Specifies the Key value".</param>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.TriggerNodeCollapsedEvent(Syncfusion.Blazor.Navigations.NodeExpandEventArgs)">
            <summary>
            Collapsed Action for TreeView.
            </summary>
            <param name="args">"NodeCollapsed event argument".</param>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.SfTreeView`1.UpdateChildProperties(System.String,System.Object)">
            <summary>
            Update child property values to TreeView component instance.
            </summary>
            <param name="key">"Specifies the key field".</param>
            <param name="details">"Specifies the details field".</param>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TreeViewAnimationCollapse">
            <summary>
            Specifies the animation to appear while collapsing the TreeView item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.TreeViewAnimationCollapse.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.TreeViewAnimationCollapse.ComponentDispose">
            <summary>
            Dispose the Expand animation value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TreeViewAnimationExpand">
            <summary>
            Specifies the animation to appear while expanding the TreeView item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.TreeViewAnimationExpand.OnInitializedAsync">
            <summary>
             Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.TreeViewAnimationExpand.ComponentDispose">
            <summary>
            Dispose the Expand animation value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TreeViewEvents`1">
            <summary>
            The TreeView allows us to control the component by using events.
            </summary>
            <typeparam name="TValue">"Tvalue paramter".</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.OnActionFailure">
            <summary>
            Triggers when any TreeView action failed to fetch the desired results.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.Created">
            <summary>
            Triggers when the TreeView control is created successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.DataBound">
            <summary>
            Triggers when data source is populated in the TreeView.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.DataSourceChanged">
            <summary>
            Triggers when data source is changed in the TreeView. The data source will be changed after performing some operation like
            drag and drop, node editing, adding and removing node.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.Destroyed">
            <summary>
            Triggers when the TreeView control is destroyed successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.OnNodeRender">
            <summary>
            Triggers before the TreeView node is appended to the TreeView element. It helps to customize specific nodes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.OnKeyPress">
            <summary>
            Triggers when key press is successful. It helps to customize the operations at key press.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.NodeChecked">
            <summary>
            Triggers when the TreeView node is checked/unchecked successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.NodeChecking">
            <summary>
            Triggers before the TreeView node is to be checked/unchecked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.NodeClicked">
            <summary>
            Triggers when the TreeView node is clicked successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.NodeCollapsed">
            <summary>
            Triggers when the TreeView node collapses successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.NodeCollapsing">
            <summary>
            Triggers before the TreeView node collapses.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.OnNodeDragStart">
            <summary>
            Triggers when the TreeView node drag (move) starts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.OnNodeDragStop">
            <summary>
            Triggers when the TreeView node dragging (move) stops.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.OnNodeDragged">
            <summary>
            Triggers when the TreeView node drag (move) is stopped.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.NodeDropped">
            <summary>
            Triggers when the TreeView node is dropped on target element successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.NodeEdited">
            <summary>
            Triggers when the TreeView node is renamed successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.NodeEditing">
            <summary>
            Triggers before the TreeView node is renamed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.NodeExpanded">
            <summary>
            Triggers when the TreeView node expands successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.NodeExpanding">
            <summary>
            Triggers before the TreeView node is to be expanded.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.NodeSelected">
            <summary>
            Triggers when the TreeView node is selected/unselected successfully.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewEvents`1.NodeSelecting">
            <summary>
            Triggers before the TreeView node is selected/unselected.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.TreeViewEvents`1.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TreeViewFieldChild`1">
            <summary>
             A class used for configuring the TreeView child element fields properties.
            </summary>
            <typeparam name="TValue">"Specifies the Tvalue paramater".</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewFieldChild`1.ChildContent">
            <summary>
            Specifies the Treeview child content.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.TreeViewFieldChild`1.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TreeViewFieldsSettings`1">
            <summary>
             A class used for configuring the TreeView fields setting properties.
            </summary>
            <typeparam name="TValue">"Specifies the TValue parameter".</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewFieldsSettings`1.ChildContent">
            <summary>
            Specifies the child content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewFieldsSettings`1.DataSourceChanged">
            <summary>
            Invokes when data source changes.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.TreeViewFieldsSettings`1.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.TreeViewFieldsSettings`1.OnParametersSetAsync">
            <summary>
            Method invoked when any changes in component state occurs.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TreeViewNodeAnimationSettings">
            <summary>
            A class used for configuring the TreeView animation properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewNodeAnimationSettings.ChildContent">
            <exclude/>
            <summary>
            Child Content for the Treeview Animation Settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewNodeAnimationSettings.Collapse">
            <summary>
            Specifies the animation to appear when collapsing the TreeView item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewNodeAnimationSettings.Expand">
            <summary>
            Specifies the animation to appear when expanding the TreeView item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.TreeViewNodeAnimationSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Navigations.TreeViewTemplates`1">
            <summary>
            The TreeView component allows you to customize the look of TreeView nodes using Templates.
            </summary>
            <typeparam name="TValue">"Specifies the Tvalue".</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.TreeViewTemplates`1.NodeTemplate">
            <summary>
            Specifies the NodeTemplate.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.TreeViewTemplates`1.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>"Task".</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarEvents.Clicked">
            <summary>
            The event will be fired on clicking the Toolbar elements.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarEvents.Created">
            <summary>
            The event will be fired when the control is rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Navigations.ToolbarEvents.Destroyed">
            <summary>
            The event will be fired when the control gets destroyed.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Navigations.ToolbarEvents.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.DialogAnimationSettings">
            <summary>
            The class provides data for the animation to Dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogAnimationSettings.Delay">
            <summary>
            Specifies the delay in milliseconds to start the animation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogAnimationSettings.Duration">
            <summary>
            Specifies the duration in milliseconds that the animation takes to open or close the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogAnimationSettings.Effect">
            <summary>
            Specifies the animation name that should be applied on while opening and closing the dialog.
            If the user sets Fade animation, the dialog will open with the `FadeIn` effect and close with the `FadeOut` effect.
            The following are the list of animation effects available to configure to the dialog:
            1. Fade
            2. FadeZoom
            3. FlipLeftDown
            4. FlipLeftUp
            5. FlipRightDown
            6. FlipRightUp
            7. FlipXDown
            8. FlipXUp
            9. FlipYLeft
            10. FlipYRight
            11. SlideBottom
            12. SlideLeft
            13. SlideRight
            14. SlideTop
            15. Zoom
            16. None.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.DialogAnimationSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.DialogButton">
            <summary>
            Provides data to configure the Dialog button properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.ChildContent">
            <summary>
            Gets or sets the content of the Spinner element.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.Content">
            <summary>
            Defines the text `content` of the Button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.CssClass">
            <summary>
            Defines the class/multiple classes separated by a space in the Button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.Disabled">
            <summary>
            Specifies a value that indicates whether the Button is `disabled`.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left (RTL) direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.IconCss">
            <summary>
            Defines the class/multiple classes separated by a space for the Button that is used to include an icon.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.IconPosition">
            <summary>
            Positions the icon before or after the text content in the Button.
            The possible values are: Left: The icon will be positioned to the left of the text content.
            Right: The icon will be positioned to the right of the text content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.IsPrimary">
            <summary>
            Allows the appearance of the Button to be enhanced and visually appealing when set to `true`.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.IsToggle">
            <summary>
            Makes the Button toggle, when set to `true`.
            When you click it, the state changes from normal to active.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.OnClick">
            <summary>
            Event triggers when `click` the dialog button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.Type">
            <summary>
            Specifies the type of the button.
            Possible values are Button, Submit, and Reset.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButton.IsFlat">
            <summary>
            Specifies the Flat appearance of the dialog buttons.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.DialogButton.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.DialogButton.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.DialogButtons">
            <summary>
            A list of buttons that are used to configure the Dialog buttons.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogButtons.ChildContent">
            <summary>
            Gets or sets the content of the Dialog Button element.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.DialogButtons.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender"> Set to true if this is the first time OnAfterRender(Boolean) has been invoked.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.DialogEvents">
            <summary>
            Configure handlers to handle the events with the Dialog component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.Closed">
            <summary>
            Event triggers after the dialog has been closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.Created">
            <summary>
            Event triggers when the dialog is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.Destroyed">
            <summary>
            Event triggers when the dialog is destroyed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.OnClose">
            <summary>
            Event triggers before the dialog is closed.
            If you cancel this event, the dialog remains opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.OnDrag">
            <summary>
            Event triggers when the user drags the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.OnDragStart">
            <summary>
            Event triggers when the user begins dragging the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.OnDragStop">
            <summary>
            Event triggers when the user stops dragging the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.OnOpen">
            <summary>
            Event triggers when the dialog is being opened.
            If you cancel this event, the dialog remains closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.OnOverlayClick">
            <summary>
            Event triggers when the overlay of the dialog is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.OnOverlayModalClick">
            <summary>
            Event triggers when the overlay of the dialog is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.OnResizeStart">
            <summary>
            Event triggers when the user begins to resize a dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.OnResizeStop">
            <summary>
            Event triggers when the user stops to resize a dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.Opened">
            <summary>
            Event triggers when a dialog is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogEvents.Resizing">
            <summary>
            Event triggers when the user resizes the dialog.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.DialogEvents.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.DialogPositionData">
            <summary>
            Configures to display a dialog in the custom position within the document or target.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogPositionData.X">
            <summary>
            Specifies the offset left value to position the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogPositionData.Y">
            <summary>
            Specifies the offset top value to position the dialog.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.DialogPositionData.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.DialogPositionData.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.DialogTemplates">
            <summary>
            Configure templates to display within a header, content, and footer section of Dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogTemplates.Header">
            <summary>
            Specifies the value that can be displayed in the dialog's title area that can be configured with a plain text.
            The dialog will be displayed without the header if the header property is null.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogTemplates.Content">
            <summary>
            Specifies the value that can be displayed in the dialog's content section.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DialogTemplates.FooterTemplate">
            <summary>
            Defines the footer template of the dialog.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.DialogTemplates.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.SfDialog">
            <summary>
            Represents the dialog component that displays the information and gets input from the user.
            Two types of dialog components are `Modal and Modeless(non-modal)` depending on their interaction with the parent application.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender"> Set to true if this is the first time OnAfterRender(Boolean) has been invoked.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.ID">
            <summary>
            Specifies the unique identifier.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.ChildContent">
            <summary>
            Sets content for the Dialog element including HTML support and its customizations.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.AllowDragging">
            <summary>
            Specifies the value whether the dialog component can be dragged by the end-user.
            The dialog allows a user to drag by selecting the header and dragging it for re-positioning the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.AnimationSettings">
            <summary>
            Specifies the animation settings of the dialog component.
            The animation effect can be applied to open and close the dialog with duration and delay.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.Buttons">
            <summary>
            Configures the action `Buttons` that contains button properties with primary attributes and the click events.
            One or more action buttons can be configured to the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.CloseOnEscape">
            <summary>
            Specifies the Boolean value whether the dialog can be closed on pressing the escape (ESC) key.
            that is used to control the dialog's closing behavior.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.Content">
            <summary>
            Specifies the value that can be displayed in the dialog's content section.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the dialog.
            One or more custom CSS classes can be added to a dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.EnableResize">
            <summary>
            Specifies the value whether the dialog component can be resized by the end-user.
            If the enableResize is true, the dialog component creates a grip to resize it in a diagonal direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.ResizeHandles">
            <summary>
            Specifies the resize handles direction in the dialog component that can be resized by the end-user.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.EnableRtl">
            <summary>
            Enable or disable rendering component in the right to left (RTL) direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.FooterTemplate">
            <summary>
            Specifies the template value that can be displayed with the dialog's footer area.
            This is an optional property and can be used only when the footer is occupied with information or custom components.
            By default, the footer is configured with the action buttons.
            If the footer template is configured to the dialog, the buttons property will be disabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.Header">
            <summary>
            Specifies the value that can be displayed in the dialog's title area that can be configured with a plain text.
            The dialog will be displayed without the header if the header property is null.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.Height">
            <summary>
            Specifies the height of the dialog component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.HtmlAttributes">
            <summary>
            You can add the additional Html attributes such as id, title, etc., to the dialog element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.IsModal">
            <summary>
            Specifies the Boolean value whether the dialog can be displayed as modal or non-modal.
            `Modal`: It creates an overlay that disables interaction with the parent application and
             the user who should respond with modal before continuing with other applications.
            `Modeless`: It does not prevent user interaction with the parent application.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.Locale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.MinHeight">
            <summary>
            Specifies the min-height of the dialog component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.Position">
            <summary>
            Specifies the value where the dialog can be positioned within the document or target.
            The position can be represented with pre-configured positions or specific X and Y values.
            `X value`: left, center, right, or offset value.
            `Y value`: top, center, bottom, or offset value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.ShowCloseIcon">
            <summary>
            Specifies the value that represents whether the close icon can be shown in the dialog’s title section.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.Target">
            <summary>
            Specifies the target element in which the dialog should be displayed.
            The default value is null, which refers to the `Document.body` element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.Visible">
            <summary>
            Specifies the value that represents whether the dialog component is visible.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.VisibleChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.Width">
            <summary>
            Specifies the width of the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.ZIndex">
            <summary>
            Specifies the z-order for rendering that determines whether the dialog is displayed
            in front or behind of another component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfDialog.IsLoadOnDemand">
            <summary>
            Specifies the value that represents whether the Dialog element re-render or not.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.GetButton(System.Int32)">
            <summary>
            Returns the dialog button instances by index.
            Based on that, you can dynamically change the button states.
            </summary>
            <param name="index">Specifies the button index.</param>
            <returns>Returns the dialog button instances by index.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.GetButtonItems">
            <summary>
            Returns all the dialog button’s instances which are rendered in the dialog’s footer.
            Based on that, you can dynamically change the buttons states.
            </summary>
            <returns>Returns all the dialog button’s instances.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.HideAsync">
            <summary>
            Overloaded.
            Closes the dialog if it is in a visible state.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.Hide">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.HideAsync(System.String)">
            <summary>
            Overloaded.
            Closes the dialog if it is in a visible state.
            </summary>
            <param name="args">Specifies the interaction type.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.Hide(System.String)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.HideAsync(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Overloaded.
            Closes the dialog if it is in a visible state.
            </summary>
            <param name="args">Specifies the interaction type.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.Hide(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.HideAsync(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Overloaded.
            Closes the dialog if it is in a visible state.
            </summary>
            <param name="args">Specifies the keyboard arguments.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.Hide(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.RefreshPositionAsync">
            <summary>
            Refreshes the dialog's position when the user changes its height and width dynamically.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.RefreshPosition">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.ShowAsync(System.Nullable{System.Boolean})">
            <summary>
            Opens the dialog if it is in a hidden state.
            To open the dialog with full-screen width, set the parameter as true.
            </summary>
            <param name="isFullScreen">Specifies dialog will open on full screen or not.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.Show(System.Nullable{System.Boolean})">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.CreatedEvent">
            <summary>
            Method invoked after component has been rendered.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.OpenEvent(System.String)">
            <summary>
            Method invoked after dialog opened.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.CloseEvent(System.String)">
            <summary>
            Method invoked after dialog closed.
            </summary>
            <param name="classes">Specifiy the class names.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.DragStartEvent(Syncfusion.Blazor.Popups.DragStartEventArgs)">
            <summary>
            Method invoked when start to drag the dialog.
            </summary>
            <param name="args">Defines the DragStart Event arguments.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.DragEvent(Syncfusion.Blazor.Popups.DragEventArgs)">
            <summary>
            Method invoked when drag the dialog.
            </summary>
            <param name="args">Defines the Drag Event arguments.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.DragStopEvent(Syncfusion.Blazor.Popups.DragStopEventArgs)">
            <summary>
            Method invoked when complete the drag action.
            </summary>
            <param name="args">Defines the DragStop Event arguments.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.ResizeStartEvent(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Method invoked when start to resize the dialog.
            </summary>
            <param name="args">Defines the Mouse Event arguments.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.ResizingEvent(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Method invoked while resizing the dialog.
            </summary>
            <param name="args">Defines the Mouse Event arguments.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.ResizeStopEvent(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Method invoked after the dialog resize.
            </summary>
            <param name="args">Defines the Mouse Event arguments.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.ShowDialog(System.Nullable{System.Boolean})">
            <summary>
            Method invoked after the dialog resize.
            </summary>
            <param name="isFullScreen">Specifies the dialog is opened on full screen or not.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfDialog.CloseDialog(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Method invoked after dialog closed.
            </summary>
            <param name="args">Specifies KeyBoard arguments.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.ResizeDirection">
            <summary>
            Defines the resize handles in the dialog.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.ResizeDirection.SouthEast">
            <summary>
            Defines edge resize of the dialog in the south east direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.ResizeDirection.South">
            <summary>
            Defines border resize of the dialog in the south direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.ResizeDirection.North">
            <summary>
            Defines border resize of the dialog in the south direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.ResizeDirection.East">
            <summary>
            Defines border resize of the dialog in the south direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.ResizeDirection.West">
            <summary>
            Defines border resize of the dialog in the south direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.ResizeDirection.NorthEast">
            <summary>
            Defines edge resize of the dialog in the north east direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.ResizeDirection.NorthWest">
            <summary>
            Defines edge resize of the dialog in the north west direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.ResizeDirection.SouthWest">
            <summary>
            Defines edge resize of the dialog in the south west direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.ResizeDirection.All">
            <summary>
            Defines border resize of the dialog in all the direction.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.ButtonType">
            <summary>
            Defines the type of a button in the dialog.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.ButtonType.Button">
            <summary>
            Defines ButtonType as Button.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.ButtonType.Submit">
            <summary>
            Defines ButtonType as Submit.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.ButtonType.Reset">
            <summary>
            Defines ButtonType as Reset.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.DialogEffect">
            <summary>
            Specifies the Dialog animation effects.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.Fade">
            <summary>
            Defines DialogEffect as Fade.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.FadeZoom">
            <summary>
            Defines DialogEffect as FadeZoom.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.FlipLeftDown">
            <summary>
            Defines DialogEffect as FlipLeftDown.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.FlipLeftUp">
            <summary>
            Defines DialogEffect as FlipLeftUp.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.FlipRightDown">
            <summary>
            Defines DialogEffect as FlipRightDown.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.FlipRightUp">
            <summary>
            Defines DialogEffect as FlipRightUp.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.FlipXDown">
            <summary>
            Defines DialogEffect as FlipXDown.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.FlipXUp">
            <summary>
            Defines DialogEffect as FlipXUp.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.FlipYLeft">
            <summary>
            Defines DialogEffect as FlipYLeft.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.FlipYRight">
            <summary>
            Defines DialogEffect as FlipYRight.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.SlideBottom">
            <summary>
            Defines DialogEffect as SlideBottom.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.SlideLeft">
            <summary>
            Defines DialogEffect as SlideLeft.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.SlideRight">
            <summary>
            Defines DialogEffect as SlideRight.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.SlideTop">
            <summary>
            Defines DialogEffect as SlideTop.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.Zoom">
            <summary>
            Defines DialogEffect as Zoom.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.DialogEffect.None">
            <summary>
            Defines DialogEffect as None.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.OverlayModalClickEventArgs">
            <summary>
            Provides data for overLayClick event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.OverlayModalClickEventArgs.Event">
            <summary>
            Defines the mouse event arguments when the event is triggered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.OverlayModalClickEventArgs.PreventFocus">
            <summary>
            Specifies the value whether the default focus on the first focusable element in a dialog can be prevented.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.BeforeCloseEventArgs">
            <summary>
            Provides data for the BeforeClose event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.BeforeCloseEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.BeforeCloseEventArgs.ClosedBy">
            <summary>
            Determines whether the dialog is closed by "Close Icon", "Escape", "User Action".
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.BeforeCloseEventArgs.Container">
            <summary>
            Returns the root container element of the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.BeforeCloseEventArgs.Element">
            <summary>
            Returns the element of the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.BeforeCloseEventArgs.Event">
            <summary>
            Returns the original event arguments when triggering the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.BeforeCloseEventArgs.IsInteracted">
            <summary>
            Determines whether the event is triggered by interaction.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.BeforeOpenEventArgs">
            <summary>
            Provides data for the BeforeOpen event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.BeforeOpenEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.BeforeOpenEventArgs.Container">
            <summary>
            Returns the root container element of the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.BeforeOpenEventArgs.Element">
            <summary>
            Returns the element of the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.BeforeOpenEventArgs.MaxHeight">
            <summary>
            Specifies the value to override the max height of dialog.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.CloseEventArgs">
            <summary>
            Provides data for the Close event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.CloseEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.CloseEventArgs.ClosedBy">
            <summary>
            Determines whether the dialog is closed by "Close Icon", "Escape", "User Action".
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.CloseEventArgs.Container">
            <summary>
            Returns the root container element of the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.CloseEventArgs.Element">
            <summary>
            Returns the element of the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.CloseEventArgs.Event">
            <summary>
            Returns the original event arguments when triggering the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.CloseEventArgs.IsInteracted">
            <summary>
            Determines whether the event is triggered by interaction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.CloseEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.DragEventArgs">
            <summary>
            Provides data for the Dragging event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragEventArgs.Element">
            <summary>
            Returns the element of the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragEventArgs.Event">
            <summary>
            Returns the original event arguments when triggering the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragEventArgs.Target">
            <summary>
            Returns the target element of the dialog.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.DragStartEventArgs">
            <summary>
            Provides data for the DragStart event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragStartEventArgs.Element">
            <summary>
            Returns the element of the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragStartEventArgs.Event">
            <summary>
            Returns the original event arguments when triggering the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragStartEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragStartEventArgs.Target">
            <summary>
            Returns the target element of the dialog.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.DragStopEventArgs">
            <summary>
            Provides data for the DragStop event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragStopEventArgs.Element">
            <summary>
            Returns the element of the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragStopEventArgs.Event">
            <summary>
            Returns the original event arguments when triggering the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragStopEventArgs.Helper">
            <summary>
            Returns the helper element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragStopEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.DragStopEventArgs.Target">
            <summary>
            Returns the target element of the dialog.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.OpenEventArgs">
            <summary>
            Provides data for the DialogOpen event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.OpenEventArgs.Cancel">
            <summary>
            Defines whether the current action can be prevented.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.OpenEventArgs.Container">
            <summary>
            Returns the root container element of the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.OpenEventArgs.Element">
            <summary>
            Returns the element of the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.OpenEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.OpenEventArgs.PreventFocus">
            <summary>
            Specifies the value whether the default focus on the first focusable element in a dialog can be prevented.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.TargetType">
            <summary>
            Defines the types of target.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.TargetType.Relative">
            <summary>
            Defines the TargetType as Relative.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.TargetType.Container">
            <summary>
            Defines the TargetType as Container.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.CollisionType">
            <summary>
            Defines the types of collision.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.CollisionType.None">
            <summary>
            Defines the CollisionType as None.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.CollisionType.Flip">
            <summary>
            Defines the CollisionType as Flip.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.CollisionType.Fit">
            <summary>
            Defines the CollisionType as Fit.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.PopupModel">
            <summary>
            Provides data for the PopupModel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.PopupModel.Collision">
            <summary>
            Specifies the collision handler settings of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.PopupModel.Position">
            <summary>
            Specifies the popup element position, respective to the relative element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.PopupModel.RelateTo">
            <summary>
            Specifies the element selector for relative container element of the popup element .Based on the relative element, popup element will be positioned.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.PopupModel.TargetType">
            <summary>
            Specifies the relative element type of the component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.PopupModel.OffsetX">
            <summary>
            specifies the popup element offset-x value, respective to the relative element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.PopupModel.OffsetY">
            <summary>
            specifies the popup element offset-y value, respective to the relative element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.CollisionAxis">
            <summary>
             Provides information about a CollisionAxis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.CollisionAxis.X">
            <summary>
            Specify the collision handler for a X-Axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.CollisionAxis.Y">
            <summary>
            specify the collision handler for a Y-Axis.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.PositionDataModel">
            <summary>
             Provides information about a PositionDataModel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.PositionDataModel.X">
            <summary>
            Specify the offset left value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.PositionDataModel.Y">
            <summary>
            Specify the offset top value.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.Effect">
            <summary>
            Animation effects that are applicable to the Tooltip. A different animation can be set for tooltip open and close action.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.FadeIn">
            <summary>
            Tooltip open/close actions occur with the FadeIn animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.FadeOut">
            <summary>
            Tooltip open/close actions occur with the FadeOut animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.FadeZoomIn">
            <summary>
            Tooltip open/close actions occur with the FadeZoomIn animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.FadeZoomOut">
            <summary>
            Tooltip open/close actions occur with the FadeZoomOut animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.FlipXDownIn">
            <summary>
            Tooltip open/close actions occur with the FlipXDownIn animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.FlipXDownOut">
            <summary>
            Tooltip open/close actions occur with the FlipXDownOut animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.FlipXUpIn">
            <summary>
            Tooltip open/close actions occur with the FlipXUpIn animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.FlipXUpOut">
            <summary>
            Tooltip open/close actions occur with the FlipXUpOut animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.FlipYLeftIn">
            <summary>
            Tooltip open/close actions occur with the FlipYLeftIn animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.FlipYLeftOut">
            <summary>
            Tooltip open/close actions occur with the FlipYLeftOut animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.FlipYRightIn">
            <summary>
            Tooltip open/close actions occur with the FlipYRightIn animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.FlipYRightOut">
            <summary>
            Tooltip open/close actions occur with the FlipYRightOut animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.ZoomIn">
            <summary>
            Tooltip open/close actions occur with the ZoomIn animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.ZoomOut">
            <summary>
            Tooltip open/close actions occur with the ZoomOut animation effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Effect.None">
            <summary>
            Tooltip open/close actions occur without any animation effect.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.OpenMode">
            <summary>
            To set the open modes available for the Tooltip.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.OpenMode.Auto">
            <summary>
            In Auto mode, the tooltip appears when you hover over the target or when the target element receives the focus.
            In mobile devices, the tooltip opens on tap and hold of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.OpenMode.Hover">
            <summary>
            In Hover mode, the tooltip appears when you hover over the target on the desktop.
            In mobile devices, the tooltip opens on a tap and hold of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.OpenMode.Click">
            <summary>
            In Click mode, the tooltip appears when you click a target element on the desktop.
            In mobile devices, Tooltip appears with a single tap on the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.OpenMode.Focus">
            <summary>
            In Focus mode, Tooltip appears when you focus on a target element in desktop.
            In mobile devices, Tooltip appears with a single tap on the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.OpenMode.Custom">
            <summary>
            In Custom mode, the tooltip will not appear on any default action. You have to bind your custom events and use either open or close public methods in both desktop and mobile devices.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.Position">
            <summary>
            To set the applicable positions where the Tooltip can be displayed over specific target elements.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Position.TopCenter">
            <summary>
            Positions the Tooltip to the top-center of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Position.TopLeft">
            <summary>
            Positions the Tooltip to the top-left of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Position.TopRight">
            <summary>
            Positions the Tooltip to the top-right of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Position.BottomLeft">
            <summary>
            Positions the Tooltip to the bottom-left of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Position.BottomCenter">
            <summary>
            Positions the Tooltip to the bottom-center of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Position.BottomRight">
            <summary>
            Positions the Tooltip to the bottom-right of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Position.LeftTop">
            <summary>
            Positions the Tooltip to the left-top of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Position.LeftCenter">
            <summary>
            Positions the Tooltip to the left-center of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Position.LeftBottom">
            <summary>
            Positions the Tooltip to the left-bottom of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Position.RightTop">
            <summary>
            Positions the Tooltip to the right-top of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Position.RightCenter">
            <summary>
            Positions the Tooltip to the right-center of the target element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.Position.RightBottom">
            <summary>
            Positions the Tooltip to the right-bottom of the target element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.TipPointerPosition">
            <summary>
            Applicable tip positions are attached to the Tooltip.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.TipPointerPosition.Auto">
            <summary>
            Automatically adjusts the tip pointer position.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.TipPointerPosition.Start">
            <summary>
            Positions the tip pointer at the start of the Tooltip element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.TipPointerPosition.Middle">
            <summary>
            Positions the tip pointer in the middle of the Tooltip element.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Popups.TipPointerPosition.End">
            <summary>
            Positions the tip pointer at the end of the Tooltip element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.TooltipAnimationSettings">
            <summary>
            Animation options that are common for both open and close actions of the Tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipAnimationSettings.Delay">
            <summary>
            It is used to denote the delay value in milliseconds and indicating the waiting time before the animation begins.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipAnimationSettings.Duration">
            <summary>
            It is used to denote the duration of the animation that is completed per the animation cycle.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipAnimationSettings.Effect">
            <summary>
            It is used to apply the Animation effect on the Tooltip, during open and close actions.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.TooltipEventArgs">
            <summary>
            Interface for Tooltip event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipEventArgs.Cancel">
            <summary>
            It determines whether the current action needs to be prevented or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipEventArgs.CollidedPosition">
            <summary>
            It is used to denote the Collided Tooltip position.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipEventArgs.Element">
            <summary>
            It is used to denote the Tooltip element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipEventArgs.Event">
            <summary>
            It is used to specify the current event object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipEventArgs.HasText">
            <summary>
            It determines whether the tooltip content contains text character or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipEventArgs.Top">
            <summary>
            Specifies the clientY position of the target element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipEventArgs.Left">
            <summary>
            Specifies the clientX position of the target element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipEventArgs.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipEventArgs.Name">
            <summary>
            Specifies the name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipEventArgs.Target">
            <summary>
            It is used to denote the current target element where the Tooltip is to be displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipEventArgs.Type">
            <summary>
            It is used to denote the type of triggered event.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.TooltipEventArgs.Equals(System.Object)">
            <exclude/>
            <summary>
            Compares the obj.
            </summary>
            <param name="obj">obj.</param>
            <returns>="obj".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.TooltipEventArgs.GetHashCode">
            <summary>
            Gets the HashCode.
            </summary>
            <exclude/>
            <returns>int.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.AnimationModel">
            <summary>
            Interface for a class Animation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.AnimationModel.Close">
            <summary>
            Animation settings to be applied to the Tooltip when it is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.AnimationModel.Open">
            <summary>
            Animation settings to be applied on the Tooltip, while it is being shown over the target.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.SfTooltip">
            <summary>
            The SfTooltip component displays a pop-up containing information or a message when you hover, click, focus, or touch an element.
            </summary>
            <summary>
            The SfTooltip component displays a pop-up containing information or a message when you hover, click, focus, or touch an element.
            </summary>
            <summary>
            The SfTooltip component displays a pop-up containing information or a message when you hover, click, focus, or touch an element.
            </summary>
            <summary>
            The SfTooltip component displays a pop-up containing information or a message when you hover, click, focus, or touch an element.
            </summary>
            <summary>
            The SfTooltip component displays a pop-up containing information or a message when you hover, click, focus, or touch an element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.Closed">
            <summary>
            The event `Closed` will be fired when the Tooltip component gets closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.Opened">
            <summary>
            The event `Opened` will be fired after the Tooltip component gets opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.OnClose">
            <summary>
            The event `OnClose` will be fired before the Tooltip hides from the screen.
            The Tooltip close can be prevented by setting the cancel argument value to true.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.OnCollision">
            <summary>
            The event `OnCollision` will be fired for every collision fit calculation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.OnOpen">
            <summary>
            The event `OnOpen` will be fired before the Tooltip is displayed over the target element.
            When one of its arguments `cancel` is set to true, the Tooltip display can be prevented.
            This event is mainly used to refresh the Tooltip positions dynamically or to set customized styles in it and so on.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.OnRender">
            <summary>
            The event `OnRender` will be fired before the Tooltip and its contents will be added to the DOM.
            When one of its arguments `cancel` is set to true, the Tooltip can be prevented from rendering on the page.
            This event is mainly used to customize the Tooltip before it shows up on the screen.
            For example, to load the AJAX content or to set new animation effects on the Tooltip, this event can be opted.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.Created">
            <summary>
            The event `Created` will be fired after the Tooltip component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.Destroyed">
            <summary>
            The event `Destroyed` will be fired when the Tooltip component is destroyed.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.OnParametersSetAsync">
            <summary>
            Method invoked when any changes in component state occurs.
            </summary>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>="Task".</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.ChildContent">
            <exclude/>
            <summary>
            Defines the content which has to be passed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.ID">
            <exclude/>
            <summary>
            Defines the Id of the Tooltip component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.ContentTemplate">
            <exclude/>
            <summary>
            Defines the content template.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.Animation">
            <summary>
            It is used to customize the animation of the Tooltip while opening and closing.
            The animation property also allows you to set delay, duration, and various other effects of your choice.
            You can set the same or different animation options to the Tooltip when it is in the open or close state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.CloseDelay">
            <summary>
            To close the Tooltip after a specified delay in millisecond.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.Content">
            <summary>
            To display the content of the Tooltip which can be a string element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.CssClass">
            <summary>
            To customize the Tooltip which accepts the custom CSS class names that define specific
            user-defined styles and themes to be applied to the Tooltip element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.EnableHtmlSanitizer">
            <summary>
            This property has been deprecated as we achieve this behavior by using ChildContent of render fragment type and and Content as a string value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.EnablePersistence">
            <summary>
            As there are no properties required to persist in tooltip component, this property is deprecated.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.EnableRtl">
            <summary>
            To enable or disable the rendering component in the right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.WindowCollision">
            <summary>
            It is used to set the collision target element as page viewport (window) or Tooltip element, when using the target.
            If this property is enabled, tooltip will perform the collision calculation between the target elements.
            and viewport(window) instead of Tooltip element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.Height">
            <summary>
            To set the height of the Tooltip component which accepts the string values.
            When the Tooltip content gets overflowed due to the height value, then the scroll mode will be enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.IsSticky">
            <summary>
            To display the Tooltip in an open state until it is closed manually.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.MouseTrail">
            <summary>
            It allows the Tooltip to follow the mouse pointer moves over the specified target element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.OffsetX">
            <summary>
            It sets the space between the target and Tooltip element in X-axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.OffsetY">
            <summary>
            It sets the space between the target and Tooltip element in Y-axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.OpenDelay">
            <summary>
            To open the Tooltip after a specified delay in millisecond.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.OpensOn">
            <summary>
            To determine the type of open mode to display the Tooltip content.
            The available open modes are Auto, Hover, Click, Focus, and Custom.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.Position">
            <summary>
            To set the position of the Tooltip element with respect to the Target element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.ShowTipPointer">
            <summary>
            To show or hide the tip pointer of the Tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.Target">
            <summary>
            To denote the target selector where the Tooltip needs to be displayed.
            The target element is considered as the parent container.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.TipPointerPosition">
            <summary>
            It is used to customize the position of the tip pointer on the tooltip. The available options are Auto, Start, Middle, and End.
            When set to auto, the tip pointer gets auto adjusted within the space of the target's length and does not point outside.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.Width">
            <summary>
            To set the width of the Tooltip component which accepts a string value.
            When set to auto, the Tooltip width gets auto adjusted to display its content within the viewable screen.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.SfTooltip.HtmlAttributes">
            <summary>
            Adds the additional html attributes to the Tooltip element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.Open(System.Nullable{Microsoft.AspNetCore.Components.ElementReference},Syncfusion.Blazor.Popups.TooltipAnimationSettings)">
            <summary>
            It is used to show the Tooltip on the specified target with specific animation settings.
            You can also pass the additional arguments like target element in which the tooltip should appear and animation settings for the tooltip open action.
            </summary>
            <param name="element">element.</param>
            <param name="animation">animation.</param>
            <returns>="Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.OpenAsync(System.Nullable{Microsoft.AspNetCore.Components.ElementReference},Syncfusion.Blazor.Popups.TooltipAnimationSettings)">
            <summary>
            It is used to show the Tooltip on the specified target with specific animation settings.
            You can also pass the additional arguments like target element in which the tooltip should appear and animation settings for the tooltip open action.
            </summary>
            <param name="element">element.</param>
            <param name="animation">animation.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.Close(Syncfusion.Blazor.Popups.TooltipAnimationSettings)">
            <summary>
            It is used to hide the Tooltip with a specific animation effect. You can pass the animation settings for tooltip close action.
            </summary>
            <param name="animation">animation.</param>
            <returns>="Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.CloseAsync(Syncfusion.Blazor.Popups.TooltipAnimationSettings)">
            <summary>
            It is used to hide the Tooltip with a specific animation effect. You can pass the animation settings for tooltip close action.
            </summary>
            <param name="animation">animation.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.Refresh">
            <summary>
            Refresh the tooltip component when the target element is dynamically used.
            </summary>
            <returns>="Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.RefreshAsync">
            <summary>
            Refresh the tooltip component when the target element is dynamically used.
            </summary>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.RefreshPosition(System.Nullable{Microsoft.AspNetCore.Components.ElementReference})">
            <summary>
            Dynamically refreshes the tooltip element position based on the target element.
            </summary>
            <param name="target">target.</param>
            <returns>="Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.RefreshPositionAsync(System.Nullable{Microsoft.AspNetCore.Components.ElementReference})">
            <summary>
            Dynamically refreshes the tooltip element position based on the target element.
            </summary>
            <param name="target">target.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.GetEventsList">
            <summary>
            The method to get events list.
            </summary>
            <exclude/>
            <returns>eventList.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.GetProperties">
            <summary>
            The method to get Properties.
            </summary>
            <exclude/>
            <returns>properties.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.GetPorpertyChanges">
            <summary>
            The method to get Property changes.
            </summary>
            <exclude/>
            <returns>properties.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.CreateTooltip(System.Boolean)">
            <exclude/>
            <summary>
            Add/Removes the Tooltip Element.
            </summary>
            <param name="args">args.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.StickyClose">
            <exclude/>
            <summary>
            Closes the Tooltip Element.
            </summary>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.TriggerBeforeRenderEvent(System.String)">
            <exclude/>
            <summary>
            Triggers before render event.
            </summary>
            <returns>="Task".</returns>
            <param name="args">args.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.TriggerBeforeCollisionEvent(System.String)">
            <exclude/>
            <summary>
            Triggers before collision event.
            </summary>
            <param name="args">args.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.TriggerBeforeOpenEvent(System.String)">
            <exclude/>
            <summary>
            Triggers before open event.
            </summary>
            <param name="args">args.</param>
            <returns>"Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.TriggerOpenedEvent(System.String)">
            <exclude/>
            <summary>
            Triggers before opened event.
            </summary>
            <param name="args">args.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.TriggerBeforeCloseEvent(System.String)">
            <exclude/>
            <summary>
            Triggers before close event.
            </summary>
            <returns>"Task".</returns>
            <param name="args">args.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.SfTooltip.TriggerClosedEvent(System.String)">
            <exclude/>
            <summary>
            Triggers before closed event.
            </summary>
            <param name="args">args.</param>
            <returns>="Task".</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Popups.TooltipTemplates">
            <summary>
            Configure templates to display content within the tooltip component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipTemplates.ChildContent">
            <exclude/>
            <summary>
            Defines the content which has to be passed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.TooltipTemplates.Content">
            <exclude/>
            <summary>
            Defines the content to be passed.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Popups.TooltipTemplates.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Popups.Internal.DialogContent.ChildContent">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Spinner.SpinnerEvents">
            <summary>
            Configure event handlers for the Spinner component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SpinnerEvents.Created">
            <summary>
            Event triggers after the Spinner is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SpinnerEvents.OnBeforeOpen">
            <summary>
            Event triggers before the Spinner is opened.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SpinnerEvents.OnBeforeClose">
            <summary>
            Event triggers before the Spinner is closed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SpinnerEvents.Destroyed">
            <summary>
            Event triggers after the Spinner is destroyed.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.SpinnerEvents.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Spinner.SpinnerTemplates">
            <summary>
            Configure the template of the Spinner.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SpinnerTemplates.Template">
            <summary>
            Defines the template of the Spinner.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.SpinnerTemplates.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Spinner.SfSpinner">
            <summary>
            Represents the spinner component that displays when spinner is shown.
            </summary>
            <exclude/> 
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.SfSpinner.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.SfSpinner.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.SfSpinner.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender"> Set to true if this is the first time OnAfterRender(Boolean) has been invoked.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SfSpinner.Label">
            <summary>
            Specifies the label for the Spinner.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SfSpinner.CssClass">
            <summary>
            Specifies the CSS class name that can be appended with the root element of the Spinner.
            One or more custom CSS classes can be added to a Spinner.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SfSpinner.ChildContent">
            <exclude/>
            <summary>
            Specified content of the Spinner element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SfSpinner.Visible">
            <summary>
            Specifies the value that represents whether the Spinner component is visible.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SfSpinner.VisibleChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SfSpinner.Size">
            <summary>
            Specifies the size of the Spinner.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SfSpinner.ZIndex">
            <summary>
            Specifies the z-order for the Spinner.
            By default the value is AUTO.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SfSpinner.Type">
            <summary>
            Specifies a theme of the spinner.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.SfSpinner.Show">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.SfSpinner.Hide">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.SfSpinner.ShowAsync">
            <summary>
            Shows the spinner.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.SfSpinner.HideAsync">
            <summary>
            Hides the spinner.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.SfSpinner.OnPropertyChange(System.Collections.Generic.List{System.String})">
            <summary>
            Method invoked when property has been changed.
            </summary>
            <param name="changedKeys"> Specifies the updated properties.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Spinner.SpinnerType">
            <summary>
            Specify the theme that the Spinner to be rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Spinner.SpinnerType.None">
            <summary>
            Default value is None
            Automatically, picks the application-level theme.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Spinner.SpinnerType.Material">
            <summary>
            Choose to render the Material spinner.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Spinner.SpinnerType.Bootstrap4">
            <summary>
            Choose to render the Bootstrap 4 spinner.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Spinner.SpinnerType.Bootstrap5">
            <summary>
            Choose to render the Bootstrap 5 spinner.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Spinner.SpinnerType.Fabric">
            <summary>
            Choose to render the Fabric spinner.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Spinner.SpinnerType.Bootstrap">
            <summary>
            Choose to render the Bootstrap spinner.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Spinner.SpinnerType.HighContrast">
            <summary>
            Choose to render the High-contrast spinner.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Spinner.SpinnerType.Tailwind">
            <summary>
            Choose to render the Tailwind spinner.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Spinner.SpinnerEventArgs">
            <summary>
            Provides data for the OnBeforeOpen and OnBeforeClose events.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.SpinnerEventArgs.Cancel">
            <summary>
            Set cancel as true to prevent showing or hiding of the spinner.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Spinner.Internal.Bootstrap">
            <summary>
            Represents the Spinner's Bootstrap class.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.Internal.Bootstrap.Show">
            <summary>
            Gets or sets a value indicating whether visible status of the spinner.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.Internal.Bootstrap.TypeUpdate">
            <summary>
            Gets or sets a value indicating whether type of the spinner.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.Internal.Bootstrap.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.Internal.Bootstrap.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Spinner.Internal.Bootstrap4">
            <summary>
            Represents the Spinner's Bootstrap 4 class.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.Internal.Bootstrap4.ComponentDispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.Internal.Bootstrap4.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Spinner.Internal.FabricHighContrast">
            <summary>
            Represents the Spinner's Fabric and High-Contrast class.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.Internal.FabricHighContrast.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Spinner.Internal.Material">
            <summary>
            Represents the Spinner Material class.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.Internal.Material.Show">
            <summary>
            Gets or sets a value indicating whether visible status of the spinner.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Spinner.Internal.Material.TypeUpdate">
            <summary>
            Gets or sets a value indicating whether type of the spinner.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.Internal.Material.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Spinner.Internal.Material.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Spinner.Internal.SpinnerBase">
            <summary>
            Represents the common methods that are used in all the themes.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.ButtonGroupButton">
            <summary>
            ButtonGroupButton  creates a button element that triggers an event on its click action.
            It can contain a text, an image, or both.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.ChildContent">
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the button element. The button types and
            styles can be defined by using this property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the button that is used to include an icon.
            Button can also include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.Disabled">
            <summary>
            Specifies a value that indicates whether the button is enabled or disabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.Selected">
            <summary>
            Specifies a value that indicates whether the button is selected or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.Name">
            <summary>
            Defines name attribute for the input element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.Value">
            <summary>
            Defines value attribute for the input element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.Content">
            <summary>
            Defines the text content of the button element and it will support only string type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.IsToggle">
            <summary>
            Makes the button as toggleable, when set to true. When you click it, the state changes from normal to active and viceversa.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.IsPrimary">
            <summary>
            Allows the appearance of the button to be enhanced and visually appealing when set to true.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.IconPosition">
            <summary>
            Positions the icon based on the text content in the button and its default value is Left.
            The possible values are:
            - Left: The icon will be positioned to the left of the text content.
            - Right: The icon will be positioned to the right of the text content.
            - Top: The icon will be positioned to the top of the text content.
            - Bottom: The icon will be positioned to the bottom of the text content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.HtmlAttributes">
            <exclude/>
            <summary>
            You can add the additional html attributes such as id, native events etc., to the ButtonGroup element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ButtonGroupButton.SelectedChanged">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.SfButtonGroup">
            <summary>
            A ButtonGroup is a container that groups a series of buttons on a single line. It has an optional radio button (single selection) and checkbox (multiple selection) behavior.
            It may contain DropDownButton or SplitButton component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfButtonGroup.ChildContent">
            <exclude/>
            <summary>
            Sets content for buttongroup element including HTML and its customizations.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfButtonGroup.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the buttongroup container element. The ButtonGroup types and
            size customizations can be achieved by using this property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfButtonGroup.HtmlAttributes">
            <exclude/>
            <summary>
            You can add the additional html attributes such as id, title etc., to the ButtonGroup container element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfButtonGroup.Mode">
            <summary>
            Specifies the selection modes. The possible values are,
             `Default`: Default selection in the ButtonGroup.
             `Single`: Allows you to select a single button in the ButtonGroup.
             `Multiple`: Allows you to select more than one button in the ButtonGroup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfButtonGroup.Created">
            <summary>
            Triggers once the component rendering is completed.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.SelectionMode">
            <summary>
            Defines the selection mode of ButtonGroup.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.SelectionMode.Default">
            <summary>
            Default selection in the ButtonGroup.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.SelectionMode.Single">
            <summary>
            Allows you to select a single button in the ButtonGroup.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.SelectionMode.Multiple">
            <summary>
            Allows you to select more than one button in the ButtonGroup.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.SplitButtonIconPosition">
            <summary>
            Defines the icon position of Split Button and DropDown Button.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.SplitButtonIconPosition.Left">
            <summary>
            To position icon left to content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.SplitButtonIconPosition.Top">
            <summary>
            To position icon above the content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.AnimationEffect">
            <summary>
            Defines the animation effect of progress button.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.AnimationEffect.None">
            <summary>
            No effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.AnimationEffect.SlideLeft">
            <summary>
            To set the slide left effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.AnimationEffect.SlideRight">
            <summary>
            To set the slide right effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.AnimationEffect.SlideUp">
            <summary>
            To set the slide up effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.AnimationEffect.SlideDown">
            <summary>
            To set the slide down effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.AnimationEffect.ZoomIn">
            <summary>
            To set the zoom in effect.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.AnimationEffect.ZoomOut">
            <summary>
            To set the zoom out effect.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.SpinPosition">
            <summary>
            Defines the spin position of progress button.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.SpinPosition.Left">
            <summary>
            To position spinner left to content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.SpinPosition.Right">
            <summary>
            To position spinner right to content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.SpinPosition.Top">
            <summary>
            To position spinner top to content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.SpinPosition.Bottom">
            <summary>
            To position spinner bottom to content.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.SplitButtons.SpinPosition.Center">
            <summary>
            To position spinner at center.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.BeforeOpenCloseMenuEventArgs">
            <summary>
            Interface for before open / close event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.BeforeOpenCloseMenuEventArgs.Cancel">
            <summary>
            Used to prevent dropdown menu open.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.BeforeOpenCloseMenuEventArgs.Element">
            <summary>
            Specifies the button or dropdown element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.BeforeOpenCloseMenuEventArgs.Event">
            <summary>
            Specifies the Event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.BeforeOpenCloseMenuEventArgs.Items">
            <summary>
            Specifies the dropdown items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.BeforeOpenCloseMenuEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.MenuEventArgs">
            <summary>
            Interface for before item render / select event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.MenuEventArgs.Element">
            <summary>
            Specifies the selected list element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.MenuEventArgs.Item">
            <summary>
            Specifies the selected dropdown item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.MenuEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.MenuEventArgs.Event">
            <summary>
            Specifies the selected dropdown item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.OpenCloseMenuEventArgs">
            <summary>
            Interface for open/close event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.OpenCloseMenuEventArgs.Element">
            <summary>
            Specifies the dropdown element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.OpenCloseMenuEventArgs.Items">
            <summary>
            Specifies the button or dropdown items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.OpenCloseMenuEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.ProgressEventArgs">
            <summary>
            Interface for progress event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressEventArgs.CurrentDuration">
            <summary>
            Indicates the current duration of the progress.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressEventArgs.Percent">
            <summary>
            Indicates the current state of progress in percentage.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressEventArgs.Step">
            <summary>
            Specifies the interval.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownButtonEvents.OnClose">
            <summary>
            Triggers before closing the DropDownButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownButtonEvents.OnItemRender">
            <summary>
            Triggers while rendering each Popup item of DropDownButton.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownButtonEvents.OnOpen">
            <summary>
            Triggers before opening the DropDownButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownButtonEvents.Closed">
            <summary>
            Triggers while closing the DropDownButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownButtonEvents.Created">
            <summary>
            Triggers once the component rendering is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownButtonEvents.Opened">
            <summary>
            Triggers while opening the DropDownButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownButtonEvents.ItemSelected">
            <summary>
            Triggers while selecting action item in DropDownButton popup.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.SfDropDownButton">
            <summary>
            DropDownButton component is used to toggle contextual overlays for displaying list of action items.
            It can contain both text and images.
            </summary>
            <summary>
            DropDownButton component is used to toggle contextual overlays for displaying list of action items.
            It can contain both text and images.
            </summary>
            <summary>
            DropDownButton component is used to toggle contextual overlays for displaying list of action items.
            It can contain both text and images.
            </summary>
            <summary>
            DropDownButton component is used to toggle contextual overlays for displaying list of action items.
            It can contain both text and images.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfDropDownButton.ChildContent">
            <summary>
            Sets content for button element including HTML and its customizations.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfDropDownButton.Content">
            <summary>
            Defines the text content of the button element and it will support only string type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfDropDownButton.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the DropDownButton element. The
            DropDownButton size and styles can be customized by using this.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfDropDownButton.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the DropDownButton that is used to
            include an icon. DropDownButton can also include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfDropDownButton.IconPosition">
            <summary>
            Positions the icon before/top of the text content in the DropDownButton. The possible values are:
            - Left: The icon will be positioned to the left of the text content.
            - Top: The icon will be positioned to the top of the text content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfDropDownButton.Items">
            <summary>
            Specifies action items with its properties which will be rendered in DropDownButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfDropDownButton.Disabled">
            <summary>
            Specifies a value that indicates whether the DropDownButton is `Disabled` or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfDropDownButton.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfDropDownButton.PopupContent">
            <summary>
            To specify the custom popup content instead of Items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfDropDownButton.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as id, title etc., to the dropdown button element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfDropDownButton.AddItems(System.Collections.Generic.List{Syncfusion.Blazor.SplitButtons.DropDownMenuItem},System.String,System.Boolean)">
            <summary>
            Adds a new item to the menu. By default, new item appends to the list as the last item,
            but you can insert based on the text parameter.
            </summary>
            <param name="items">Specifies the list of items to be added.</param>
            <param name="text">Specifies the existing item text. If specified, adds the items of the collection before this item.
            If not specified, adds the items of the collection to the end of the list.</param>
            <param name="isUniqueId">Set true if text parameter is a unique id.</param>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfDropDownButton.RemoveItems(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Removes the items from the menu.
            </summary>
            <param name="items">Specifies the list of items to be removed.</param>
            <param name="isUniqueId">Set true if text parameter is a unique id.</param>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfDropDownButton.Toggle">
            <summary>
            To open/close DropDownButton popup based on current state of the DropDownButton.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfDropDownButton.ButtonClickAsync(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.SfProgressButton">
            <summary>
            ProgressButton visualizes the progression of an operation to indicate the user that a process is happening in the background with visual representation.
            </summary>
            <summary>
            ProgressButton visualizes the progression of an operation to indicate the user that a process is happening in the background with visual representation.
            </summary>
            <summary>
            ProgressButton visualizes the progression of an operation to indicate the user that a process is happening in the background with visual representation.
            </summary>
            <summary>
            ProgressButton visualizes the progression of an operation to indicate the user that a process is happening in the background with visual representation.
            </summary>
            <summary>
            ProgressButton visualizes the progression of an operation to indicate the user that a process is happening in the background with visual representation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.OnClick">
            <summary>
            Triggers when button element is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.ChildContent">
            <summary>
            Sets content for progress button element including HTML and its customizations.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.Content">
            <summary>
            Defines the text content of the progress button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.CssClass">
            <summary>
            Specifies the root CSS class of the progress button that allows customization of component’s appearance.
            The progress button types, styles, and size can be achieved by using this property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.Disabled">
            <summary>
            Enables or disables the progress button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.Duration">
            <summary>
            Specifies the duration of progression in the progress button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.EnableProgress">
            <summary>
            Enables or disables the background filler UI in the progress button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.EnableRtl">
            <summary>
            Enables or disables the Rtl support.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as id, title etc., to the progress button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the progress button that is used to include an icon.
            Progress button can also include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.IconPosition">
            <summary>
            Positions an icon in the progress button. The possible values are:
             Left: The icon will be positioned to the left of the text content.
             Right: The icon will be positioned to the right of the text content.
             Top: The icon will be positioned at the top of the text content.
             Bottom: The icon will be positioned at the bottom of the text content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.IsPrimary">
            <summary>
            Allows the appearance of the progress button to be enhanced and visually appealing when set to true.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfProgressButton.IsToggle">
            <summary>
            Makes the progress button toggle, when set to true. When you click it, the state changes from normal to active.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfProgressButton.Start(System.Double)">
            <summary>
            Starts the button progress at the specified percent.
            </summary>
            <param name="percent">Specifies the Progress percent.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfProgressButton.StartAsync(System.Double)">
            <summary>
            Starts the button progress at the specified percent.
            </summary>
            <param name="percent">Specifies the Progress percent.</param>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfProgressButton.Stop">
            <summary>
            Stops the button progress.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfProgressButton.StopAsync">
            <summary>
            Stops the button progress.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfProgressButton.FocusIn">
            <summary>
            Sets the focus to ProgressButton.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfProgressButton.FocusAsync">
            <summary>
            Sets the focus to ProgressButton.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfProgressButton.ProgressComplete">
            <summary>
            Complete the button progress.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfProgressButton.EndProgressAsync">
            <summary>
            Complete the button progress.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfProgressButton.Click">
            <summary>
            Click the button element.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfProgressButton.ClickAsync">
            <summary>
            Click the button element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.ProgressButtonAnimationSettings">
            <summary>
            Specifies the animation settings for the progress button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressButtonAnimationSettings.Duration">
            <summary>
            Specifies the duration taken to animate.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressButtonAnimationSettings.Easing">
            <summary>
            Specifies the animation timing function.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressButtonAnimationSettings.Effect">
            <summary>
            Specifies the effect of animation.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.ProgressButtonEvents">
            <summary>
            Used to configure the progress button events.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressButtonEvents.OnBegin">
            <summary>
            Triggers when the progress starts.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressButtonEvents.Created">
            <summary>
            Triggers once the component rendering is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressButtonEvents.OnEnd">
            <summary>
            Triggers when the progress is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressButtonEvents.OnFailure">
            <summary>
            Triggers when the progress is incomplete.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressButtonEvents.Progressing">
            <summary>
            Triggers in specified intervals.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.ProgressButtonSpinSettings">
            <summary>
            Specifies the spin settings for the progress button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressButtonSpinSettings.Position">
            <summary>
            Specifies the position of a spinner in the progress button. The possible values are:
             Left: The spinner will be positioned to the left of the text content.
             Right: The spinner will be positioned to the right of the text content.
             Top: The spinner will be positioned at the top of the text content.
             Bottom: The spinner will be positioned at the bottom of the text content.
             Center: The spinner will be positioned at the center of the progress button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressButtonSpinSettings.SpinTemplate">
            <summary>
            Specifies the template content to be displayed in a spinner.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ProgressButtonSpinSettings.Width">
            <summary>
            Sets the width of a spinner.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.ClickEventArgs">
            <summary>
            Interface for Split Button click event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ClickEventArgs.Element">
            <summary>
            Specifies the primary split button element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.ClickEventArgs.Name">
            <summary>
            Specifies name of the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.SplitButtons.SfSplitButton">
            <summary>
            SplitButton component has primary and secondary button. Primary button is used to select 
            default action and secondary button is used to toggle contextual overlays for displaying list of 
            action items. It can contain both text and images.
            </summary>
            <summary>
            SplitButton component has primary and secondary button. Primary button is used to select 
            default action and secondary button is used to toggle contextual overlays for displaying list of 
            action items. It can contain both text and images.
            </summary>
            <summary>
            SplitButton component has primary and secondary button. Primary button is used to select 
            default action and secondary button is used to toggle contextual overlays for displaying list of 
            action items. It can contain both text and images.
            </summary>
            <summary>
            SplitButton component has primary and secondary button. Primary button is used to select 
            default action and secondary button is used to toggle contextual overlays for displaying list of 
            action items. It can contain both text and images.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfSplitButton.ChildContent">
            <summary>
            Sets content for primary button element including HTML and its customizations.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfSplitButton.Content">
            <summary>
            Defines the text `Content` of the Button element and it will support only string type.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfSplitButton.CssClass">
            <summary>
            Defines class/multiple classes separated by a space in the SplitButton element. The SplitButton
            size and styles can be customized by using this.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfSplitButton.Disabled">
            <summary>
            Specifies a value that indicates whether the SplitButton is disabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfSplitButton.EnableRtl">
            <summary>
            Enable or disable rendering component in right to left direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfSplitButton.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the SplitButton that is used to include an
            icon. SplitButton can also include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfSplitButton.IconPosition">
            <summary>
            Positions the icon before/top of the text content in the SplitButton. The possible values are
            - Left: The icon will be positioned to the left of the text content.
            - Top: The icon will b  positioned to the top of the text content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfSplitButton.Items">
            <summary>
            Specifies action items with its properties which will be rendered as SplitButton secondary button popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfSplitButton.PopupContent">
            <summary>
            Allows to specify the custom popup content instead of Items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SfSplitButton.HtmlAttributes">
            <summary>
            You can add the additional html attributes such as id, title etc., to the primary button element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfSplitButton.AddItems(System.Collections.Generic.List{Syncfusion.Blazor.SplitButtons.DropDownMenuItem},System.String,System.Boolean)">
            <summary>
            Adds a new item to the menu. By default, new item appends to the list as the last item,
            but you can insert based on the text parameter.
            </summary>
            <param name="items">Specifies the list of items to be added.</param>
            <param name="text">Specifies the existing item text. If specified, adds the items of the collection before this item.
            If not specified, adds the items of the collection to the end of the list.</param>
            <param name="isUniqueId">Set true if text parameter is a unique id.</param>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfSplitButton.RemoveItems(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Removes the items from the menu.
            </summary>
            <param name="items">Specifies the list of items to be removed.</param>
            <param name="isUniqueId">Set true if text parameter is a unique id.</param>
        </member>
        <member name="M:Syncfusion.Blazor.SplitButtons.SfSplitButton.Toggle">
            <summary>
            To open/close Split Button popup based on current state of the Split Button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SplitButtonEvents.OnClose">
            <summary>
            Triggers before closing the SplitButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SplitButtonEvents.OnItemRender">
            <summary>
            Triggers while rendering each Popup item of SplitButton.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SplitButtonEvents.OnOpen">
            <summary>
            Triggers before opening the SplitButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SplitButtonEvents.Clicked">
            <summary>
            Triggers when the primary button of SplitButton has been clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SplitButtonEvents.Closed">
            <summary>
            Triggers while closing the SplitButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SplitButtonEvents.Created">
            <summary>
            Triggers once the component rendering is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SplitButtonEvents.Opened">
            <summary>
            Triggers while opening the SplitButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.SplitButtonEvents.ItemSelected">
            <summary>
            Triggers while selecting action item of SplitButton popup.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownMenuItem.ChildContent">
            <summary>
            Set custom content for items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownMenuItem.IconCss">
            <summary>
            Defines class/multiple classes separated by a space for the item that is used to include an icon.
            Action item can include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownMenuItem.Separator">
            <summary>
            Specifies separator between the items. Separator are horizontal lines used to group action items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownMenuItem.Disabled">
            <summary>
            Used to enable or disable the action items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownMenuItem.Text">
            <summary>
            Specifies text for item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownMenuItem.Url">
            <summary>
            Specifies url for item that creates the anchor link to navigate to the url provided.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownMenuItem.Id">
            <summary>
            Specifies unique id for item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownMenuItem.HtmlAttributes">
            <summary>
            You can add the additional HTML attributes such as style, title etc., to the item
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.SplitButtons.DropDownMenuItems.ChildContent">
            <exclude />
        </member>
    </members>
</doc>
